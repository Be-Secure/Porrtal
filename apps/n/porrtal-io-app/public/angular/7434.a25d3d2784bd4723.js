"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[7434],{67434:(W,M,a)=>{a.r(M),a.d(M,{default:()=>v});var p=a(15861),D=a(17626),d=(a(8314),a(62208)),P=(a(63290),a(90912),a(85931),a(26584),a(76898)),f=a(84682),y=a(36859),U=a(39351),K=a(13112),n=a(55376);class i{constructor(t,r){this.offset=t,this.extent=r}}let l=class extends K.Z{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}update(_,t){var r=this;return(0,p.Z)(function*(){const s=t.schema.processors[0];"heatmap"===s.type&&(0,f.Hg)(r._schema,s)&&(_.mesh=!0,r._schema=s)})()}onTileUpdate(_){for(const t of _.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(_){return this._tileKeyToFeatureSets.delete(_.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:_.id,data:{clear:!0}})}onTileMessage(_,t,r){var s=this;return(0,p.Z)(function*(){s._tileKeyToFeatureSets.has(_.key.id)||s._tileKeyToFeatureSets.set(_.key.id,new Map);const e=s._tileKeyToFeatureSets.get(_.key.id);if((0,d.pC)(t.addOrUpdate)&&t.addOrUpdate.hasFeatures&&e.set(t.addOrUpdate.instance,t),t.end){const o=[],O=function m(_){const t=_.key,r=new Map,s=256,e=U.I_,o=_.tileInfoView.tileInfo.isWrappable;return r.set((0,n.M)(t,-1,-1,o).id,new i([-e,-e],[e-s,e-s,e,e])),r.set((0,n.M)(t,0,-1,o).id,new i([0,-e],[0,e-s,e,e])),r.set((0,n.M)(t,1,-1,o).id,new i([e,-e],[0,e-s,s,e])),r.set((0,n.M)(t,-1,0,o).id,new i([-e,0],[e-s,0,e,e])),r.set((0,n.M)(t,1,0,o).id,new i([e,0],[0,0,s,e])),r.set((0,n.M)(t,-1,1,o).id,new i([-e,e],[e-s,0,e,s])),r.set((0,n.M)(t,0,1,o).id,new i([0,e],[0,0,e,s])),r.set((0,n.M)(t,1,1,o).id,new i([e,e],[0,0,s,s])),r}(_);s._tileKeyToFeatureSets.forEach((u,E)=>{if(E===_.key.id)u.forEach(h=>(0,d.yw)(h.addOrUpdate,c=>o.push(c)));else if(O.has(E)){const h=O.get(E),[c,R]=h.offset;u.forEach(L=>(0,d.yw)(L.addOrUpdate,j=>{const B=j.transform(c,R,1,1);o.push(B)}))}});const T=(0,y.QM)(o,s._schema.mesh,512,512);return s.remoteClient.invoke("tileRenderer.onTileData",{tileKey:_.key.id,intensityInfo:T},{...r,transferList:[T.matrix]})}})()}onTileError(_,t,r){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:_.id,error:t},r)}};l=(0,D._)([(0,P.j)("esri.views.2d.layers.features.processors.HeatmapProcessor")],l);const v=l}}]);