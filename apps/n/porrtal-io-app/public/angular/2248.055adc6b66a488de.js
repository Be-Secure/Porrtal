/*
Copyright 2022 Comcast Cable Communications Management, LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[2248],{72248:(z,T,t)=>{t.r(T),t.d(T,{default:()=>A});var m,C=t(15861),r=t(17626),c=t(84792),g=t(26584),B=t(2076),v=t(62208),j=t(99959),l=t(77712),S=(t(85931),t(90912),t(76898)),h=t(65234),R=t(2004),U=t(65401),x=t(44917),Z=t(552),L=t(30346),I=t(99555),b=t(2584);const u=new(t(68511).f)("0/0/0",0,0,0,void 0);let p=m=class extends((0,Z.h)((0,I.M)((0,L.Q)(x.Z)))){constructor(){super(...arguments),this.tileInfo=b.Z.create({spatialReference:h.Z.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new R.Z(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,h.Z.WebMercator),this.spatialReference=h.Z.WebMercator}getTileBounds(e,o,a,n){const i=n||(0,U.Ue)();return u.level=e,u.row=o,u.col=a,u.extent=i,this.tileInfo.updateTileInfo(u),u.extent=void 0,i}fetchTile(e,o,a,n={}){const{signal:i}=n,d=this.getTileUrl(e,o,a),y={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,c.default)(d??"",y).then(M=>M.data)}fetchImageBitmapTile(e,o,a,n={}){var i=this;return(0,C.Z)(function*(){const{signal:d}=n;if(i.fetchTile!==m.prototype.fetchTile)return createImageBitmap(yield i.fetchTile(e,o,a,n));const y=i.getTileUrl(e,o,a),M={responseType:"blob",signal:d,query:{...i.refreshParameters}},{data:K}=yield(0,c.default)(y??"",M);return createImageBitmap(K)})()}getTileUrl(){throw new g.Z("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,r._)([(0,l.Cb)({type:b.Z})],p.prototype,"tileInfo",void 0),(0,r._)([(0,l.Cb)({type:["show","hide"]})],p.prototype,"listMode",void 0),(0,r._)([(0,l.Cb)({readOnly:!0,value:"base-tile"})],p.prototype,"type",void 0),(0,r._)([(0,l.Cb)({nonNullable:!0})],p.prototype,"fullExtent",void 0),(0,r._)([(0,l.Cb)()],p.prototype,"spatialReference",void 0),p=m=(0,r._)([(0,S.j)("esri.layers.BaseTileLayer")],p);const w=p;var O=t(49286);const f=new B.X({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let s=class extends((0,Z.h)((0,O.q)((0,j.R)(w)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new b.Z({size:[256,256],dpi:96,origin:{x:-20037508.342787,y:20037508.342787,spatialReference:h.Z.WebMercator},spatialReference:h.Z.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763.795777},{level:2,resolution:39135.7584820001,scale:147914381.897889},{level:3,resolution:19567.8792409999,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.99245256249,scale:4622324.434309},{level:8,resolution:611.49622628138,scale:2311162.217155},{level:9,resolution:305.748113140558,scale:1155581.108577},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return(0,v.pC)(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return f.toJSON(this.style)}get bingLogo(){return(0,v.pC)(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(e){return this.addResolvingPromise(this.key?this._getMetadata():this.portalUrl?this._getPortalBingKey().then(()=>this._getMetadata()):Promise.reject(new g.Z("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,o,a){if(!this.loaded||(0,v.Wi)(this.bingMetadata))return null;const n=this.bingMetadata.resourceSets[0].resources[0],i=n.imageUrlSubdomains[o%n.imageUrlSubdomains.length],d=this._getQuadKey(e,o,a);return n.imageUrl.replace("{subdomain}",i).replace("{quadkey}",d)}fetchAttributionData(){var e=this;return(0,C.Z)(function*(){return e.load().then(()=>(0,v.Wi)(e.bingMetadata)?null:{contributors:e.bingMetadata.resourceSets[0].resources[0].imageryProviders.map(o=>({attribution:o.attribution,coverageAreas:o.coverageAreas.map(a=>({zoomMin:a.zoomMin,zoomMax:a.zoomMax,score:1,bbox:[a.bbox[0],a.bbox[1],a.bbox[2],a.bbox[3]]}))}))})})()}_getMetadata(){return(0,c.default)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${{road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style]}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then(o=>{const a=o.data;if(200!==a.statusCode)throw new g.Z("bingmapslayer:getmetadata",a.statusDescription);if(this.bingMetadata=a,0===this.bingMetadata.resourceSets.length)throw new g.Z("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new g.Z("bingmapslayer:getmetadata","no bing resources")}).catch(o=>{throw new g.Z("bingmapslayer:getmetadata",o.message)})}_getPortalBingKey(){return(0,c.default)(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then(e=>{if(!e.data.bingKey)throw new g.Z("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey}).catch(e=>{throw new g.Z("bingmapslayer:getportalbingkey",e.message)})}_getQuadKey(e,o,a){let n="";for(let i=e;i>0;i--){let d=0;const y=1<<i-1;0!=(a&y)&&(d+=1),0!=(o&y)&&(d+=2),n+=d.toString()}return n}};(0,r._)([(0,l.Cb)({json:{read:!1,write:!1},value:null})],s.prototype,"bingMetadata",null),(0,r._)([(0,l.Cb)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],s.prototype,"type",void 0),(0,r._)([(0,l.Cb)({type:b.Z})],s.prototype,"tileInfo",void 0),(0,r._)([(0,l.Cb)({type:String,readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"copyright",null),(0,r._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"key",void 0),(0,r._)([(0,l.Cb)({type:f.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:f.read}}})],s.prototype,"style",void 0),(0,r._)([(0,l.Cb)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],s.prototype,"operationalLayerType",null),(0,r._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"culture",void 0),(0,r._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"region",void 0),(0,r._)([(0,l.Cb)({type:String,json:{write:!0,read:!0}})],s.prototype,"portalUrl",void 0),(0,r._)([(0,l.Cb)({type:Boolean,json:{write:!1,read:!1}})],s.prototype,"hasAttributionData",void 0),(0,r._)([(0,l.Cb)({type:String,readOnly:!0})],s.prototype,"bingLogo",null),s=(0,r._)([(0,S.j)("esri.layers.BingMapsLayer")],s);const A=s}}]);