/*
Copyright 2022 Comcast Cable Communications Management, LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[6003],{36003:(rr,Ue,T)=>{T.r(Ue),T.d(Ue,{default:()=>er});var z=T(15861),w=T(17626),at=T(73281),Pe=T(90885),J=T(26584),P=T(62208),ot=T(99959),ge=T(10699),lt=T(32917),B=T(77712),ct=(T(85931),T(8314)),ut=T(90912),ft=T(55342),dt=T(68653),ie=T(76898),mt=T(44917),ht=T(552),pt=T(50107),_e=(T(29132),T(84792)),Ge=T(63290),Me=T(83960),yt=T(37053),$e=T(38305),Ne=T(13812),gt=T(25982),xt=T(9548),me=T(2584),le=T(79781),Le=T(30994),xe=T(8341),It=T(54805),vt=T(37084),Y=T(2004),Q=T(65234);const Ve=Ge.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),bt=i=>{let t=class extends i{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(s){this._set("url",(0,$e.Nm)(s,Ve))}set renderer(s){this._set("renderer",s),this.updateRenderer()}convertVectorFieldData(s,a){var c=this;return(0,z.Z)(function*(){if((0,P.Wi)(s))return null;const f=c._rasterJobHandler.instance,u=c.rasterInfo.dataType;return f?f.convertVectorFieldData({pixelBlock:s,dataType:u},a):(0,Le.KC)(s,u)})()}createFlowMesh(s,a){var c=this;return(0,z.Z)(function*(){const f=c._rasterJobHandler.instance;return f?f.createFlowMesh(s,a):(0,vt.GE)(s.meshType,s.simulationSettings,s.flowData,(0,P.pC)(a.signal)?a.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(s){const{multidimensionalInfo:a}=this.rasterInfo;if((0,P.Wi)(a))return s;let c=s.multidimensionalDefinition||this.multidimensionalDefinition;!(0,P.Wi)(c)&&c.length||(c=(0,le.Tj)(this.raster.rasterInfo));const f=s.timeExtent||this.timeExtent;if((0,P.pC)(c)&&(0,P.pC)(f)&&((0,P.pC)(f.start)||(0,P.pC)(f.end))){c=c.map(S=>S.clone());const u=a.variables.find(({name:S})=>S===c[0].variableName)?.dimensions?.find(({name:S})=>"StdTime"===S),m=c.find(({dimensionName:S})=>"StdTime"===S);if(!u||!m)return{...s,multidimensionalDefinition:null};const{start:d,end:h}=f,y=(0,P.Wi)(d)?null:d.getTime(),x=(0,P.Wi)(h)?null:h.getTime(),p=y??x,g=x??y;if((0,P.pC)(u.values)){const S=u.values.filter(v=>{if(Array.isArray(v)){if(p===g)return v[0]<=p&&v[1]>=p;const I=v[0]>=p&&v[1]<=g||v[0]<p&&v[1]>g;return v[0]<=p&&v[1]>p||v[0]<g&&v[1]>=g||I}return p===g?v===p:v>=p&&v<=g});if(S.length){const v=S.sort((b,I)=>p===g?(b[0]??b)-(I[0]??I):Math.abs((b[1]??b)-g)-Math.abs((I[1]??I)-g))[0];m.values=[v]}else c=null}else if(u.hasRegularIntervals&&u.extent){const[S,v]=u.extent;p>v||g<S?c=null:m.values=p===g?[p]:[Math.max(S,p),Math.min(v,g)]}}return{...s,multidimensionalDefinition:c}}updateRenderer(){var s=this;return(0,z.Z)(function*(){if(!s.loaded||JSON.stringify(s._cachedRendererJson)===JSON.stringify(s.renderer))return;const a=s._rasterJobHandler.instance;a&&(s.symbolizer.rendererJSON=(0,xe.ol)(s.renderer.toJSON()),s.symbolizer.bind(),yield a.updateSymbolizer(s.symbolizer),s._cachedRendererJson=s.renderer.toJSON())})()}applyRenderer(s,a){var c=this;return(0,z.Z)(function*(){const f=s&&s.pixelBlock;if(!((0,P.pC)(f)&&f.pixels&&f.pixels.length>0))return null;let u;yield c.updateRenderer();const m=c._rasterJobHandler.instance,{bandIds:d}=c;return u=m?yield m.symbolize({...s,simpleStretchParams:a,bandIds:d}):c.symbolizer.symbolize({...s,simpleStretchParams:a,bandIds:d}),u})()}getTileUrl(s,a,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${s}/${a}/${c}`:""}getCompatibleTileInfo(s,a,c=!1){if(!this.loaded||(0,P.Wi)(a))return null;if(c&&s.equals(this.spatialReference))return this.tileInfo;const f=(0,yt.C5)(s);return me.Z.create({size:256,spatialReference:s,origin:f?{x:f.origin[0],y:f.origin[1]}:{x:a.xmin,y:a.ymax}})}getCompatibleFullExtent(s){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(s)||(this._compatibleFullExtent=this.raster.computeExtent(s)),this._compatibleFullExtent):null}fetchTile(s,a,c,f={}){var u=this;return(0,z.Z)(function*(){if(f.requestAsImageElement){const m=u.getTileUrl(s,a,c);return(0,_e.default)(m,{responseType:"image",query:{...u.refreshParameters,...u.raster.ioConfig.customFetchParameters},signal:f.signal}).then(d=>d.data)}return(0,P.pC)(u.rasterInfo.multidimensionalInfo)&&(f=u.normalizeRasterFetchOptions(f),(0,P.Wi)(f.multidimensionalDefinition))?{extent:u.raster.getTileExtentFromTileInfo(s,a,c,f.tileInfo||u.rasterInfo.storageInfo.tileInfo),pixelBlock:null}:(yield u._initJobHandler(),"raster-shaded-relief"===u.renderer.type&&(f={...f,buffer:{cols:1,rows:1}}),u.raster.fetchTile(s,a,c,f))})()}fetchPixels(s,a,c,f={}){var u=this;return(0,z.Z)(function*(){return(0,P.pC)(u.rasterInfo.multidimensionalInfo)&&(f=u.normalizeRasterFetchOptions(f),(0,P.Wi)(f.multidimensionalDefinition))?{extent:s,pixelBlock:null}:(yield u._initJobHandler(),u.raster.fetchPixels(s,a,c,f))})()}identify(s,a={}){var c=this;return(0,z.Z)(function*(){return!(0,P.pC)(c.rasterInfo.multidimensionalInfo)||c.rasterInfo.hasMultidimensionalTranspose&&((0,le.WU)(a.multidimensionalDefinition)||a.transposedVariableName||a.timeExtent)||(a=c.normalizeRasterFetchOptions(a),!(0,P.Wi)(a.multidimensionalDefinition))?c.raster.identify(s,a):{location:s,value:null}})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const s=this.rasterInfo.multidimensionalInfo;if((0,P.Wi)(s)||"standard-time"!==this.rasterInfo.dataType)return!1;const a=this.multidimensionalDefinition[0]?.variableName;return s.variables.some(c=>c.name===a&&c.dimensions.some(f=>"StdTime"===f.name))}getStandardTimeValue(s){return new Date(24*(s-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,le.Tj)(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const s=new xt.Z;return this._rasterJobHandler.connectionPromise=s.initialize().then(()=>{this._rasterJobHandler.instance=s,this.raster.rasterJobHandler=s,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){if(null==this.interpolation){const s=(0,xe.In)(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(){const s=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,xe.YD)(s)),!this.renderer){const c=(0,xe.Ob)(s,{bandIds:this.bandIds,variableName:(0,P.pC)(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===c.type&&(s.statistics?.[0].max>1e24||s.statistics?.[0].min<-1e24)&&(c.dynamicRangeAdjustment=!0,c.statistics=null,"none"===c.stretchType&&(c.stretchType="min-max")),this.renderer=c}this.symbolizer?(this.symbolizer.rendererJSON=(0,xe.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=s):this.symbolizer=new It.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:s});const a=this.symbolizer.bind();a.success||Ve.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer.")}};return(0,w._)([(0,B.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"bandIds",void 0),(0,w._)([(0,B.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,w._)([(0,B.Cb)({type:Y.Z,json:{read:!1}}),(0,Me.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"interpolation",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"ioConfig",void 0),(0,w._)([(0,B.Cb)({type:[gt.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"raster",void 0),(0,w._)([(0,B.Cb)({readOnly:!0}),(0,Me.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,w._)([(0,B.Cb)()],t.prototype,"sourceJSON",void 0),(0,w._)([(0,B.Cb)({type:Q.Z,json:{read:!1}}),(0,Me.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,w._)([(0,B.Cb)({type:me.Z,json:{read:!1}}),(0,Me.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,w._)([(0,B.Cb)(Ne.HQ)],t.prototype,"url",null),(0,w._)([(0,B.Cb)({types:Pe.dr})],t.prototype,"renderer",null),(0,w._)([(0,B.Cb)()],t.prototype,"symbolizer",void 0),t=(0,w._)([(0,ie.j)("esri.layers.ImageryTileMixin")],t),t};var St=T(49286),Ct=T(6647),Rt=T(30346),Tt=T(99555),wt=T(97941),Ie=T(36255),Pt=T(2939),ve=T(79645),be=T(27497),Mt=T(86810),Ft=T(60330),j=T(28594),X=T(49672);const G=new Map,ae=new class Bt{constructor(t=15e3,s=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,s)}decreaseRefCount(t,s){const a=t+"/"+s,c=this._cachedBlocks;if(c.has(a)){const f=c.get(a);return f.refCount--,f.refCount<=0&&(c.delete(a),f.controller&&f.controller.abort()),f.refCount}return 0}getBlock(t,s){const a=t+"/"+s,c=this._cachedBlocks;if(c.has(a)){const f=c.get(a);return f.ts=Date.now(),f.refCount++,c.delete(a),c.set(a,f),f.block}return null}putBlock(t,s,a,c=null){const f=this._cachedBlocks,u=t+"/"+s;if(f.has(u)){const m=f.get(u);m.ts=Date.now(),m.refCount++}else f.set(u,{block:a,ts:Date.now(),refCount:1,controller:c});this._trim(),this._updateTimer()}deleteBlock(t,s){const a=this._cachedBlocks,c=t+"/"+s;a.has(c)&&a.delete(c)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval(()=>{const s=Array.from(t),a=Date.now();for(let c=0;c<s.length&&s[c][1].ts<=a-this._duration;c++)t.delete(s[c][0]);0===t.size&&this._clearTimer()},this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const s=Array.from(t);for(let a=0;a<s.length-this._size;a++)t.delete(s[a][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function Ye(i,t){return null==t?i:`${i}?sliceId=${t}`}function Xe(i,t,s){if(!G.has(i))return null==t?ae.getBlock(i,s):null;const a=G.get(i);if(null==a[t]){for(let f=0;f<a.length;f++)if(a[f]&&a[f].cache.has(s)){const u=a[f].cache.get(s);return u.refCount++,u.block}return ae.getBlock(i,s)}const c=a[t].cache;if(c.has(s)){const f=c.get(s);return f.refCount++,f.block}for(let f=0;f<a.length;f++)if(f!==t&&a[f]&&a[f]&&a[f].cache.has(s)){const u=a[f].cache.get(s);return u.refCount++,c.set(s,u),u.block}return null}function Ke(i,t,s,a,c=null){if(!G.has(i))return void(null==t&&ae.putBlock(i,s,a,c));const f=G.get(i);if(null==f[t])return void ae.putBlock(i,s,a,c);const u={refCount:1,block:a,isResolved:!1,isRejected:!1,controller:c};a.then(()=>u.isResolved=!0).catch(()=>u.isRejected=!0),f[t].cache.set(s,u)}var Qe=T(8614),ce=T(79751);let ee=class extends((0,Ft.v)(Mt.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var i=this;return(0,z.Z)(function*(){const t=(0,j.zD)();i.addResolvingPromise(t),yield i.when()})()}normalizeCtorArgs(i){return i&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:me.Z.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,t=(0,j.ut)(i.spatialReference);return(0,P.pC)(t)&&i.extent.width>=t/2}set url(i){this._set("url",(0,$e.Nm)(i,Ge.Z.getLogger(this.declaredClass)))}open(i){return(0,z.Z)(function*(){throw new J.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){const f=a.tileInfo||c.rasterInfo.storageInfo.tileInfo,u=c.getTileExtentFromTileInfo(i,t,s,f);return c.fetchPixels(u,f.size[0],f.size[1],a)})()}identify(i,t={}){var s=this;return(0,z.Z)(function*(){const{multidimensionalDefinition:a,timeExtent:c}=t,{hasMultidimensionalTranspose:f,multidimensionalInfo:u}=s.rasterInfo;let{transposedVariableName:m}=t;const d=(0,P.pC)(u)&&f&&(null!=c||(0,le.WU)(a));d&&!m&&(m=(0,P.pC)(a)&&a.length>0?a[0].variableName:u.variables[0].name,t={...t,transposedVariableName:m}),t=s._getRequestOptionsWithSliceId(t);const{spatialReference:h,extent:y}=s.rasterInfo,{datumTransformation:x}=t;let p=(0,j.nF)(i,h,x);if(!y.intersects(p))return{location:p,value:null};if((0,P.pC)(s.rasterInfo.transform)){const E=s.rasterInfo.transform.inverseTransform(p);if(!s.rasterInfo.nativeExtent.intersects(E))return{location:E,value:null};p=E}let g=0;const S=m&&(0,P.pC)(u)&&s.rasterInfo.hasMultidimensionalTranspose;if(!S)if(t.srcResolution)g=(0,j.kr)(t.srcResolution,s.rasterInfo,s.ioConfig.sampling).pyramidLevel;else if(g=yield s.computeBestPyramidLevelForLocation(i,t),null==g)return{location:p,value:null};const v=s.identifyPixelLocation(p,g,null,S);if(null===v)return{location:p,value:null};const{row:b,col:I,rowOffset:F,colOffset:M,blockWidth:O}=v,Z=m??(0,P.Wg)(t.sliceId),D=Ye(s.url,Z),C=`${g}/${b}/${I}`;let R=Xe(D,null,C);(0,P.Wi)(R)&&(R=s.fetchRawTile(g,b,I,t),Ke(D,null,C,R));const N=yield R;return(0,P.Wi)(N)||!N.pixels?.length?{location:p,value:null}:s._processIdentifyResult(N,{srcLocation:p,position:F*O+M,pyramidLevel:g,useTransposedTile:S,requestSomeSlices:d,identifyOptions:t})})()}fetchPixels(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){if(i=(0,j.kZ)(i),(a=c._getRequestOptionsWithSliceId(a)).requestRawData)return c._fetchPixels(i,t,s,a);const f=(0,j.ut)(i.spatialReference),u=(0,j.Hq)(i);if((0,P.Wi)(f)||0===u||1===u&&c._isGlobalWrappableSource)return c._fetchPixels(i,t,s,a);if(u>=3)return{extent:i,pixelBlock:null};const m=[],{xmin:d,xmax:h}=i,y=Math.round(f/(h-d)*t),x=y-Math.round((f/2-d)/(h-d)*t);let p=0;const g=[];for(let I=0;I<=u;I++){const F=new Y.Z({xmin:0===I?d:-f/2,xmax:I===u?h-f*I:f/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),M=0===I?y-x:I===u?t-p:y;p+=M,g.push(M);const O=a.disableWrapAround&&I>0?null:c._fetchPixels(F,M,s,a);m.push(O)}const S=(yield Promise.all(m)).map(I=>I?.pixelBlock);let v=null;const b={width:t,height:s};return v=c.rasterJobHandler?(yield c.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:S,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:g},a)).pixelBlock:(0,ce.us)(S,b,{blockWidths:g}),{extent:i,srcExtent:(0,j.tB)(i,c.rasterInfo.spatialReference,a.datumTransformation),pixelBlock:v}})()}fetchRawPixels(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){t={x:Math.floor(t.x),y:Math.floor(t.y)};const f=yield c._fetchRawTiles(i,t,s,a),{nativeExtent:u,nativePixelSize:m,storageInfo:d}=c.rasterInfo,h=2**i,y=m.x*h,x=m.y*h,p=new Y.Z({xmin:u.xmin+y*t.x,xmax:u.xmin+y*(t.x+s.width-1),ymin:u.ymax-x*(t.y+s.height-1),ymax:u.ymax-x*t.y,spatialReference:u.spatialReference});if(!f)return{extent:p,srcExtent:p,pixelBlock:null};const{pixelBlocks:g,mosaicSize:S}=f;if(1===g.length&&(0,P.pC)(g[0])&&g[0].width===s.width&&g[0].height===s.height)return{extent:p,srcExtent:p,pixelBlock:f.pixelBlocks[0]};const I={x:t.x%(i>0?d.pyramidBlockWidth:d.blockWidth),y:t.y%(i>0?d.pyramidBlockHeight:d.blockHeight)};let F;return F=c.rasterJobHandler?(yield c.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:S,destDimension:s,clipOffset:I,clipSize:s,coefs:null,sampleSpacing:null,interpolation:a.interpolation,alignmentInfo:null,blockWidths:null},a)).pixelBlock:(0,ce.us)(g,S,{clipOffset:I,clipSize:s}),{extent:p,srcExtent:p,pixelBlock:F}})()}fetchRawTile(i,t,s,a){throw new J.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return(0,j.tB)(this.rasterInfo.extent,i)}decodePixelBlock(i,t){return!this.rasterJobHandler||t.useCanvas?(0,Qe.J)(i,t):this.rasterJobHandler.decode({data:i,options:t})}request(i,t,s){var a=this;return(0,z.Z)(function*(){const{customFetchParameters:c}=a.ioConfig,{range:f,query:u,headers:m}=t;s=s??t.retryCount??a.ioConfig.retryCount;const d=f?{Range:`bytes=${f.from}-${f.to}`}:null;try{return yield(0,_e.default)(i,{...t,query:{...u,...c},headers:{...m,...d}})}catch(h){if(s>0)return s--,a.request(i,t,s);throw h}})()}getSliceIndex(i){const{multidimensionalInfo:t}=this.rasterInfo;return(0,P.Wi)(t)||(0,P.Wi)(i)||0===i.length?null:(0,le.gk)(i,t)}getTileExtentFromTileInfo(i,t,s,a){const c=a.lodAt(i);return this.getTileExtent({x:c.resolution,y:c.resolution},t,s,a.origin,a.spatialReference,a.size)}updateTileInfo(){const{storageInfo:i,spatialReference:t,extent:s,pixelSize:a}=this.rasterInfo;if(!i.tileInfo){const c=[],f=i.maximumPyramidLevel||0;let u=Math.max(a.x,a.y),m=1/.0254*96*u;for(let h=0;h<=f;h++)c.push({level:f-h,resolution:u,scale:m}),u*=2,m*=2;const d=new X.Z({x:s.xmin,y:s.ymax,spatialReference:t});i.tileInfo=new me.Z({origin:d,size:[i.blockWidth,i.blockHeight],spatialReference:t,lods:c}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,t=512,s=512,a){const{width:c,height:f,nativeExtent:u,pixelSize:m,spatialReference:d}=i,h=new X.Z({x:u.xmin,y:u.ymax,spatialReference:d});null==a&&(a=Math.max(0,Math.round(Math.log(Math.max(c,f))/Math.LN2-8)));const y=this.computeBlockBoundary(u,512,512,{x:u.xmin,y:u.ymax},[m],a);i.storageInfo=new be.Z({blockWidth:t,blockHeight:s,pyramidBlockWidth:t,pyramidBlockHeight:s,origin:h,firstPyramidLevel:1,maximumPyramidLevel:a,blockBoundary:y})}computeBestPyramidLevelForLocation(i,t={}){return(0,z.Z)(function*(){return 0})()}computeBlockBoundary(i,t,s,a,c,f=0,u=2){if(1===c.length&&f>0){c=[...c];let{x:y,y:x}=c[0];for(let p=0;p<f;p++)y*=u,x*=u,c.push({x:y,y:x})}const m=[],{x:d,y:h}=a;for(let y=0;y<c.length;y++){const{x,y:p}=c[y];m.push({minCol:Math.floor((i.xmin-d+.1*x)/t/x),maxCol:Math.floor((i.xmax-d-.1*x)/t/x),minRow:Math.floor((h-i.ymax+.1*p)/s/p),maxRow:Math.floor((h-i.ymin-.1*p)/s/p)})}return m}getPyramidPixelSize(i){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo;if(0===i)return t;if((0,P.pC)(s)&&s.length)return s[i-1];const c=a**i;return{x:t.x*c,y:t.y*c}}identifyPixelLocation(i,t,s,a){const{spatialReference:c,nativeExtent:f,storageInfo:u}=this.rasterInfo,{maximumPyramidLevel:m,origin:d,transposeInfo:h}=u,y=a&&(0,P.pC)(h)?h.tileSize[0]:u.blockWidth,x=a&&(0,P.pC)(h)?h.tileSize[1]:u.blockHeight,p=(0,j.nF)(i,c,s);if(!f.intersects(p)||t<0||t>m)return null;const g=this.getPyramidPixelSize(t),{x:S,y:v}=g,b=(d.y-p.y)/v/x,I=(p.x-d.x)/S/y,F=Math.min(x-1,Math.floor((b-Math.floor(b))*x)),M=Math.min(y-1,Math.floor((I-Math.floor(I))*y));return{pyramidLevel:t,row:Math.floor(b),col:Math.floor(I),rowOffset:F,colOffset:M,blockWidth:y,srcLocation:p}}getTileExtent(i,t,s,a,c,f){const[u,m]=f,d=a.x+s*u*i.x,y=a.y-t*m*i.y;return new Y.Z({xmin:d,xmax:d+u*i.x,ymin:y-m*i.y,ymax:y,spatialReference:c})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,t,s){const a=this.rasterInfo.storageInfo.blockBoundary[i];return!a||a.maxRow<t||a.maxCol<s||a.minRow>t||a.minCol>s}_fetchPixels(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){let f=(0,j.Hq)(i);if(f>=2)return{extent:i,pixelBlock:null};const u=c._getSourceDataInfo(i,t,s,a),{pyramidLevel:m,pyramidResolution:d,srcResolution:h,srcExtent:y,srcWidth:x,srcHeight:p}=u;if(0===x||0===p)return{extent:i,srcExtent:y,pixelBlock:null};const g=(0,P.Wg)(c.rasterInfo.transform),S="gcs-shift"===g?.type,v=(0,P.pC)((0,j.ut)(i.spatialReference));!S&&v||(f=(0,j.Hq)(u.srcExtent,S));const b=c.rasterInfo.storageInfo,I={x:Math.floor((y.xmin-b.origin.x)/d.x+.1),y:Math.floor((b.origin.y-y.ymax)/d.y+.1)},F=yield c._fetchRawTiles(m,I,{width:x,height:p,wrapCount:f},a);if(!F)return{extent:i,srcExtent:y,pixelBlock:null};const M=m>0?b.pyramidBlockWidth:b.blockWidth,O=m>0?b.pyramidBlockHeight:b.blockHeight,Z=M===x&&O===p&&I.x%M==0&&I.y%O==0,D=new X.Z({x:(i.xmax-i.xmin)/t,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference}),C=!i.spatialReference.equals(c.rasterInfo.spatialReference),{datumTransformation:R}=a;if(!C&&Z&&1===F.pixelBlocks.length&&M===t&&O===s&&h.x===D.x&&h.y===D.y)return{extent:i,srcExtent:y,pixelBlock:F.pixelBlocks[0]};const N=v&&(0,P.pC)((0,j.ut)(y.spatialReference)),k=a.requestProjectedLocalDirections&&c.rasterInfo.dataType.startsWith("vector");k&&!c.rasterJobHandler&&(yield(0,j.zD)());const E=c.rasterJobHandler?yield c.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:F.extent,pixelSize:D.toJSON(),datumTransformation:R,rasterTransform:g,hasWrapAround:f>0||N,isAdaptive:!1!==c.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:k},a):(0,j.Qp)({projectedExtent:i,srcBufferExtent:F.extent,pixelSize:D,datumTransformation:R,rasterTransform:g,hasWrapAround:f>0||N,isAdaptive:!1,includeGCSGrid:k});let L;const $=!a.requestRawData,K={rows:E.spacing[0],cols:E.spacing[1]},H=(0,P.Wg)(c._getRasterTileAlignmentInfo(m,F.extent.xmin)),{pixelBlocks:W,mosaicSize:U,isPartiallyFilled:_}=F;let re=null;if(c.rasterJobHandler)({pixelBlock:L,localNorthDirections:re}=yield c.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:W,srcMosaicSize:U,destDimension:$?{width:t,height:s}:null,coefs:$?E.coefficients:null,sampleSpacing:$?K:null,projectDirections:k,gcsGrid:k?E.gcsGrid:null,isUV:"vector-uv"===c.rasterInfo.dataType,interpolation:a.interpolation,alignmentInfo:H,blockWidths:null},a));else{const se=(0,ce.us)(W,U,{alignmentInfo:H});L=$?(0,ce.Uk)(se,{width:t,height:s},E.coefficients,K,a.interpolation):se,k&&E.gcsGrid&&(re=(0,ce.Qh)({width:t,height:s},E.gcsGrid),L=(0,Le.xQ)(L,c.rasterInfo.dataType,re))}return a.requestRawData||k?{srcExtent:y,pixelBlock:L,transformGrid:E,localNorthDirections:re,extent:i,isPartiallyFilled:_}:{srcExtent:y,extent:i,pixelBlock:L}})()}_fetchRawTiles(i,t,s,a){var c=this;return(0,z.Z)(function*(){const{origin:f,blockBoundary:u}=c.rasterInfo.storageInfo,{blockWidth:m,blockHeight:d}=c.getBlockWidthHeight(i);let{x:h,y}=t,{width:x,height:p,wrapCount:g}=s;const S=c._getRasterTileAlignmentInfo(i,0);a.buffer&&(h-=a.buffer.cols,y-=a.buffer.rows,x+=2*a.buffer.cols,p+=2*a.buffer.rows);let v=0,b=0,I=0;g&&(0,P.pC)(S)&&(({worldColumnCountFromOrigin:b,originColumnOffset:I,rightPadding:v}=S),b*S.blockWidth-v>=h+x&&(v=0));const F=Math.floor(h/m),M=Math.floor(y/d),O=Math.floor((h+x+v-1)/m),Z=Math.floor((y+p+v-1)/d),D=u[i];if(!D)return null;const{minRow:C,minCol:R,maxCol:N,maxRow:k}=D;if(0===g&&(Z<C||O<R||M>k||F>N))return null;const E=new Array;let L=!1;const $=c.ioConfig.allowPartialFill??a.allowPartialFill;for(let se=M;se<=Z;se++)for(let we=F;we<=O;we++){let He=we;if(!a.disableWrapAround&&g&&(0,P.pC)(S)&&b<=we&&(He=we-b-I),se>=C&&He>=R&&k>=se&&N>=He){const it=c._fetchRawTile(i,se,He,a);E.push($?new Promise(st=>{it.then(tr=>st(tr)).catch(()=>{L=!0,st(null)})}):it)}else E.push(null)}if(0===E.length)return null;const K=yield Promise.all(E),H={height:(Z-M+1)*d,width:(O-F+1)*m},{spatialReference:W}=c.rasterInfo,U=c.getPyramidPixelSize(i),{x:_,y:re}=U;return{extent:new Y.Z({xmin:f.x+F*m*_,xmax:f.x+(O+1)*m*_,ymin:f.y-(Z+1)*d*re,ymax:f.y-M*d*re,spatialReference:W}),pixelBlocks:K,mosaicSize:H,isPartiallyFilled:L}})()}_fetchRawTile(i,t,s,a){const c=this.rasterInfo.storageInfo.blockBoundary[i];if(!c)return Promise.resolve(null);const{minRow:f,minCol:u,maxCol:m,maxRow:d}=c;if(t<f||s<u||t>d||s>m)return Promise.resolve(null);const h=Ye(this.url,a.sliceId),y=`${i}/${t}/${s}`;let x=Xe(h,a.registryId,y);if((0,P.Wi)(x)){const p=new AbortController;x=this.fetchRawTile(i,t,s,{...a,signal:p.signal}),Ke(h,a.registryId,y,x,p),x.catch(()=>function Dt(i,t,s){if(!G.has(i))return void(null==t&&ae.deleteBlock(i,s));const a=G.get(i);null!=a[t]?a[t].cache.delete(s):ae.deleteBlock(i,s)}(h,a.registryId,y))}return a.signal&&(0,ge.fu)(a,()=>{!function kt(i,t,s){if(!G.has(i))return null==t?ae.decreaseRefCount(i,s):0;const a=G.get(i);if(null==a[t])return ae.decreaseRefCount(i,s);const c=a[t].cache;if(c.has(s)){const f=c.get(s);if(f.refCount--,0===f.refCount){c.delete(s);for(let u=0;u<a.length;u++)a[u]&&a[u].cache.has(s)&&a[u].cache.delete(s);f.controller&&f.controller.abort()}return f.refCount}}(h,a.registryId,y)}),x}_computeMagDirValues(i){const{bandCount:t,dataType:s}=this.rasterInfo;if((2!==t||"vector-magdir"!==s)&&"vector-uv"!==s||2!==i?.length||!i[0]?.length)return null;const a=i[0].length;if("vector-magdir"===s){const d=i[1].map(h=>(h+360)%360);return[i[0],d]}const[c,f]=i,u=[],m=[];for(let d=0;d<a;d++){const[h,y]=(0,Le.Tg)([c[d],f[d]]);u.push(h),m.push(y)}return[u,m]}_getRasterTileAlignmentInfo(i,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,j.P_)(this.rasterInfo)),(0,P.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,t,s,a={}){const c={datumTransformation:a.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};a.srcResolution&&(c.srcResolution=a.srcResolution,this._updateSourceDataInfo(i,c));const f=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:u,srcHeight:m,pyramidLevel:d}=c,h=u/t,y=m/s,x=d<f&&h*y>=16;if(x||d===f&&(h>8||y>8)||0===u||0===m){const p=new X.Z({x:(i.xmax-i.xmin)/t,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference});let g=(0,j.VO)(p,this.rasterInfo.spatialReference,i,c.datumTransformation);const S=!g||a.srcResolution&&g.x+g.y<a.srcResolution.x+a.srcResolution.y;if(x&&a.srcResolution&&S){const v=Math.round(Math.log(Math.max(h,y))/Math.LN2)-1;if(f-d+3>=v){const b=2**v;g={x:a.srcResolution.x*b,y:a.srcResolution.y*b}}}g&&(c.srcResolution=g,this._updateSourceDataInfo(i,c))}return(c.srcWidth/t>8||c.srcHeight/s>8)&&(c.srcWidth=0,c.srcHeight=0),c}_updateSourceDataInfo(i,t){t.srcWidth=0,t.srcHeight=0;const s=this.rasterInfo.spatialReference,{srcResolution:a,datumTransformation:c}=t,{pyramidLevel:f,pyramidResolution:u,excessiveReading:m}=(0,j.kr)(a,this.rasterInfo,this.ioConfig.sampling);if(m)return;let d=t.srcExtent||(0,j.tB)(i,s,c);if(null==d)return;const h=(0,P.Wg)(this.rasterInfo.transform);h&&(d=h.inverseTransform(d)),t.srcExtent=d;const y=Math.ceil((d.xmax-d.xmin)/u.x-.1),x=Math.ceil((d.ymax-d.ymin)/u.y-.1);t.pyramidLevel=f,t.pyramidResolution=u,t.srcWidth=y,t.srcHeight=x}_getRequestOptionsWithSliceId(i){return(0,P.pC)(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,t){const{srcLocation:s,position:a,pyramidLevel:c,useTransposedTile:f}=t,u=i.pixels[0].length/i.width/i.height;if(i.mask&&!i.mask[a])return{location:s,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if((0,P.Wi)(m)||!f){const g=i.pixels.map(b=>b[a]),S={location:s,value:g,pyramidLevel:c},v=this._computeMagDirValues(g.map(b=>[b]));return v?.length&&(S.magdirValue=v.map(b=>b[0])),S}let d=i.pixels.map(g=>Array.prototype.slice.call(g,a*u,a*u+u)),h=this._computeMagDirValues(d);const{requestSomeSlices:y,identifyOptions:x}=t;let p=(0,le.MO)(m,x.transposedVariableName);if(y){const g=(0,le.Ur)(p,(0,P.Wg)(x.multidimensionalDefinition),(0,P.Wg)(x.timeExtent));d=d.map(S=>g.map(v=>S[v])),h=h?.map(S=>g.map(v=>S[v])),p=g.map(S=>p[S])}return{location:s,value:null,dataSeries:p.map((g,S)=>{const v={value:d.map(b=>b[S]),multidimensionalDefinition:g.multidimensionalDefinition,variableName:g.multidimensionalDefinition[0].variableName,dimensionValues:{}};return h?.length&&(v.magdirValue=[h[0][S],h[1][S]]),g.multidimensionalDefinition.forEach(b=>v.dimensionValues[b.dimensionName]=b.values[0]),v}),pyramidLevel:c}}};(0,w._)([(0,B.Cb)()],ee.prototype,"_rasterTileAlighmentInfo",void 0),(0,w._)([(0,B.Cb)({readOnly:!0})],ee.prototype,"_isGlobalWrappableSource",null),(0,w._)([(0,B.Cb)(Ne.HQ)],ee.prototype,"url",null),(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetName",void 0),(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),(0,w._)([(0,B.Cb)()],ee.prototype,"rasterInfo",void 0),(0,w._)([(0,B.Cb)()],ee.prototype,"ioConfig",void 0),(0,w._)([(0,B.Cb)()],ee.prototype,"sourceJSON",void 0),ee=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.BaseRaster")],ee);const he=ee;var qe=T(15365);function Zt(i){const t=i.fields,s=i.records,a=t.some(h=>"oid"===h.name.toLowerCase())?"OBJECTID":"OID",c=[{name:a,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(h=>({name:h.name,type:"esriFieldType"+h.typeName,alias:h.name}))),f=c.map(h=>h.name),u=[];let m=0,d=0;return s.forEach(h=>{const y={};for(y[a]=m++,d=1;d<f.length;d++)y[f[d]]=h[d-1];u.push({attributes:y})}),{displayFieldName:"",fields:c,features:u}}var et=T(46572),Et=T(17253);const ue=new Map;ue.set("int16","esriFieldTypeSmallInteger"),ue.set("int32","esriFieldTypeInteger"),ue.set("int64","esriFieldTypeInteger"),ue.set("float32","esriFieldTypeSingle"),ue.set("float64","esriFieldTypeDouble"),ue.set("text","esriFieldTypeString");let Se=class extends he{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(i){var t=this;return(0,z.Z)(function*(){yield t.init();const{data:s}=yield t.request(t.url+"/conf.json",{signal:i?.signal});if(!t._validateHeader(s))throw new J.Z("cloudraster:open","Invalid or unsupported conf.json.");t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const{storageInfo:a,rasterInfo:c}=t._parseHeader(s);if("thematic"===c.dataType){const f=yield t._fetchAuxiliaryInformation();c.attributeTable=f}t._set("storageInfo",a),t._set("rasterInfo",c),t.ioConfig.retryCount=t.ioConfig.retryCount||0})()}fetchRawTile(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){const{transposeInfo:f}=c.rasterInfo.storageInfo,{transposedVariableName:u}=a,m=!(!f||!u),d=m?0:c.rasterInfo.storageInfo.maximumPyramidLevel-i;if(d<0)return null;const h=c._buildCacheFilePath(d,t,s,a.multidimensionalDefinition,u),y=c._getIndexRecordFromBundle(t,s,m),x=yield c.request(h,{range:{from:0,to:c.storageInfo.headerSize-1},responseType:"array-buffer",signal:a.signal});if(!x)return null;const p=new Uint8Array(x.data),g=c._getTileEndAndContentType(p,y);if(0===g.recordSize)return null;const S=yield c.request(h,{range:{from:g.position,to:g.position+g.recordSize},responseType:"array-buffer",signal:a.signal});if(!S)return null;const[v,b]=c._getTileSize(m);return c.decodePixelBlock(S.data,{width:v,height:b,planes:null,pixelType:null,returnPixelInterleavedDims:m})})()}_validateHeader(i){return i&&"RasterInfo"===i.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(s=>!i[s])}_parseHeader(i){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][i.pixelType],{bandCount:s,histograms:a,colormap:c,blockWidth:f,blockHeight:u,firstPyramidLevel:m,maximumPyramidLevel:d}=i,h=i.statistics&&i.statistics.map(_=>({min:_.min,max:_.max,avg:_.mean,stddev:_.standardDeviation,median:_.median,mode:_.mode})),y=i.extent.spatialReference,x=i.geodataXform?.spatialReference,p=new Q.Z(y?.wkid||y?.wkt?y:x);let g=new Y.Z({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:p});const S=new X.Z({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:p}),v=Math.round((g.xmax-g.xmin)/S.x),b=Math.round((g.ymax-g.ymin)/S.y),I=this._parseTransform(i.geodataXform),F=I?g:null;I&&(g=I.forwardTransform(g),S.x=(g.xmax-g.xmin)/v,S.y=(g.ymax-g.ymin)/b);const M=i.properties??{},O=i.format.toLowerCase().replace("cache/",""),Z=new X.Z(i.origin.x,i.origin.y,p);let D,C,R,N;if(c&&c.colors)for(D=[],C=0;C<c.colors.length;C++)R=c.colors[C],N=c.values?c.values[C]:C,D.push([N,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const k=i.LODInfos,E=[];for(C=0;C<k.levels.length;C++)E.push({level:k.levels[C],resolution:k.resolutions[C],scale:96/.0254*k.resolutions[C]});const L=new me.Z({dpi:96,lods:E,format:O,origin:Z,size:[f,u],spatialReference:p}),$={recordSize:8,packetSize:i.packetSize,headerSize:i.packetSize*i.packetSize*8+64},K=[{maxCol:Math.ceil(v/f)-1,maxRow:Math.ceil(b/u)-1,minCol:0,minRow:0}];let H=2;if(d>0)for(C=0;C<d;C++)K.push({maxCol:Math.ceil(v/H/f)-1,maxRow:Math.ceil(b/H/u)-1,minCol:0,minRow:0}),H*=2;const W=i.mdInfo;let U=null;if(W&&M._yxs){const _=M._yxs;U={packetSize:_.PacketSize,tileSize:[_.TileXSize,_.TileYSize]}}return{storageInfo:$,rasterInfo:new ve.Z({width:v,height:b,pixelType:t,bandCount:s,extent:g,nativeExtent:F,transform:I,spatialReference:p,pixelSize:S,keyProperties:M,statistics:h,histograms:a,multidimensionalInfo:W,colormap:D,storageInfo:new be.Z({blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,origin:Z,tileInfo:L,transposeInfo:U,firstPyramidLevel:m,maximumPyramidLevel:d,blockBoundary:K})})}}_parseTransform(i){if(!(0,et.j)(i))throw new J.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,et.c)(i);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new J.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}_fetchAuxiliaryInformation(i){var t=this;return(0,z.Z)(function*(){const s=t.request(t.url+"/conf.vat.json",{signal:i}).then(u=>u.data).catch(()=>null),a=t.request(t.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:i}).then(u=>u.data).catch(()=>null),c=yield Promise.all([s,a]);let f;if(c[0]){let u=c[0].fields;const m=c[0].values;if(u&&m){u=u.map(h=>({type:"OID"===h.name?"esriFieldTypeOID":ue.get(h.type),name:h.name,alias:h.alias||h.name}));const d=m.map(h=>({attributes:h}));u&&m&&(f={fields:u,features:d})}}return!f&&c[1]&&(f=class zt{static get supportedVersions(){return[5]}static parse(t){const s=new DataView(t),a=3&s.getUint8(0);if(3!==a)return{header:{version:a},recordSet:null};const c=s.getUint32(4,!0),f=s.getUint16(8,!0),u=s.getUint16(10,!0),m={version:a,recordCount:c,headerByteCount:f,recordByteCount:u};let d=32;const h=[],y=[];let x;if(3===a){for(;13!==s.getUint8(d);)x=String.fromCharCode(s.getUint8(d+11)).trim(),h.push({name:(0,qe.f)(new Uint8Array(t,d,11)),type:x,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(x)],length:s.getUint8(d+16)}),d+=32;if(d+=1,h.length>0)for(;y.length<c&&t.byteLength-d>u;){const p=[];32===s.getUint8(d)?(d+=1,h.forEach(g=>{if("C"===g.type)p.push((0,qe.f)(new Uint8Array(t,d,g.length)).trim());else if("N"===g.type)p.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim(),10));else if("F"===g.type)p.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim()));else if("D"===g.type){const S=String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim();p.push(new Date(parseInt(S.substring(0,4),10),parseInt(S.substring(4,6),10)-1,parseInt(S.substring(6,8),10)))}d+=g.length}),y.push(p)):d+=u}}return{header:m,fields:h,records:y,recordSet:Zt({fields:h,records:y})}}}.parse(c[1]).recordSet),Et.default.fromJSON(f)})()}_buildCacheFilePath(i,t,s,a,c){const f=this._getPackageSize(!!c),u=Math.floor(t/f)*f,m=Math.floor(s/f)*f,d="R"+this._toHexString4(u)+"C"+this._toHexString4(m);let h="L";h+=i>=10?i.toString():"0"+i.toString();const{multidimensionalInfo:y}=this.rasterInfo,x=a?.[0];if((0,P.Wi)(y)||!x)return`${this.url}/_alllayers/${h}/${d}.bundle`;let p="_yxs";if(!c){p=y.variables.find(v=>v.name===x.variableName).dimensions[0].values.indexOf(x.values[0]).toString(16);const S=4-p.length;for(let v=0;v<S;v++)p="0"+p;p="S"+p}const g=this._getVariableFolderName(c||x.variableName);return`${this.url}/_alllayers/${g}/${p}/${h}/${d}.bundle`}_getPackageSize(i=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return i&&(0,P.pC)(t)?t.packetSize:this.storageInfo.packetSize}_getTileSize(i=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:s}=t;return i&&(0,P.pC)(s)?s.tileSize:t.tileInfo.size}_getVariableFolderName(i){return""===(i=i.trim())?"_v":i.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(i,t,s=!1){const a=this._getPackageSize(s),c=a*(i%a)+t%a;if(c<0)throw"Invalid level / row / col";return 20+c*this.storageInfo.recordSize+44}_getTileEndAndContentType(i,t){const s=i.subarray(t,t+8);let a,c=0;for(a=0;a<5;a++)c|=(255&s[a])<<8*a;const f=0xffffffffff&c;for(c=0,a=5;a<8;a++)c|=(255&s[a])<<8*(a-5);return{position:f,recordSize:0xffffffffff&c}}_toHexString4(i){let t=i.toString(16);if(4!==t.length){let s=4-t.length;for(;s-- >0;)t="0"+t}return t}};(0,w._)([(0,B.Cb)({readOnly:!0})],Se.prototype,"storageInfo",void 0),(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.CloudRaster")],Se);const Ht=Se;var Be=T(17057);let Ce=class extends he{constructor(){super(...arguments),this.datasetFormat="MEMORY"}open(i){var t=this;return(0,z.Z)(function*(){yield t.init();const{pixelBlock:s,statistics:a,histograms:c,name:f,keyProperties:u,nativeExtent:m,transform:d}=t.data,{width:h,height:y,pixelType:x}=s,p=t.data.extent||new Y.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:y-.5,spatialReference:new Q.Z({wkid:3857})}),v=new ve.Z({width:h,height:y,pixelType:x,extent:p,nativeExtent:m,transform:d,pixelSize:{x:p.width/h,y:p.height/y},spatialReference:p.spatialReference,bandCount:3,keyProperties:u||{},statistics:a,isPseudoSpatialReference:t.data.isPseudoSpatialReference??!t.data.extent,histograms:c});t.createRemoteDatasetStorageInfo(v,512,512),t._set("rasterInfo",v),t.updateTileInfo(),yield t._buildInMemoryRaster(s,{width:512,height:512},i),t.datasetName=f,t.url="/InMemory/"+f})()}fetchRawTile(i,t,s,a={}){const c=this._pixelBlockTiles.get(`${i}/${t}/${s}`);return Promise.resolve(c)}_buildInMemoryRaster(i,t,s){var a=this;return(0,z.Z)(function*(){const c=a.rasterInfo.storageInfo.maximumPyramidLevel,f=a.rasterJobHandler?a.rasterJobHandler.split({pixelBlock:i,tileSize:t,maximumPyramidLevel:c},s):Promise.resolve((0,ce.Vl)(i,t,c)),u=(0,P.pC)(a.rasterInfo.statistics),m=(0,P.pC)(a.rasterInfo.histograms),d=u?Promise.resolve({statistics:null,histograms:null}):a.rasterJobHandler?a.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},s):Promise.resolve((0,Be.Hv)(i)),h=yield(0,ge.as)([f,d]);if(!h[0].value&&h[1].value)throw new J.Z("inmemory-raster:open","failed to build in memory raster");a._pixelBlockTiles=h[0].value,u||(a.rasterInfo.statistics=h[1].value?.statistics),m||(a.rasterInfo.histograms=h[1].value?.histograms)})()}};(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),(0,w._)([(0,B.Cb)()],Ce.prototype,"data",void 0),Ce=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ce);const Nt=Ce;function pe(i,t){if(!i||!t)return[];let s=t;t.includes("/")?(s=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=[];if(t){const f=pe(i,s);for(let u=0;u<f.length;u++)pe(f[u],t).forEach(m=>a.push(m));return a}const c=i.getElementsByTagNameNS("*",s);if(!c||0===c.length)return[];for(let f=0;f<c.length;f++)a.push(c[f]||c.item[f]);return a}function q(i,t){if(!i||!t)return null;let s=t;t.includes("/")?(s=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=pe(i,s);return a.length>0?t?q(a[0],t):a[0]:null}function te(i,t=null){const s=t?q(i,t):i;let a;return s?(a=s.textContent||s.nodeValue,a?a.trim():null):null}function ke(i,t){return function Lt(i,t){const s=pe(i,t),a=[];let c;for(let f=0;f<s.length;f++)c=s[f].textContent||s[f].nodeValue,c&&(c=c.trim(),""!==c&&a.push(c));return a}(i,t).map(s=>Number(s))}function fe(i,t){const s=te(i,t);return Number(s)}function We(i,t){const s=i?.nodeName?.toLowerCase(),a=t.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===a}var Ae=T(85374);function rt(i,t){if(!i||!t)return null;const s=[];for(let a=0;a<i.length;a++)s.push(i[a]),s.push(t[a]);return s}function De(i){if(!i)return null;let t=Number(i);if(!isNaN(t)&&0!==t)return new Q.Z({wkid:t});if((i=String(i)).startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const s=i.indexOf("VERTCS"),a=i.indexOf("PROJCS"),c=a>-1?a:i.indexOf("GEOGCS");if(-1===c)return null;const f=i.slice(c,i.lastIndexOf("]",s)+1).trim(),u=i.slice(s,i.lastIndexOf("]")).trim();t=Je(f);const m=new Q.Z(t?{wkid:t}:{wkt:f}),d=Je(u);return d&&(m.vcsWkid=d),m}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=Je(i),new Q.Z(0!==t?{wkid:t}:{wkt:i})):null}function Je(i){const t=i.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(c=>c.trim()).filter(c=>""!==c),s=t[t.length-1].split(","),a=s[0]?.toLowerCase();if(("epsg"===a||"esri"===a)&&i.endsWith('"]]')){const c=Number(s[1]);if(!isNaN(c)&&0!==c)return c}return 0}function je(i){if("pamdataset"!==i?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(a=>{if(1===a.nodeType)if(We(a,"SRS")){if(!t.spatialReference){const c=te(a);t.spatialReference=De(c)}}else if(We(a,"Metadata"))if("xml:ESRI"===a.getAttribute("domain")){const{spatialReference:c,transform:f}=function Wt(i){const t=q(i,"GeodataXform"),s=De(fe(t,"SpatialReference/WKID")||te(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:s,transform:null};const a=fe(t,"PolynomialOrder")??1,c=ke(t,"CoeffX/Double"),f=ke(t,"CoeffY/Double"),u=ke(t,"InverseCoeffX/Double"),m=ke(t,"InverseCoeffY/Double"),d=rt(c,f),h=rt(u,m);return{spatialReference:s,transform:new Ae.Z({spatialReference:s,polynomialOrder:a,forwardCoefficients:d,inverseCoefficients:h})}}(a);t.transform=f,t.spatialReference||(t.spatialReference=c)}else pe(a,"MDI").forEach(c=>t.metadata[c.getAttribute("key")]=te(c));else if(We(a,"PAMRasterBand")){const c=function At(i){const t=fe(i,"NoDataValue"),s=q(i,"Histograms/HistItem"),a=fe(s,"HistMin"),c=fe(s,"HistMax"),f=fe(s,"BucketCount"),u=te(s,"HistCounts")?.split("|").map(p=>Number(p));let m,d,h,y;pe(i,"Metadata/MDI").forEach(p=>{const g=Number(p.textContent??p.nodeValue);switch(p.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=g;break;case"STATISTICS_MAXIMUM":d=g;break;case"STATISTICS_MEAN":h=g;break;case"STATISTICS_STDDEV":y=g}});const x=fe(i,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:u?.length&&null!=m&&null!=d?{min:a,max:c,size:f||u.length,counts:u}:null,sourceBandIndex:x,statistics:null!=m&&null!=d?{min:m,max:d,avg:h,stddev:y}:null}}(a);null!=c.sourceBandIndex&&null==t.rasterBands[c.sourceBandIndex]?t.rasterBands[c.sourceBandIndex]=c:t.rasterBands.push(c)}});const s=t.rasterBands;return s&&(t.statistics=s[0].statistics?s.map(f=>f.statistics):null,t.histograms=s[0].histogram?s.map(f=>f.histogram):null),t}let Oe=class extends he{open(i){var t=this;return(0,z.Z)(function*(){yield t.init();const s=yield t._fetchData(i);let{spatialReference:a,statistics:c,histograms:f,transform:u}=yield t._fetchAuxiliaryData(i);const m=!a;m&&(a=new Q.Z({wkid:3857})),f?.length&&null==c&&(c=(0,Be.Oh)(f));const{width:d,height:h}=s;let y=new Y.Z({xmin:-.5,ymin:.5-h,xmax:d-.5,ymax:.5,spatialReference:a});const x=u?u.forwardTransform(y):y;let p=!0;if(u){const S=u.forwardCoefficients;p=S&&0===S[1]&&0===S[2],p&&(u=null,y=x)}const g=new Nt({data:{extent:x,nativeExtent:y,transform:u,pixelBlock:s,statistics:c,histograms:f,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:m}});yield g.open(),g.data=null,t._set("rasterInfo",g.rasterInfo),t._inMemoryRaster=g})()}fetchRawTile(i,t,s,a={}){return this._inMemoryRaster.fetchRawTile(i,t,s,a)}_fetchData(i){var t=this;return(0,z.Z)(function*(){const{data:s}=yield t.request(t.url,{responseType:"array-buffer",signal:i?.signal}),a=(0,Qe.y)(s).toUpperCase();if("JPG"!==a&&"PNG"!==a&&"GIF"!==a&&"BMP"!==a)throw new J.Z("image-aux-raster:open","the data is not a supported format");t._set("datasetFormat",a);const c=a.toLowerCase(),f="gif"===c||"bmp"===c||!(0,ct.Z)("ios");return yield t.decodePixelBlock(s,{format:c,useCanvas:f,hasNoZlibMask:!0})})()}_fetchAuxiliaryData(i){var t=this;return(0,z.Z)(function*(){const s=(0,P.Wg)(i?.signal),a=t.ioConfig.skipExtensions??[],c=a.includes("aux.xml")?null:t.request(t.url+".aux.xml",{responseType:"xml",signal:s}),f=t.datasetFormat,u="JPG"===f?"jgw":"PNG"===f?"pgw":"BMP"===f?"bpw":null,m=a.includes(u)?null:t.request(t.url.slice(0,t.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:s}),d=yield(0,ge.as)([c,m]);if(s?.aborted)throw(0,ge.zE)();const h=je(d[0].value?.data);if(!h.transform){const y=d[1].value?d[1].value.data.split("\n").slice(0,6).map(x=>Number(x)):null;h.transform=6===y?.length?new Ae.Z({forwardCoefficients:[y[4],y[5],y[0],-y[1],y[2],-y[3]]}):null}return h})()}};(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),Oe=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Oe);const Ze=Oe;var Jt=T(21726),jt=T(51026),Ut=T(28930),_t=T(76671),Gt=T(99208);let Re=class extends he{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}open(i){var t=this;return(0,z.Z)(function*(){yield t.init();const s=i&&i.signal,a=t.sourceJSON?{data:t.sourceJSON}:yield t.request(t.url,{query:{f:"json"},signal:s});a.ssl&&(t.url=t.url.replace(/^http:/i,"https:"));const c=a.data;if(t.sourceJSON=c,!c)throw new J.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new J.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");t._fixScaleInServiceInfo(),t.tileType=c.cacheType,null==t.tileType&&(t.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?"Map":"lerc"===c.tileInfo.format.toLowerCase()?"Elevation":"Raster"),t.datasetName=c.name.slice(c.name.indexOf("/")+1);const u=yield t._fetchRasterInfo({signal:s});if(!(0,P.pC)(u))throw new J.Z("image-server-raster:open","cannot initialize image service");{const m="Map"===t.tileType?(0,jt.d)(c.tileInfo,c):me.Z.fromJSON(c.tileInfo),{extent:d,pixelSize:h}=u,y=.5/u.width*h.x;let x,p;const g=m.lodAt(Math.max.apply(null,m.lods.map(C=>C.level)));"Map"!==t.tileType&&0!==c.maxScale&&("Raster"===t.tileType?(x=m.lods.find(C=>C.resolution===h.x),x||(x=m.lods[m.lods.length-1])):(x=m.lods.find(C=>Math.abs(C.scale-c.maxScale)<y),x||(x=m.lods.filter(C=>C.scale>c.maxScale).sort((C,R)=>C.scale>R.scale?1:-1)[0])),h.x=h.y=x.resolution,u.width=Math.ceil((d.xmax-d.xmin)/h.x-.1),u.height=Math.ceil((d.ymax-d.ymin)/h.y-.1)),x||(x=g);const S=m.lodAt(Math.min.apply(null,m.lods.map(C=>C.level)));"Map"===t.tileType?t._levelOffset=m.lods[0].level:0!==c.minScale&&"Elevation"===t.tileType&&(p=m.lods.find(C=>Math.abs(C.scale-c.minScale)<y),t._levelOffset=p.level-S.level),p||(p=S);const v=Math.max(h.x,h.y);(Math.abs(h.x-h.y)>y||!m.lods.some(C=>Math.abs(C.resolution-v)<y))&&(h.x=h.y=x.resolution,u.width=Math.ceil((d.xmax-d.xmin)/h.x-.1),u.height=Math.ceil((d.ymax-d.ymin)/h.y-.1));const b=x.level-p.level,[I,F]=m.size,M=[];m.lods.forEach(C=>{C.level>=p.level&&C.level<=x.level&&M.push({x:C.resolution,y:C.resolution})}),M.sort((C,R)=>C.x-R.x);const O=t.computeBlockBoundary(d,I,F,m.origin,M,b),Z=M.length>1?M.slice(1):null;let D;c.transposeInfo&&(D={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:u.keyProperties?._yxs.PacketSize??0}),u.storageInfo=new be.Z({blockWidth:m.size[0],blockHeight:m.size[1],pyramidBlockWidth:m.size[0],pyramidBlockHeight:m.size[1],pyramidResolutions:Z,compression:m.format,origin:m.origin,firstPyramidLevel:1,maximumPyramidLevel:b,tileInfo:m,transposeInfo:D,blockBoundary:O}),t._fixGCSShift(u),t._set("rasterInfo",u)}if(c.capabilities.toLowerCase().includes("tilemap")){const m={tileInfo:u.storageInfo.tileInfo,parsedUrl:(0,Jt.mN)(t.url),url:t.url,tileServers:[],type:"tile"};t._tilemapCache=new Ut.y({layer:m})}})()}fetchRawTile(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){const{storageInfo:f,extent:u}=c.rasterInfo,{transposeInfo:m}=f,d=(0,P.pC)(m)&&!!a.transposedVariableName;if(c._slices&&!d&&null==a.sliceId)return null;const y=`${c.url}/tile/${d?0:f.maximumPyramidLevel-i+c._levelOffset}/${t}/${s}`,x=c._slices?d?{variable:a.transposedVariableName}:{sliceId:a.sliceId||0}:null,{data:p}=yield c.request(y,{query:x,responseType:"array-buffer",signal:a.signal});if(!p)return null;const g=d?m.tileSize:f.tileInfo.size,S=yield c.decodePixelBlock(p,{width:g[0],height:g[1],planes:null,pixelType:null,isPoint:"Elevation"===c.tileType,returnPixelInterleavedDims:d}),v=f.blockBoundary[i];if("jpg"!==f.compression||s>v.minCol&&s<v.maxCol&&t>v.minRow&&t<v.maxRow)return S;const{origin:b,blockWidth:I,blockHeight:F}=f,{x:M,y:O}=c.getPyramidPixelSize(i),Z=Math.round((u.xmin-b.x)/M)%I,D=Math.round((u.xmax-b.x)/M)%I||I,C=Math.round((b.y-u.ymax)/O)%F,R=Math.round((b.y-u.ymin)/O)%F||F,N=s===v.minCol?Z:0,k=t===v.minRow?C:0;return(0,ce.pW)(S,{x:N,y:k},{width:(s===v.maxCol?D:I)-N,height:(t===v.maxRow?R:F)-k}),S})()}getSliceIndex(i){if(!this._slices||(0,P.Wi)(i)||0===i.length)return null;const t=i;for(let s=0;s<this._slices.length;s++){const a=this._slices[s].multidimensionalDefinition;if(a.length===t.length&&!a.some(c=>{const f=t.find(u=>c.variableName===u.variableName&&u.dimensionName===c.dimensionName);return!f||(Array.isArray(c.values[0])?`${c.values[0][0]}-${c.values[0][1]}`:c.values[0])!==(Array.isArray(f.values[0])?`${f.values[0][0]}-${f.values[0][1]}`:f.values[0])}))return s}return null}fetchVariableStatisticsHistograms(i,t){var s=this;return(0,z.Z)(function*(){const a=s.request(s.url+"/statistics",{query:{variable:i,f:"json"},signal:t}).then(u=>u.data?.statistics),c=s.request(s.url+"/histograms",{query:{variable:i,f:"json"},signal:t}).then(u=>u.data?.histograms),f=yield Promise.all([a,c]);return f[0]&&f[0].forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:f[0]||null,histograms:f[1]||null}})()}computeBestPyramidLevelForLocation(i,t={}){var s=this;return(0,z.Z)(function*(){if(!s._tilemapCache)return 0;let a=s.identifyPixelLocation(i,0,(0,P.Wg)(t.datumTransformation));if(null===a)return null;let c=0;const{maximumPyramidLevel:f}=s.rasterInfo.storageInfo;let u=f-c+s._levelOffset;const m=a.srcLocation;for(;u>=0;){try{if("available"===(yield s._tilemapCache.fetchAvailability(u,a.row,a.col,t)))break}catch{}if(u--,c++,a=s.identifyPixelLocation(m,c,(0,P.Wg)(t.datumTransformation)),null===a)return null}return-1===u||null==a?null:c})()}_fetchRasterInfo(i){var t=this;return(0,z.Z)(function*(){const s=t.sourceJSON;if("Map"===t.tileType){const m=Math.ceil((s.extent.xmax-s.extent.xmin)/s.pixelSizeX-.1),d=Math.ceil((s.extent.ymax-s.extent.ymin)/s.pixelSizeY-.1),h=Q.Z.fromJSON(s.spatialReference||s.extent.spatialReference),y=new X.Z({x:s.pixelSizeX,y:s.pixelSizeY,spatialReference:h});return new ve.Z({width:m,height:d,bandCount:3,extent:Y.Z.fromJSON(s.extent),spatialReference:h,pixelSize:y,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:a}=i,c=(0,Gt.g)(t.url,t.sourceJSON,{signal:a,query:t.ioConfig.customFetchParameters}),f=s.hasMultidimensions?t.request(`${t.url}/slices`,{query:{f:"json"},signal:a}).then(m=>m.data&&m.data.slices).catch(()=>null):null,u=yield Promise.all([c,f]);return t._slices=u[1],u[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_fixGCSShift(i){const{extent:t,spatialReference:s}=i;0===t.xmin&&360===t.xmax&&s.wkid&&s.isGeographic&&(i.nativeExtent=i.extent,i.transform=new _t.Z,i.extent=i.transform.forwardTransform(t))}};(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),(0,w._)([(0,B.Cb)()],Re.prototype,"tileType",void 0),Re=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Re);const $t=Re;var Vt=T(60295),Yt=T(44853);const ne=new Map;ne.set("Int8","s8"),ne.set("UInt8","u8"),ne.set("Int16","s16"),ne.set("UInt16","u16"),ne.set("Int32","s32"),ne.set("UInt32","u32"),ne.set("Float32","f32"),ne.set("Float64","f32"),ne.set("Double64","f32");const oe=new Map;oe.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),oe.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),oe.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),oe.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ye=class extends he{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(i){var t=this;return(0,z.Z)(function*(){yield t.init(),t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const s=i?(0,P.Wg)(i.signal):null,a=yield t.request(t.url,{responseType:"xml",signal:s}),{rasterInfo:c,files:f}=t._parseHeader(a.data);if(-1===t.ioConfig.skipExtensions?.indexOf("aux.xml")){const b=yield t._fetchAuxiliaryData(i);null!=b&&(c.statistics=b.statistics??c.statistics,c.histograms=b.histograms,b.histograms&&(0,P.Wi)(c.statistics)&&(c.statistics=(0,Be.Oh)(b.histograms)))}t._set("rasterInfo",c),t._files=f;const u=yield t.request(f.index,{responseType:"array-buffer",signal:s});t._storageIndex=t._parseIndex(u.data);const{blockWidth:m,blockHeight:d}=t.rasterInfo.storageInfo,h=t.rasterInfo.storageInfo.pyramidScalingFactor,{width:y,height:x}=t.rasterInfo,p=[],g=t._getBandSegmentCount();let S=0,v=-1;for(;S<t._storageIndex.length;){v++;const b=Math.ceil(y/m/h**v)-1,I=Math.ceil(x/d/h**v)-1;S+=(b+1)*(I+1)*g*4,p.push({maxRow:I,maxCol:b,minCol:0,minRow:0})}t.rasterInfo.storageInfo.blockBoundary=p,v>0&&(t.rasterInfo.storageInfo.firstPyramidLevel=1,t.rasterInfo.storageInfo.maximumPyramidLevel=v),t.updateTileInfo()})()}fetchRawTile(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){const{blockWidth:f,blockHeight:u,blockBoundary:m}=c.rasterInfo.storageInfo,d=m[i];if(!d||d.maxRow<t||d.maxCol<s||d.minRow>t||d.minCol>s)return null;const{bandCount:h,pixelType:y}=c.rasterInfo,{ranges:x,actualTileWidth:p,actualTileHeight:g}=c._getTileLocation(i,t,s);if(!x||0===x.length)return null;if(0===x[0].from&&0===x[0].to){const k=new Uint8Array(f*u);return new Vt.Z({width:f,height:u,pixels:null,mask:k,validPixelCount:0})}const{bandIds:S}=c.ioConfig,v=c._getBandSegmentCount(),b=[];let I=0;for(I=0;I<v;I++)(!S||S.indexOf[I]>-1)&&b.push(c.request(c._files.data,{range:{from:x[I].from,to:x[I].to},responseType:"array-buffer",signal:a.signal}));const F=yield Promise.all(b),M=F.map(k=>k.data.byteLength).reduce((k,E)=>k+E),O=new Uint8Array(M);let Z=0;for(I=0;I<v;I++)O.set(new Uint8Array(F[I].data),Z),Z+=F[I].data.byteLength;const D=oe.get(c.rasterInfo.storageInfo.compression).decoderFormat,C=yield c.decodePixelBlock(O.buffer,{width:f,height:u,format:D,planes:S?.length||h,pixelType:y});if((0,P.pC)(c.rasterInfo.noDataValue)&&"lerc"!==D&&!C.mask){const k=c.rasterInfo.noDataValue[0];if(null!=k){const E=C.width*C.height,L=new Uint8Array(E);if(Math.abs(k)>1e24)for(I=0;I<E;I++)Math.abs((C.pixels[0][I]-k)/k)>1e-6&&(L[I]=1);else for(I=0;I<E;I++)C.pixels[0][I]!==k&&(L[I]=1);C.mask=L}}let R=0,N=0;if(p!==f||g!==u){let k=C.mask;if(k)for(I=0;I<u;I++)if(N=I*f,I<g)for(R=p;R<f;R++)k[N+R]=0;else for(R=0;R<f;R++)k[N+R]=0;else for(k=new Uint8Array(f*u),C.mask=k,I=0;I<g;I++)for(N=I*f,R=0;R<p;R++)k[N+R]=1}return C})()}_parseIndex(i){if(i.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,s,a,c,f,u;if(Yt.f){for(s=new Uint8Array(i),c=new ArrayBuffer(i.byteLength),a=new Uint8Array(c),f=0;f<i.byteLength/4;f++)for(u=0;u<4;u++)a[4*f+u]=s[4*f+3-u];t=new Uint32Array(c)}else t=new Uint32Array(i);return t}_getBandSegmentCount(){return oe.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,t,s){const{blockWidth:a,blockHeight:c,pyramidScalingFactor:f}=this.rasterInfo.storageInfo,{width:u,height:m}=this.rasterInfo,d=this._getBandSegmentCount();let h,y,x,p=0,g=0;for(x=0;x<i;x++)g=f**x,h=Math.ceil(u/a/g),y=Math.ceil(m/c/g),p+=h*y;g=f**i,h=Math.ceil(u/a/g),y=Math.ceil(m/c/g),p+=t*h+s,p*=4*d;const S=this._storageIndex.subarray(p,p+4*d);let v=0,b=0;const I=[];for(let F=0;F<d;F++)v=S[4*F+0]*2**32+S[4*F+1],b=v+S[4*F+2]*2**32+S[4*F+3],I.push({from:v,to:b});return{ranges:I,actualTileWidth:s<h-1?a:Math.ceil(u/g)-a*(h-1),actualTileHeight:t<y-1?c:Math.ceil(m/g)-c*(y-1)}}_parseHeader(i){const t=q(i,"MRF_META/Raster");if(!t)throw new J.Z("mrf:open","not a valid MRF format");const s=q(t,"Size"),a=parseInt(s.getAttribute("x"),10),c=parseInt(s.getAttribute("y"),10),f=parseInt(s.getAttribute("c"),10),u=(te(t,"Compression")||"none").toLowerCase();if(!oe.has(u))throw new J.Z("mrf:open","currently does not support compression "+u);const m=te(t,"DataType")||"UInt8",d=ne.get(m);if(null==d)throw new J.Z("mrf:open","currently does not support pixel type "+m);const h=q(t,"PageSize"),y=parseInt(h.getAttribute("x"),10),x=parseInt(h.getAttribute("y"),10),p=q(t,"DataValues");let g,S;if(p&&(S=p.getAttribute("NoData"),null!=S&&(g=S.trim().split(" ").map(E=>parseFloat(E)))),q(i,"MRF_META/CachedSource"))throw new J.Z("mrf:open","currently does not support MRF referencing other data files");const v=q(i,"MRF_META/GeoTags"),b=q(v,"BoundingBox");let I,F=!1;if(null!=b){const E=parseFloat(b.getAttribute("minx")),L=parseFloat(b.getAttribute("miny")),$=parseFloat(b.getAttribute("maxx")),K=parseFloat(b.getAttribute("maxy")),H=te(v,"Projection")||"";let W;if("LOCAL_CS[]"!==H)if(H.toLowerCase().startsWith("epsg:")){const U=Number(H.slice(5));isNaN(U)||0===U||(W=new Q.Z({wkid:U}))}else W=De(H);else F=!0,W=new Q.Z({wkid:3857});I=new Y.Z(E,L,$,K),I.spatialReference=W}else F=!0,I=new Y.Z({xmin:-.5,ymin:.5-c,xmax:a-.5,ymax:.5,spatialReference:new Q.Z({wkid:3857})});const M=q(i,"MRF_META/Rsets"),O=parseInt(M&&M.getAttribute("scale")||"2",10),Z=I.spatialReference,D=new be.Z({origin:new X.Z({x:I.xmin,y:I.ymax,spatialReference:Z}),blockWidth:y,blockHeight:x,pyramidBlockWidth:y,pyramidBlockHeight:x,compression:u,pyramidScalingFactor:O}),C=new X.Z({x:I.width/a,y:I.height/c,spatialReference:Z}),R=new ve.Z({width:a,height:c,extent:I,isPseudoSpatialReference:F,spatialReference:Z,bandCount:f,pixelType:d,pixelSize:C,noDataValue:g,storageInfo:D}),N=te(i,"datafile"),k=te(i,"IndexFile");return{rasterInfo:R,files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:N||this.url.replace(".mrf",oe.get(u).blobExtension)}}}_fetchAuxiliaryData(i){var t=this;return(0,z.Z)(function*(){try{const{data:s}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:i?.signal});return je(s)}catch{return null}})()}};(0,w._)([(0,B.Cb)()],ye.prototype,"_files",void 0),(0,w._)([(0,B.Cb)()],ye.prototype,"_storageIndex",void 0),(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),ye=(0,w._)([(0,ie.j)("esri.layers.support.rasterIO.MRFRaster")],ye);const Xt=ye;var Te=T(93122),ze=T(635);const nt=(i,t)=>{const s=i.get(t);return s&&s.values},Ee=(i,t)=>{const s=i.get(t);return s&&s.values[0]};let de=class extends he{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(i){var t=this;return(0,z.Z)(function*(){yield t.init();const s=i?(0,P.Wg)(i.signal):null,{data:a}=yield t.request(t.url,{range:{from:0,to:t._bufferSize},responseType:"array-buffer",signal:s});if(!a)throw new J.Z("tiffraster:open","failed to open url "+t.url);t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const{littleEndian:c,firstIFD:f,isBigTiff:u}=(0,Te.cK)(a),m=[];yield t._readIFDs(m,a,c,f,0,u?8:4,s);const d=(0,Te.FI)(m),{width:h,height:y,tileWidth:x,tileHeight:p,planes:g,pixelType:S,compression:v,firstPyramidLevel:b,maximumPyramidLevel:I,pyramidBlockWidth:F,pyramidBlockHeight:M,tileBoundary:O,affine:Z,metadata:D}=d;let R=De(d.extent.spatialReference?.wkt||d.extent.spatialReference?.wkid),N=!1;null==R&&(N=!0,R=new Q.Z({wkid:3857}));const k=new Y.Z({...d.extent,spatialReference:R}),E=new X.Z(k?{x:k.xmin,y:k.ymax,spatialReference:R}:{x:0,y:0}),L=new be.Z({blockWidth:x,blockHeight:p,pyramidBlockWidth:F,pyramidBlockHeight:M,compression:v,origin:E,firstPyramidLevel:b,maximumPyramidLevel:I,blockBoundary:O}),$=new X.Z({x:(k.xmax-k.xmin)/h,y:(k.ymax-k.ymin)/y,spatialReference:R}),H=new ve.Z({width:h,height:y,bandCount:g,pixelType:S,compression:v,pixelSize:$,storageInfo:L,spatialReference:R,isPseudoSpatialReference:N,keyProperties:D?{BandProperties:D.bandProperties,DataType:D.dataType}:{},extent:k,statistics:D?D.statistics:null});if(Z?.length&&(H.nativeExtent=new Y.Z({xmin:-.5,ymin:.5-y,xmax:h-.5,ymax:.5,spatialReference:R}),H.transform=new Ae.Z({polynomialOrder:1,forwardCoefficients:[Z[2]+Z[0]/2,Z[5]-Z[3]/2,Z[0],Z[3],-Z[1],-Z[4]]}),H.extent=H.transform.forwardTransform(H.nativeExtent),H.pixelSize=new X.Z({x:(k.xmax-k.xmin)/h,y:(k.ymax-k.ymin)/y,spatialReference:R}),L.origin.x=-.5,L.origin.y=.5),!t.ioConfig.skipExtensions?.includes("aux.xml")){const W=yield t._fetchAuxiliaryData(i);if(null!=W){if(H.statistics=W.statistics??H.statistics,H.histograms=W.histograms,W.histograms&&(0,P.Wi)(H.statistics)&&(H.statistics=(0,Be.Oh)(W.histograms)),W.transform&&!Z){H.transform=W.transform,H.nativeExtent=H.extent;const U=H.transform.forwardTransform(H.nativeExtent);H.pixelSize=new X.Z({x:(U.xmax-U.xmin)/h,y:(U.ymax-U.ymin)/y,spatialReference:R}),H.extent=U}H.spatialReference||(H.spatialReference=W.spatialReference)}}if(t._set("rasterInfo",H),t._headerInfo={littleEndian:c,isBigTiff:u,ifds:m,...d},!t._headerInfo.isSupported)throw new J.Z("tiffraster:open","this tiff is not supported: "+t._headerInfo.message);t.updateTileInfo()})()}fetchRawTile(i,t,s,a={}){var c=this;return(0,z.Z)(function*(){if(!c._headerInfo?.isSupported||c.isBlockOutside(i,t,s))return null;const f=c._getTileLocation(i,t,s);if(!f)return null;const{ranges:u,actualTileWidth:m,actualTileHeight:d,ifd:h}=f,y=u.map(D=>c.request(c.url,{range:D,responseType:"array-buffer",signal:a.signal})),x=yield Promise.all(y),p=x.map(D=>D.data.byteLength).reduce((D,C)=>D+C),g=1===x.length?x[0].data:new ArrayBuffer(p),S=[0],v=[0];if(x.length>1){const D=new Uint8Array(g);for(let C=0,R=0;C<x.length;C++){const N=x[C].data;D.set(new Uint8Array(N),R),S[C]=R,R+=N.byteLength,v[C]=N.byteLength}}const{blockWidth:b,blockHeight:I}=c.getBlockWidthHeight(i),F=yield c.decodePixelBlock(g,{format:"tiff",customOptions:{headerInfo:c._headerInfo,ifd:h,offsets:S,sizes:v},width:b,height:I,planes:null,pixelType:null});let M,O,Z;if(m!==b||d!==I){let D=F.mask;if(D)for(M=0;M<I;M++)if(Z=M*b,M<d)for(O=m;O<b;O++)D[Z+O]=0;else for(O=0;O<b;O++)D[Z+O]=0;else for(D=new Uint8Array(b*I),F.mask=D,M=0;M<d;M++)for(Z=M*b,O=0;O<m;O++)D[Z+O]=1}return F})()}_readIFDs(i,t,s,a,c,f=4,u){var m=this;return(0,z.Z)(function*(){if(!a)return null;(a>=t.byteLength||a<0)&&(t=(yield m.request(m.url,{range:{from:a+c,to:a+c+m._bufferSize},responseType:"array-buffer",signal:u})).data,c=a+c,a=0);const d=yield m._readIFD(t,s,a,c,ze.Z.TIFF_TAGS,f,u);if(i.push(d.ifd),!d.nextIFD)return null;yield m._readIFDs(i,t,s,d.nextIFD-c,c,f,u)})()}_readIFD(i,t,s,a,c=ze.Z.TIFF_TAGS,f=4,u){var m=this;return(0,z.Z)(function*(){if(!i)return null;const d=(0,Te.vr)(i,t,s,a,c,f);if(d.success){const h=[];if(d.ifd.forEach(y=>{y.values||h.push(y)}),h.length>0){const y=h.map(p=>p.offlineOffsetSize),x=Math.min.apply(null,y.map(p=>p[0]));if(Math.min.apply(null,y.map(p=>p[0]+p[1]))-x<=m._bufferSize){const{data:p}=yield m.request(m.url,{range:{from:x,to:x+m._bufferSize},responseType:"array-buffer",signal:u});i=p,a=x,h.forEach(g=>(0,Te.Dq)(i,t,g,a))}}if(d.ifd.has("GEOKEYDIRECTORY")){const y=d.ifd.get("GEOKEYDIRECTORY"),x=y.values;if(x&&x.length>4){const p=x[0]+"."+x[1]+"."+x[2],g=yield m._readIFD(i,t,y.valueOffset+6-a,a,ze.Z.GEO_KEYS,2,u);y.data=g.ifd,y.data&&y.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[p]})}}return d}return d.requiredBufferSize&&d.requiredBufferSize!==i.byteLength?(i=(yield m.request(m.url,{range:{from:a,to:a+d.requiredBufferSize+4},responseType:"array-buffer",signal:u})).data).byteLength<d.requiredBufferSize?null:m._readIFD(i,t,0,a,ze.Z.TIFF_TAGS,4,u):void 0})()}_getTileLocation(i,t,s){const{firstPyramidLevel:a,blockBoundary:c}=this.rasterInfo.storageInfo,f=0===i?0:i-(a-1),u=this._headerInfo.ifds[f];if(!u)return null;const m=(0,Te.If)(u,this._headerInfo),d=nt(u,"TILEOFFSETS");if(void 0===d)return null;const h=nt(u,"TILEBYTECOUNTS"),{minRow:y,minCol:x,maxRow:p,maxCol:g}=c[f];if(t>p||s>g||t<y||s<x)return null;const S=Ee(u,"IMAGEWIDTH"),v=Ee(u,"IMAGELENGTH"),b=Ee(u,"TILEWIDTH"),I=Ee(u,"TILELENGTH"),F=m?this.rasterInfo.bandCount:1,M=F*t*(g+1)+s,O=[{from:d[M],to:d[M+F-1]+h[M+F-1]-1}];if(m){let C=!0;for(let R=0;R<F;R++)if(d[M+R]+h[M+R]!==d[M+R+1]){C=!1;break}if(!C)for(let R=0;R<F;R++)O[R]={from:d[M+R],to:d[M+R]+h[M+R]-1}}return null==d[M]||null==h[M]?null:{ranges:O,ifd:u,actualTileWidth:s===g?S%b:b,actualTileHeight:t===p?v%I:I}}_fetchAuxiliaryData(i){var t=this;return(0,z.Z)(function*(){try{const{data:s}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:i?.signal});return je(s)}catch{return null}})()}};(0,w._)([(0,B.Cb)()],de.prototype,"_files",void 0),(0,w._)([(0,B.Cb)()],de.prototype,"_headerInfo",void 0),(0,w._)([(0,B.Cb)()],de.prototype,"_bufferSize",void 0),(0,w._)([(0,B.Cb)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=(0,w._)([(0,ie.j)("esri.layers.support.rasterDatasets.TIFFRaster")],de);const Kt=de,V=new Map;V.set("CRF",{desc:"Cloud Raster Format",constructor:Ht}),V.set("MRF",{desc:"Meta Raster Format",constructor:Xt}),V.set("TIFF",{desc:"GeoTIFF",constructor:Kt}),V.set("RasterTileServer",{desc:"Raster Tile Server",constructor:$t}),V.set("JPG",{desc:"JPG Raster Format",constructor:Ze}),V.set("PNG",{desc:"PNG Raster Format",constructor:Ze}),V.set("GIF",{desc:"GIF Raster Format",constructor:Ze}),V.set("BMP",{desc:"BMP Raster Format",constructor:Ze});var qt=T(49430);let A=class extends((0,ht.h)((0,Tt.M)((0,St.q)((0,Ct.I)((0,pt.N)(bt((0,wt.n)((0,Rt.Q)((0,ot.R)(mt.Z)))))))))){constructor(...i){super(...i),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(i,t){return"string"==typeof i?{url:i,...t}:i}load(i){const t=(0,P.pC)(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(ge.r9).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let i=[new Ie.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const t=this.rasterInfo?.attributeTable?.fields;if(t){const c=t.filter(f=>"oid"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const u=f.clone();return u.name="Raster."+f.name,u});i=i.concat(c)}const a=this.rasterInfo.dataType;if(("vector-magdir"===a||"vector-uv"===a)&&(0,P.pC)(this.rasterInfo.multidimensionalInfo)){const c=this.rasterInfo.multidimensionalInfo.variables[0].unit?.trim();i.push(new Ie.Z({name:"Raster.Magnitude",alias:"Magnitude"+(c?` (${c})`:""),domain:null,editable:!1,type:"double"})),i.push(new Ie.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(i){this._set("renderer",i),this.updateRenderer()}readRenderer(i,t,s){const c=(0,Pe.ij)(t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,s)||void 0;if(null!=c)return c}createPopupTemplate(i){return(0,qt.eZ)({fields:this.rasterFields,title:this.title},i)}write(i,t){const{raster:s}=this;return(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(i,t):(t&&t.messages&&t.messages.push(new J.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t.origin}/${t.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(i){var t=this;return(0,z.Z)(function*(){t.raster?(t.raster.rasterInfo||(yield t.raster.open()),t.url=t.raster.url):t.raster=yield class Qt{static get supportedFormats(){const t=new Set;return V.forEach((s,a)=>t.add(a)),t}static open(t){var s=this;return(0,z.Z)(function*(){const{url:a,ioConfig:c,sourceJSON:f}=t;let u=t.datasetFormat;null==u&&a.lastIndexOf(".")&&(u=a.slice(a.lastIndexOf(".")+1).toUpperCase()),"OVR"===u||"TIF"===u?u="TIFF":"JPG"!==u&&"JPEG"!==u&&"JFIF"!==u||(u="JPG"),a.toLowerCase().includes("/imageserver")&&!a.toLowerCase().includes("/wcsserver")&&(u="RasterTileServer");const m={url:a,sourceJSON:f,datasetFormat:u,ioConfig:c||{bandIds:null,sampling:null}};let d,h;if(s.supportedFormats.has(u)){if("CRF"===u&&!c.enableCRF)throw new J.Z("rasterfactory:open",`cannot open raster: ${a}`);return d=V.get(u).constructor,h=new d(m),yield h.open({signal:t.signal}),h}if(u)throw new J.Z("rasterfactory:open","not a supported format "+u);const y=Array.from(V.keys());let x=0;const p=()=>(u=y[x++],u&&("CRF"!==u||c.enableCRF)?(d=V.get(u).constructor,h=new d(m),h.open({signal:t.signal}).then(()=>h).catch(()=>p())):null);return p()})()}static register(t,s,a){V.has(t.toUpperCase())||V.set(t.toUpperCase(),{desc:s,constructor:a})}}.open({url:t.url,sourceJSON:t.sourceJSON,ioConfig:{sampling:"closest",...t.ioConfig,customFetchParameters:t.customParameters},signal:i});const{rasterInfo:s}=t.raster;if(!s)throw new J.Z("imagery-tile-layer:load","cannot load resources on "+t.url);if(t.sourceJSON=t.sourceJSON||t.raster.sourceJSON,null!=t.sourceJSON){const a="Map"===t.raster.tileType&&null!=t.sourceJSON.minLOD&&null!=t.sourceJSON.maxLOD?t.sourceJSON:{...t.sourceJSON,minScale:0,maxScale:0};t.read(a,{origin:"service"})}null==t.title&&(t.title=t.raster.datasetName),"Map"===t.raster.tileType&&(t.popupEnabled=!1),t._configDefaultSettings(),t.own((0,lt.YP)(()=>t.customParameters,a=>{t.raster.ioConfig.customFetchParameters=a}))})()}};(0,w._)([(0,B.Cb)({type:[ut.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],A.prototype,"bandIds",void 0),(0,w._)([(0,B.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,ft.J)(Pt.c)],A.prototype,"interpolation",void 0),(0,w._)([(0,B.Cb)({json:{write:!0}})],A.prototype,"multidimensionalDefinition",void 0),(0,w._)([(0,B.Cb)(Ne.rn)],A.prototype,"legendEnabled",void 0),(0,w._)([(0,B.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],A.prototype,"isReference",void 0),(0,w._)([(0,B.Cb)({type:["show","hide"]})],A.prototype,"listMode",void 0),(0,w._)([(0,B.Cb)({json:{read:!0,write:!0}})],A.prototype,"blendMode",void 0),(0,w._)([(0,B.Cb)()],A.prototype,"sourceJSON",void 0),(0,w._)([(0,B.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],A.prototype,"version",void 0),(0,w._)([(0,B.Cb)()],A.prototype,"title",void 0),(0,w._)([(0,B.Cb)({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),(0,w._)([(0,B.Cb)({type:["ArcGISTiledImageServiceLayer"]})],A.prototype,"operationalLayerType",void 0),(0,w._)([(0,B.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(i,t,s){t[s]=!i}}}})],A.prototype,"popupEnabled",void 0),(0,w._)([(0,B.Cb)({type:at.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],A.prototype,"popupTemplate",void 0),(0,w._)([(0,B.Cb)({readOnly:!0})],A.prototype,"defaultPopupTemplate",null),(0,w._)([(0,B.Cb)({readOnly:!0,type:[Ie.Z]})],A.prototype,"fields",void 0),(0,w._)([(0,B.Cb)({readOnly:!0,type:[Ie.Z]})],A.prototype,"rasterFields",null),(0,w._)([(0,B.Cb)({types:Pe.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:Pe.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&"vector-field"!==i.type&&"flow"!==i.type})}}}}})],A.prototype,"renderer",null),(0,w._)([(0,dt.r)("renderer")],A.prototype,"readRenderer",null),A=(0,w._)([(0,ie.j)("esri.layers.ImageryTileLayer")],A);const er=A}}]);