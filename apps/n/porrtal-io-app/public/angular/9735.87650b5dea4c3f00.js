"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[9735],{59735:($,v,t)=>{t.r(v),t.d(v,{default:()=>V});var D=t(15861),a=t(17626),h=t(84792),d=t(26584),m=t(80542),O=t(62208),f=t(99959),C=t(10699),u=t(21726),_=t(77712),T=(t(85931),t(66656)),g=t(68653),S=t(76898),R=t(99433),M=t(65234),L=t(44917),U=t(50085),I=t(5143),B=t(19027),W=t(65088),A=t(552),j=t(50107),K=t(49286),b=t(6647),x=t(30346),N=t(99555),G=t(66120),y=t(38305),Z=t(13812),J=t(39058);const P=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let s=class extends((0,A.h)((0,G.x)((0,N.M)((0,K.q)((0,b.I)((0,I.Z)((0,B.O)((0,W.Y)((0,f.R)((0,m.p)((0,x.Q)((0,U.V)((0,j.N)(L.Z)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,O.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(C.r9).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo&&r.tileInfo.spatialReference)&&M.Z.fromJSON(e)}writeSublayers(e,r,i,o){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).toArray(),l=[],c={writeSublayerStructure:!1,...o};p.forEach(n=>{const E=n.write({},c);l.push(E)}),l.some(n=>Object.keys(n).length>1)&&(r.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>(0,u.mN)(r).path):null}fetchTile(e,r,i,o={}){const{signal:p}=o,l=this.getTileUrl(e,r,i),c={responseType:"image",signal:p,query:{...this.refreshParameters}};return(0,h.default)(l,c).then(n=>n.data)}fetchImageBitmapTile(e,r,i,o={}){var p=this;return(0,D.Z)(function*(){const{signal:l}=o,c=p.getTileUrl(e,r,i),n={responseType:"blob",signal:l,query:{...p.refreshParameters}},E=yield(0,h.default)(c,n);return createImageBitmap(E.data)})()}getTileUrl(e,r,i){const p=(0,u.B7)({...this.parsedUrl.query,blankTile:!(!this.tilemapCache&&this.supportsBlankTile)&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:this.parsedUrl.path}/tile/${e}/${r}/${i}${p?"?"+p:""}`}_fetchService(e){return new Promise((r,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new d.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new d.Z("tile-layer:undefined-url","layer's url is not defined");const o=(0,y.Qc)(this.parsedUrl.path);if((0,O.pC)(o)&&"ImageServer"===o.serverType)throw new d.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,h.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,i)}).then(r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,y.M8)(this.url))return this._fetchServerVersion(this.url,e).then(i=>{this.read({currentVersion:i})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!(0,y.B5)(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,h.default)(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new d.Z("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let i=0,o=P.length;i<o;i++)if(r=P[i],r.toLowerCase().includes(e))return(0,u.hF)("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||i?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,a._)([(0,_.Cb)({readOnly:!0})],s.prototype,"attributionDataUrl",null),(0,a._)([(0,_.Cb)({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),(0,a._)([(0,_.Cb)({json:{read:!0,write:!0}})],s.prototype,"blendMode",void 0),(0,a._)([(0,_.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),(0,a._)([(0,_.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),(0,a._)([(0,_.Cb)({type:Boolean})],s.prototype,"resampling",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"sourceJSON",void 0),(0,a._)([(0,_.Cb)({type:M.Z})],s.prototype,"spatialReference",void 0),(0,a._)([(0,g.r)("spatialReference",["spatialReference","tileInfo"])],s.prototype,"readSpatialReference",null),(0,a._)([(0,_.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),(0,a._)([(0,_.Cb)({readOnly:!0})],s.prototype,"sublayers",void 0),(0,a._)([(0,R.c)("sublayers",{layers:{type:[J.Z]}})],s.prototype,"writeSublayers",null),(0,a._)([(0,_.Cb)({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),(0,a._)([(0,_.Cb)()],s.prototype,"tileServers",null),(0,a._)([(0,T.p)("tileServers")],s.prototype,"castTileServers",null),(0,a._)([(0,_.Cb)({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),(0,a._)([(0,_.Cb)(Z.HQ)],s.prototype,"url",void 0),s=(0,a._)([(0,S.j)("esri.layers.TileLayer")],s),s.prototype.fetchTile.__isDefault__=!0;const V=s}}]);