/*
Copyright 2022 Comcast Cable Communications Management, LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[6329],{86329:(ar,Ue,w)=>{w.r(Ue),w.d(Ue,{default:()=>ir});var Z=w(15861),C=w(17626),dt=w(73281),Me=w(90885),J=w(26584),R=w(62208),mt=w(99959),ge=w(10699),pt=w(32917),F=w(77712),Ge=(w(85931),w(90912)),ht=w(55342),yt=w(68653),re=w(76898),gt=w(44917),xt=w(552),It=w(50107),$e=(w(29132),w(84792)),Ve=w(63290),vt=w(37053),Ye=w(38305),Ne=w(13812),Xe=w(25982),bt=w(11354),St=w(40495),Rt=w(9548),xe=w(2584),Ct=w(86810),Tt=w(60330),Ie=w(27497),se=w(79781),A=w(28594),U=w(72642);const ne=new Map,oe=new class wt{constructor(t=15e3,c=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,c)}decreaseRefCount(t,c){const s=t+"/"+c,a=this._cachedBlocks;if(a.has(s)){const f=a.get(s);return f.refCount--,f.refCount<=0&&(a.delete(s),f.controller&&f.controller.abort()),f.refCount}return 0}getBlock(t,c){const s=t+"/"+c,a=this._cachedBlocks;if(a.has(s)){const f=a.get(s);return f.ts=Date.now(),f.refCount++,a.delete(s),a.set(s,f),f.block}return null}putBlock(t,c,s,a){const f=this._cachedBlocks,u=t+"/"+c;if(f.has(u)){const m=f.get(u);m.ts=Date.now(),m.refCount++}else f.set(u,{block:s,ts:Date.now(),refCount:1,controller:a});this._trim(),this._updateTimer()}deleteBlock(t,c){const s=this._cachedBlocks,a=t+"/"+c;s.has(a)&&s.delete(a)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval(()=>{const c=Array.from(t),s=Date.now();for(let a=0;a<c.length&&c[a][1].ts<=s-this._duration;a++)t.delete(c[a][0]);0===t.size&&this._clearTimer()},this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const c=Array.from(t);for(let s=0;s<c.length-this._size;s++)t.delete(c[s][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function Ke(i,t){return null==t?i:`${i}?sliceId=${t}`}function Qe(i,t,c){const s=ne.get(i);if(!s)return null==t?oe.getBlock(i,c):null;if(null==t||null==s[t]){for(let f=0;f<s.length;f++){const u=s[f]?.cache.get(c);if(u)return u.refCount++,u.block}return oe.getBlock(i,c)}const a=s[t]?.cache.get(c);if(a)return a.refCount++,a.block;for(let f=0;f<s.length;f++){if(f===t||!s[f])continue;const u=s[f]?.cache,m=u?.get(c);if(u&&m)return m.refCount++,u.set(c,m),m.block}return null}function qe(i,t,c,s,a=null){const f=ne.get(i);if(!f)return void(null==t&&oe.putBlock(i,c,s,a));if(null==t||null==f[t])return void oe.putBlock(i,c,s,a);const u={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:a};s.then(()=>u.isResolved=!0).catch(()=>u.isRejected=!0),f[t]?.cache.set(c,u)}var et=w(8614),ce=w(79751),Je=w(30994),X=w(2004);let Q=class extends((0,Tt.v)(Ct.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var i=this;return(0,Z.Z)(function*(){const t=(0,A.zD)();i.addResolvingPromise(t),yield i.when()})()}normalizeCtorArgs(i){return i&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:xe.Z.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,t=(0,A.ut)(i.spatialReference);return(0,R.pC)(t)&&i.extent.width>=t/2}set url(i){this._set("url",(0,Ye.Nm)(i,Ve.Z.getLogger(this.declaredClass)))}open(i){return(0,Z.Z)(function*(){throw new J.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){const f=s.tileInfo||a.rasterInfo.storageInfo.tileInfo,u=a.getTileExtentFromTileInfo(i,t,c,f);return a.fetchPixels(u,f.size[0],f.size[1],s)})()}identify(i,t={}){var c=this;return(0,Z.Z)(function*(){i=(0,Ge.TJ)(U.Z,i).clone().normalize();const{multidimensionalDefinition:s,timeExtent:a}=t,{hasMultidimensionalTranspose:f,multidimensionalInfo:u}=c.rasterInfo;let{transposedVariableName:m}=t;const d=(0,R.pC)(u)&&f&&(null!=a||(0,se.WU)(s));d&&!m&&(m=(0,R.pC)(s)&&s.length>0?s[0].variableName??void 0:u.variables[0].name,t={...t,transposedVariableName:m}),t=c._getRequestOptionsWithSliceId(t);const{spatialReference:p,extent:h}=c.rasterInfo,{datumTransformation:x}=t;let y=(0,A.nF)(i,p,x);if(!h.intersects(y))return{location:y,value:null};if((0,R.pC)(c.rasterInfo.transform)){const z=c.rasterInfo.transform.inverseTransform(y);if(!c.rasterInfo.nativeExtent.intersects(z))return{location:z,value:null};y=z}let g=0;const b=(0,R.pC)(m)&&(0,R.pC)(u)&&c.rasterInfo.hasMultidimensionalTranspose;if(!b)if(t.srcResolution)g=(0,A.kr)(t.srcResolution,c.rasterInfo,c.ioConfig.sampling).pyramidLevel;else if(g=yield c.computeBestPyramidLevelForLocation(i,t),null==g)return{location:y,value:null};const S=c.identifyPixelLocation(y,g,null,b);if(null===S)return{location:y,value:null};const{row:v,col:I,rowOffset:T,colOffset:P,blockWidth:D}=S,E=m??(0,R.Wg)(t.sliceId),B=Ke(c.url,E),k=`${g}/${v}/${I}`;let M=Qe(B,null,k);(0,R.Wi)(M)&&(M=c.fetchRawTile(g,v,I,t),qe(B,null,k,M));const H=yield M;return(0,R.Wi)(H)||!H.pixels?.length?{location:y,value:null}:c._processIdentifyResult(H,{srcLocation:y,position:T*D+P,pyramidLevel:g,useTransposedTile:!!b,requestSomeSlices:d,identifyOptions:t})})()}fetchPixels(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){if(i=(0,A.kZ)(i),(s=a._getRequestOptionsWithSliceId(s)).requestRawData)return a._fetchPixels(i,t,c,s);const f=(0,A.ut)(i.spatialReference),u=(0,A.Hq)(i);if((0,R.Wi)(f)||0===u||1===u&&a._isGlobalWrappableSource)return a._fetchPixels(i,t,c,s);if(u>=3)return{extent:i,pixelBlock:null};const m=[],{xmin:d,xmax:p}=i,h=Math.round(f/(p-d)*t),x=h-Math.round((f/2-d)/(p-d)*t);let y=0;const g=[];for(let I=0;I<=u;I++){const T=new X.Z({xmin:0===I?d:-f/2,xmax:I===u?p-f*I:f/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),P=0===I?h-x:I===u?t-y:h;y+=P,g.push(P);const D=s.disableWrapAround&&I>0?null:a._fetchPixels(T,P,c,s);m.push(D)}const b=(yield Promise.all(m)).map(I=>I?.pixelBlock);let S=null;const v={width:t,height:c};return S=a.rasterJobHandler?(yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:b,srcMosaicSize:v,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:g},s)).pixelBlock:(0,ce.us)(b,v,{blockWidths:g}),{extent:i,srcExtent:(0,A.tB)(i,a.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:S}})()}fetchRawPixels(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){t={x:Math.floor(t.x),y:Math.floor(t.y)};const f=yield a._fetchRawTiles(i,t,c,s),{nativeExtent:u,nativePixelSize:m,storageInfo:d}=a.rasterInfo,p=2**i,h=m.x*p,x=m.y*p,y=new X.Z({xmin:u.xmin+h*t.x,xmax:u.xmin+h*(t.x+c.width-1),ymin:u.ymax-x*(t.y+c.height-1),ymax:u.ymax-x*t.y,spatialReference:u.spatialReference});if(!f)return{extent:y,srcExtent:y,pixelBlock:null};const{pixelBlocks:g,mosaicSize:b}=f;if(1===g.length&&(0,R.pC)(g[0])&&g[0].width===c.width&&g[0].height===c.height)return{extent:y,srcExtent:y,pixelBlock:f.pixelBlocks[0]};const I={x:t.x%(i>0?d.pyramidBlockWidth:d.blockWidth),y:t.y%(i>0?d.pyramidBlockHeight:d.blockHeight)};let T;return T=a.rasterJobHandler?(yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:b,destDimension:c,clipOffset:I,clipSize:c,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:(0,ce.us)(g,b,{clipOffset:I,clipSize:c}),{extent:y,srcExtent:y,pixelBlock:T}})()}fetchRawTile(i,t,c,s){throw new J.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return(0,A.tB)(this.rasterInfo.extent,i)}decodePixelBlock(i,t){return!this.rasterJobHandler||t.useCanvas?(0,et.J)(i,t):this.rasterJobHandler.decode({data:i,options:t})}request(i,t,c=0){var s=this;return(0,Z.Z)(function*(){const{customFetchParameters:a}=s.ioConfig,{range:f,query:u,headers:m}=t;c=c??t.retryCount??s.ioConfig.retryCount;const d=f?{Range:`bytes=${f.from}-${f.to}`}:null;try{return yield(0,$e.default)(i,{...t,query:{...u,...a},headers:{...m,...d}})}catch(p){if(c>0)return c--,s.request(i,t,c);throw p}})()}getSliceIndex(i){const{multidimensionalInfo:t}=this.rasterInfo;return(0,R.Wi)(t)||(0,R.Wi)(i)||0===i.length?null:(0,se.gk)(i,t)}getTileExtentFromTileInfo(i,t,c,s){const a=(0,R.s3)(s.lodAt(i));return this.getTileExtent({x:a.resolution,y:a.resolution},t,c,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:i,spatialReference:t,extent:c,pixelSize:s}=this.rasterInfo;if(!i.tileInfo){const a=[],f=i.maximumPyramidLevel||0;let u=Math.max(s.x,s.y),m=1/.0254*96*u;for(let p=0;p<=f;p++)a.push({level:f-p,resolution:u,scale:m}),u*=2,m*=2;const d=new U.Z({x:c.xmin,y:c.ymax,spatialReference:t});i.tileInfo=new xe.Z({origin:d,size:[i.blockWidth,i.blockHeight],spatialReference:t,lods:a}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,t=512,c=512,s){const{width:a,height:f,nativeExtent:u,pixelSize:m,spatialReference:d}=i,p=new U.Z({x:u.xmin,y:u.ymax,spatialReference:d});null==s&&(s=Math.max(0,Math.round(Math.log(Math.max(a,f))/Math.LN2-8)));const h=this.computeBlockBoundary(u,512,512,{x:u.xmin,y:u.ymax},[m],s);i.storageInfo=new Ie.Z({blockWidth:t,blockHeight:c,pyramidBlockWidth:t,pyramidBlockHeight:c,origin:p,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:h})}computeBestPyramidLevelForLocation(i,t={}){return(0,Z.Z)(function*(){return 0})()}computeBlockBoundary(i,t,c,s,a,f=0,u=2){if(1===a.length&&f>0){a=[...a];let{x:h,y:x}=a[0];for(let y=0;y<f;y++)h*=u,x*=u,a.push({x:h,y:x})}const m=[],{x:d,y:p}=s;for(let h=0;h<a.length;h++){const{x,y}=a[h];m.push({minCol:Math.floor((i.xmin-d+.1*x)/t/x),maxCol:Math.floor((i.xmax-d-.1*x)/t/x),minRow:Math.floor((p-i.ymax+.1*y)/c/y),maxRow:Math.floor((p-i.ymin-.1*y)/c/y)})}return m}getPyramidPixelSize(i){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:c,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(0===i)return t;if((0,R.pC)(c)&&c.length)return c[i-1];const a=s**i;return{x:t.x*a,y:t.y*a}}identifyPixelLocation(i,t,c,s){const{spatialReference:a,nativeExtent:f,storageInfo:u}=this.rasterInfo,{maximumPyramidLevel:m,origin:d,transposeInfo:p}=u,h=s&&(0,R.pC)(p)?p.tileSize[0]:u.blockWidth,x=s&&(0,R.pC)(p)?p.tileSize[1]:u.blockHeight,y=(0,A.nF)(i,a,c);if(!f.intersects(y)||t<0||t>m)return null;const g=this.getPyramidPixelSize(t),{x:b,y:S}=g,v=(d.y-y.y)/S/x,I=(y.x-d.x)/b/h,T=Math.min(x-1,Math.floor((v-Math.floor(v))*x)),P=Math.min(h-1,Math.floor((I-Math.floor(I))*h));return{pyramidLevel:t,row:Math.floor(v),col:Math.floor(I),rowOffset:T,colOffset:P,blockWidth:h,srcLocation:y}}getTileExtent(i,t,c,s,a,f){const[u,m]=f,d=s.x+c*u*i.x,h=s.y-t*m*i.y;return new X.Z({xmin:d,xmax:d+u*i.x,ymin:h-m*i.y,ymax:h,spatialReference:a})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,t,c){const s=this.rasterInfo.storageInfo.blockBoundary[i];return!s||s.maxRow<t||s.maxCol<c||s.minRow>t||s.minCol>c}_fetchPixels(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){let f=(0,A.Hq)(i);if(f>=2)return{extent:i,pixelBlock:null};const u=a._getSourceDataInfo(i,t,c,s),{pyramidLevel:m,pyramidResolution:d,srcResolution:p,srcExtent:h,srcWidth:x,srcHeight:y}=u;if(0===x||0===y)return{extent:i,srcExtent:h,pixelBlock:null};const g=(0,R.Wg)(a.rasterInfo.transform),b="gcs-shift"===g?.type,S=(0,R.pC)((0,A.ut)(i.spatialReference));!b&&S||(f=(0,A.Hq)(u.srcExtent,b));const v=a.rasterInfo.storageInfo,I={x:Math.floor((h.xmin-v.origin.x)/d.x+.1),y:Math.floor((v.origin.y-h.ymax)/d.y+.1)},T=yield a._fetchRawTiles(m,I,{width:x,height:y,wrapCount:f},s);if(!T)return{extent:i,srcExtent:h,pixelBlock:null};const P=m>0?v.pyramidBlockWidth:v.blockWidth,D=m>0?v.pyramidBlockHeight:v.blockHeight,E=P===x&&D===y&&I.x%P==0&&I.y%D==0,B=new U.Z({x:(i.xmax-i.xmin)/t,y:(i.ymax-i.ymin)/c,spatialReference:i.spatialReference}),k=!i.spatialReference.equals(a.rasterInfo.spatialReference),{datumTransformation:M}=s;if(!k&&E&&1===T.pixelBlocks.length&&P===t&&D===c&&p.x===B.x&&p.y===B.y)return{extent:i,srcExtent:h,pixelBlock:T.pixelBlocks[0]};const H=S&&(0,R.pC)((0,A.ut)(h.spatialReference)),O=s.requestProjectedLocalDirections&&a.rasterInfo.dataType.startsWith("vector");O&&!a.rasterJobHandler&&(yield(0,A.zD)());const z=a.rasterJobHandler?yield a.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:T.extent,pixelSize:B.toJSON(),datumTransformation:M,rasterTransform:g,hasWrapAround:f>0||H,isAdaptive:!1!==a.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:O},s):(0,A.Qp)({projectedExtent:i,srcBufferExtent:T.extent,pixelSize:B,datumTransformation:M,rasterTransform:g,hasWrapAround:f>0||H,isAdaptive:!1,includeGCSGrid:O});let N;const W=!s.requestRawData,ee={rows:z.spacing[0],cols:z.spacing[1]},j=(0,R.Wg)(a._getRasterTileAlignmentInfo(m,T.extent.xmin)),{pixelBlocks:V,mosaicSize:Y,isPartiallyFilled:_}=T;let te=null;if(a.rasterJobHandler)({pixelBlock:N,localNorthDirections:te}=yield a.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:V,srcMosaicSize:Y,destDimension:W?{width:t,height:c}:null,coefs:W?z.coefficients:null,sampleSpacing:W?ee:null,projectDirections:O,gcsGrid:O?z.gcsGrid:null,isUV:"vector-uv"===a.rasterInfo.dataType,interpolation:s.interpolation,alignmentInfo:j,blockWidths:null},s));else{const ae=(0,ce.us)(V,Y,{alignmentInfo:j});N=W?(0,ce.Uk)(ae,{width:t,height:c},z.coefficients,ee,s.interpolation):ae,O&&z.gcsGrid&&(te=(0,ce.Qh)({width:t,height:c},z.gcsGrid),N=(0,Je.xQ)(N,a.rasterInfo.dataType,te))}return s.requestRawData||O?{srcExtent:h,pixelBlock:N,transformGrid:z,localNorthDirections:te,extent:i,isPartiallyFilled:_}:{srcExtent:h,extent:i,pixelBlock:N}})()}_fetchRawTiles(i,t,c,s){var a=this;return(0,Z.Z)(function*(){const{origin:f,blockBoundary:u}=a.rasterInfo.storageInfo,{blockWidth:m,blockHeight:d}=a.getBlockWidthHeight(i);let{x:p,y:h}=t,{width:x,height:y,wrapCount:g}=c;const b=a._getRasterTileAlignmentInfo(i,0);s.buffer&&(p-=s.buffer.cols,h-=s.buffer.rows,x+=2*s.buffer.cols,y+=2*s.buffer.rows);let S=0,v=0,I=0;g&&(0,R.pC)(b)&&(({worldColumnCountFromOrigin:v,originColumnOffset:I,rightPadding:S}=b),v*b.blockWidth-S>=p+x&&(S=0));const T=Math.floor(p/m),P=Math.floor(h/d),D=Math.floor((p+x+S-1)/m),E=Math.floor((h+y+S-1)/d),B=u[i];if(!B)return null;const{minRow:k,minCol:M,maxCol:H,maxRow:O}=B;if(0===g&&(E<k||D<M||P>O||T>H))return null;const z=new Array;let N=!1;const W=a.ioConfig.allowPartialFill??s.allowPartialFill;for(let ae=P;ae<=E;ae++)for(let Fe=T;Fe<=D;Fe++){let He=Fe;if(!s.disableWrapAround&&g&&(0,R.pC)(b)&&v<=Fe&&(He=Fe-v-I),ae>=k&&He>=M&&O>=ae&&H>=He){const ut=a._fetchRawTile(i,ae,He,s);z.push(W?new Promise(ft=>{ut.then(sr=>ft(sr)).catch(()=>{N=!0,ft(null)})}):ut)}else z.push(Promise.resolve(null))}if(0===z.length)return null;const ee=yield Promise.all(z),j={height:(E-P+1)*d,width:(D-T+1)*m},{spatialReference:V}=a.rasterInfo,Y=a.getPyramidPixelSize(i),{x:_,y:te}=Y;return{extent:new X.Z({xmin:f.x+T*m*_,xmax:f.x+(D+1)*m*_,ymin:f.y-(E+1)*d*te,ymax:f.y-P*d*te,spatialReference:V}),pixelBlocks:ee,mosaicSize:j,isPartiallyFilled:N}})()}_fetchRawTile(i,t,c,s){const a=this.rasterInfo.storageInfo.blockBoundary[i];if(!a)return Promise.resolve(null);const{minRow:f,minCol:u,maxCol:m,maxRow:d}=a;if(t<f||c<u||t>d||c>m)return Promise.resolve(null);const p=Ke(this.url,s.sliceId),h=`${i}/${t}/${c}`;let x=Qe(p,s.registryId,h);if((0,R.Wi)(x)){const y=new AbortController;x=this.fetchRawTile(i,t,c,{...s,signal:y.signal}),qe(p,s.registryId,h,x,y),x.catch(()=>function Ft(i,t,c){const s=ne.get(i);s?null!=t&&null!=s[t]?s[t]?.cache.delete(c):oe.deleteBlock(i,c):null==t&&oe.deleteBlock(i,c)}(p,s.registryId,h))}return s.signal&&(0,ge.fu)(s,()=>{!function Pt(i,t,c){const s=ne.get(i);if(!s)return null==t?oe.decreaseRefCount(i,c):0;if(null==t||null==s[t])return oe.decreaseRefCount(i,c);const a=s[t]?.cache,f=a?.get(c);if(a&&f){if(f.refCount--,0===f.refCount){a.delete(c);for(let u=0;u<s.length;u++)s[u]?.cache.delete(c);f.controller&&f.controller.abort()}return f.refCount}}(p,s.registryId,h)}),x}_computeMagDirValues(i){const{bandCount:t,dataType:c}=this.rasterInfo;if((2!==t||"vector-magdir"!==c)&&"vector-uv"!==c||2!==i?.length||!i[0]?.length)return null;const s=i[0].length;if("vector-magdir"===c){const d=i[1].map(p=>(p+360)%360);return[i[0],d]}const[a,f]=i,u=[],m=[];for(let d=0;d<s;d++){const[p,h]=(0,Je.Tg)([a[d],f[d]]);u.push(p),m.push(h)}return[u,m]}_getRasterTileAlignmentInfo(i,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,A.P_)(this.rasterInfo)),(0,R.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,t,c,s={}){const a={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(a.srcResolution=s.srcResolution,this._updateSourceDataInfo(i,a));const f=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:u,srcHeight:m,pyramidLevel:d}=a,p=u/t,h=m/c,x=d<f&&p*h>=16;if(x||d===f&&(p>8||h>8)||0===u||0===m){const y=new U.Z({x:(i.xmax-i.xmin)/t,y:(i.ymax-i.ymin)/c,spatialReference:i.spatialReference});let g=(0,A.VO)(y,this.rasterInfo.spatialReference,i,a.datumTransformation);const b=!g||s.srcResolution&&g.x+g.y<s.srcResolution.x+s.srcResolution.y;if(x&&s.srcResolution&&b){const S=Math.round(Math.log(Math.max(p,h))/Math.LN2)-1;if(f-d+3>=S){const v=2**S;g={x:s.srcResolution.x*v,y:s.srcResolution.y*v}}}g&&(a.srcResolution=g,this._updateSourceDataInfo(i,a))}return(a.srcWidth/t>8||a.srcHeight/c>8)&&(a.srcWidth=0,a.srcHeight=0),a}_updateSourceDataInfo(i,t){t.srcWidth=0,t.srcHeight=0;const c=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:a}=t,{pyramidLevel:f,pyramidResolution:u,excessiveReading:m}=(0,A.kr)(s,this.rasterInfo,this.ioConfig.sampling);if(m)return;let d=t.srcExtent||(0,A.tB)(i,c,a);if(null==d)return;const p=(0,R.Wg)(this.rasterInfo.transform);p&&(d=p.inverseTransform(d)),t.srcExtent=d;const h=Math.ceil((d.xmax-d.xmin)/u.x-.1),x=Math.ceil((d.ymax-d.ymin)/u.y-.1);t.pyramidLevel=f,t.pyramidResolution=u,t.srcWidth=h,t.srcHeight=x}_getRequestOptionsWithSliceId(i){return(0,R.pC)(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,t){const{srcLocation:c,position:s,pyramidLevel:a,useTransposedTile:f}=t,u=i.pixels[0].length/i.width/i.height;if(i.mask&&!i.mask[s])return{location:c,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if((0,R.Wi)(m)||!f){const g=i.pixels.map(v=>v[s]),b={location:c,value:g,pyramidLevel:a},S=this._computeMagDirValues(g.map(v=>[v]));return S?.length&&(b.magdirValue=S.map(v=>v[0])),b}let d=i.pixels.map(g=>Array.prototype.slice.call(g,s*u,s*u+u)),p=this._computeMagDirValues(d);const{requestSomeSlices:h,identifyOptions:x}=t;let y=(0,se.MO)(m,x.transposedVariableName);if(h){const g=(0,se.Ur)(y,(0,R.Wg)(x.multidimensionalDefinition),(0,R.Wg)(x.timeExtent));d=d.map(b=>g.map(S=>b[S])),p=p?.map(b=>g.map(S=>b[S])),y=g.map(b=>y[b])}return{location:c,value:null,dataSeries:y.map((g,b)=>{const S={value:d.map(v=>v[b]),multidimensionalDefinition:g.multidimensionalDefinition.map(v=>new Xe.Z({...v,isSlice:!0}))};return p?.length&&(S.magdirValue=[p[0][b],p[1][b]]),S}),pyramidLevel:a}}};(0,C._)([(0,F.Cb)()],Q.prototype,"_rasterTileAlighmentInfo",void 0),(0,C._)([(0,F.Cb)({readOnly:!0})],Q.prototype,"_isGlobalWrappableSource",null),(0,C._)([(0,F.Cb)(Ne.HQ)],Q.prototype,"url",null),(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Q.prototype,"datasetName",void 0),(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Q.prototype,"datasetFormat",void 0),(0,C._)([(0,F.Cb)()],Q.prototype,"rasterInfo",void 0),(0,C._)([(0,F.Cb)()],Q.prototype,"ioConfig",void 0),(0,C._)([(0,F.Cb)()],Q.prototype,"sourceJSON",void 0),Q=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.BaseRaster")],Q);const ue=Q;let pe=class extends ue{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const{rasterFunction:c}=t,{rasters:s,rasterIds:a}=c.getPrimaryRasters(),f=s.map(d=>d.rasterInfo?void 0:d.open(i));yield Promise.all(f);const u=s.map(({rasterInfo:d})=>d),m=c.bind({rasterInfos:u,rasterIds:a});if(!m.success)throw new J.Z("raster-function:open",`cannot bind the function: ${m.error??""}`);yield t.syncJobHandler(),t.set("sourceJSON",s[0].sourceJSON),t.set("rasterInfo",c.rasterInfo)})()}syncJobHandler(){var i=this;return(0,Z.Z)(function*(){const{rasterFunction:t}=i;if(i._primaryRasters=t.getPrimaryRasters(),i.rasterJobHandler)return i.rasterJobHandler.updateRasterFunction(t)})()}fetchPixels(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){const{rasters:f,rasterIds:u}=a._primaryRasters,m=f.map(y=>y.fetchPixels(i,t,c,s)),d=yield Promise.all(m),p=d.map(y=>y.pixelBlock);if(p.every(y=>(0,R.Wi)(y)))return d[0];const h=d.find(y=>(0,R.pC)(y.pixelBlock))?.extent??i,x=a.rasterJobHandler?yield a.rasterJobHandler.process({extent:h,primaryPixelBlocks:p,primaryRasterIds:u}):a.rasterFunction.process({extent:h,primaryPixelBlocks:p,primaryRasterIds:u});return{...d[0],pixelBlock:x}})()}};(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),(0,C._)([(0,F.Cb)()],pe.prototype,"tileType",void 0),(0,C._)([(0,F.Cb)()],pe.prototype,"rasterFunction",void 0),pe=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.FunctionRaster")],pe);const tt=pe;var rt=w(16943),ve=w(8341),Bt=w(99033),kt=w(37084),G=w(65234);const nt=Ve.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),Ot=i=>{let t=class extends i{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){return this.rasterInfo?.extent}get rasterInfo(){return this.raster?.rasterInfo}get spatialReference(){return this.rasterInfo?.spatialReference??G.Z.WGS84}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(s){this._set("url",(0,Ye.Nm)(s,nt))}set renderer(s){this._set("renderer",s),this.updateRenderer()}convertVectorFieldData(s,a){var f=this;return(0,Z.Z)(function*(){if((0,R.Wi)(s)||!f.rasterInfo)return null;const u=f._rasterJobHandler.instance,m=f.rasterInfo.dataType;return u?u.convertVectorFieldData({pixelBlock:s,dataType:m},a):(0,Je.KC)(s,m)})()}createFlowMesh(s,a){var f=this;return(0,Z.Z)(function*(){const u=f._rasterJobHandler.instance;return u?u.createFlowMesh(s,a):(0,kt.GE)(s.meshType,s.simulationSettings,s.flowData,(0,R.pC)(a.signal)?a.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(s){const{multidimensionalInfo:a}=this.rasterInfo??{};if((0,R.Wi)(a))return s;let f=s.multidimensionalDefinition||this.multidimensionalDefinition;!(0,R.Wi)(f)&&f.length||(f=(0,se.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const u=s.timeExtent||this.timeExtent;if((0,R.pC)(f)&&(0,R.pC)(u)&&((0,R.pC)(u.start)||(0,R.pC)(u.end))){f=f.map(S=>S.clone());const m=a.variables.find(({name:S})=>S===f[0].variableName)?.dimensions?.find(({name:S})=>"StdTime"===S),d=f.find(({dimensionName:S})=>"StdTime"===S);if(!m||!d)return{...s,multidimensionalDefinition:null};const{start:p,end:h}=u,x=(0,R.Wi)(p)?null:p.getTime(),y=(0,R.Wi)(h)?null:h.getTime(),g=x??y,b=y??x;if((0,R.pC)(m.values)){const S=m.values.filter(v=>{if(Array.isArray(v)){if(g===b)return v[0]<=g&&v[1]>=g;const T=v[0]>=g&&v[1]<=b||v[0]<g&&v[1]>b;return v[0]<=g&&v[1]>g||v[0]<b&&v[1]>=b||T}return g===b?v===g:v>=g&&v<=b});if(S.length){const v=S.sort((I,T)=>g===b?(I[0]??I)-(T[0]??T):Math.abs((I[1]??I)-b)-Math.abs((T[1]??T)-b))[0];d.values=[v]}else f=null}else if(m.hasRegularIntervals&&m.extent){const[S,v]=m.extent;g>v||b<S?f=null:d.values=g===b?[g]:[Math.max(S,g),Math.min(v,b)]}}return(0,R.pC)(f)&&(0,se.nb)(f,this.multidimensionalSubset)?{...s,multidimensionalDefinition:null}:{...s,multidimensionalDefinition:f}}updateRenderer(){var s=this;return(0,Z.Z)(function*(){const{loaded:a,symbolizer:f}=s;if(!a||!f||JSON.stringify(s._cachedRendererJson)===JSON.stringify(s.renderer))return;const u=s._rasterJobHandler.instance;u&&(f.rendererJSON=(0,ve.ol)(s.renderer.toJSON()),f.bind(),yield u.updateSymbolizer(f),s._cachedRendererJson=s.renderer.toJSON())})()}applyRenderer(s,a){var f=this;return(0,Z.Z)(function*(){const u=s&&s.pixelBlock;if(!((0,R.pC)(u)&&u.pixels&&u.pixels.length>0))return null;let m;yield f.updateRenderer();const d=f._rasterJobHandler.instance,p=f.bandIds??[];return m=d?yield d.symbolize({...s,simpleStretchParams:a,bandIds:p}):f.symbolizer.symbolize({...s,simpleStretchParams:a,bandIds:p}),m})()}getTileUrl(s,a,f){return"RasterTileServer"===this.raster?.datasetFormat?`${this.url}/tile/${s}/${a}/${f}`:""}getCompatibleTileInfo(s,a,f=!1){if(!this.loaded||(0,R.Wi)(a))return null;if(f&&s.equals(this.spatialReference))return this.tileInfo;const u=(0,vt.C5)(s);return xe.Z.create({size:256,spatialReference:s,origin:u?{x:u.origin[0],y:u.origin[1]}:{x:a.xmin,y:a.ymax}})}getCompatibleFullExtent(s){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(s)||(this._compatibleFullExtent=this.raster.computeExtent(s)),this._compatibleFullExtent):null}fetchTile(s,a,f,u={}){var m=this;return(0,Z.Z)(function*(){if(c(m),u.requestAsImageElement){const d=m.getTileUrl(s,a,f);return(0,$e.default)(d,{responseType:"image",query:{...m.refreshParameters,...m.raster.ioConfig.customFetchParameters},signal:u.signal}).then(p=>p.data)}return(0,R.pC)(m.rasterInfo.multidimensionalInfo)&&(u=m.normalizeRasterFetchOptions(u),(0,R.Wi)(u.multidimensionalDefinition))?{extent:m.raster.getTileExtentFromTileInfo(s,a,f,u.tileInfo||m.rasterInfo.storageInfo.tileInfo),pixelBlock:null}:(yield m._initJobHandler(),yield m._updateRasterFunction(),"raster-shaded-relief"===m.renderer.type&&(u={...u,buffer:{cols:1,rows:1}}),m.raster.fetchTile(s,a,f,u))})()}fetchPixels(s,a,f,u={}){var m=this;return(0,Z.Z)(function*(){return(0,R.pC)(m.rasterInfo.multidimensionalInfo)&&(u=m.normalizeRasterFetchOptions(u),(0,R.Wi)(u.multidimensionalDefinition))?{extent:s,pixelBlock:null}:(yield m._initJobHandler(),yield m._updateRasterFunction(),m.raster.fetchPixels(s,a,f,u))})()}identify(s,a={}){var f=this;return(0,Z.Z)(function*(){return c(f),!(0,R.pC)(f.rasterInfo.multidimensionalInfo)||f.rasterInfo.hasMultidimensionalTranspose&&((0,se.WU)(a.multidimensionalDefinition)||a.transposedVariableName||a.timeExtent)||(a=f.normalizeRasterFetchOptions(a),!(0,R.Wi)(a.multidimensionalDefinition))?f.raster.identify(s,a):{location:s,value:null}})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const s=this.rasterInfo?.multidimensionalInfo;if((0,R.Wi)(s)||"standard-time"!==this.rasterInfo?.dataType)return!1;const a=this.multidimensionalDefinition,f=a?.[0]?.variableName;return s.variables.some(u=>u.name===f&&(!a?.[0].dimensionName||u.dimensions.some(m=>"StdTime"===m.name)))}getStandardTimeValue(s){return new Date(24*(s-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(s){return(0,se.jj)(this.multidimensionalSubset,s??this.rasterInfo.multidimensionalInfo)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,se.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const s=new Rt.Z;return this._rasterJobHandler.connectionPromise=s.initialize().then(()=>{c(this),this._rasterJobHandler.instance=s,this.raster.rasterJobHandler=s,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){c(this);const s=(0,ve.In)(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(){c(this);const s=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,ve.YD)(s)),!this.renderer){const f=(0,ve.Ob)(s,{bandIds:this.bandIds,variableName:(0,R.pC)(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===f.type&&((s.statistics?.[0].max??0)>1e24||(s.statistics?.[0].min??0)<-1e24)&&(f.dynamicRangeAdjustment=!0,f.statistics=null,"none"===f.stretchType&&(f.stretchType="min-max")),this.renderer=f}this.symbolizer?(this.symbolizer.rendererJSON=(0,ve.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=s):this.symbolizer=new Bt.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:s});const a=this.symbolizer.bind();a.success||nt.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer.")}_updateRasterFunction(){var s=this;return(0,Z.Z)(function*(){if("imagery-tile"!==s.type||JSON.stringify(s.rasterFunction)===JSON.stringify(s._cachedRasterFunctionJson))return;let a=s.raster;"Function"===a?.datasetFormat&&(a=a.rasterFunction.getPrimaryRasters().rasters[0]);const{rasterFunction:f}=s;if(f){const u=(0,rt.Ue)(f.toJSON(),{raster:a}),m=new tt({rasterFunction:u});m.rasterJobHandler=s._rasterJobHandler.instance,yield m.open(),s._cachedRasterFunctionJson=s.rasterFunction?.toJSON(),s.raster=m}else s.raster=a})()}};function c(s){if(!s.raster||!s.rasterInfo)throw new J.Z("imagery-tile","no raster")}return(0,C._)([(0,F.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"_cachedRasterFunctionJson",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"bandIds",void 0),(0,C._)([(0,F.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,C._)([(0,F.Cb)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,C._)([(0,F.Cb)()],t.prototype,"interpolation",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"ioConfig",void 0),(0,C._)([(0,F.Cb)({type:[Xe.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,C._)([(0,F.Cb)({type:bt.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"raster",void 0),(0,C._)([(0,F.Cb)({type:St.Z})],t.prototype,"rasterFunction",void 0),(0,C._)([(0,F.Cb)()],t.prototype,"rasterInfo",null),(0,C._)([(0,F.Cb)()],t.prototype,"sourceJSON",void 0),(0,C._)([(0,F.Cb)({json:{read:!1}})],t.prototype,"spatialReference",null),(0,C._)([(0,F.Cb)({json:{read:!1}})],t.prototype,"tileInfo",null),(0,C._)([(0,F.Cb)(Ne.HQ)],t.prototype,"url",null),(0,C._)([(0,F.Cb)({types:Me.dr})],t.prototype,"renderer",null),(0,C._)([(0,F.Cb)()],t.prototype,"symbolizer",void 0),t=(0,C._)([(0,re.j)("esri.layers.ImageryTileMixin")],t),t};var Dt=w(49286),Zt=w(6647),zt=w(30346),Et=w(99555),Ht=w(97941),be=w(36255),Nt=w(2939),Se=w(79645),it=w(15365);function Jt(i){const t=i.fields,c=i.records,s=t.some(p=>"oid"===p.name.toLowerCase())?"OBJECTID":"OID",a=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(p=>({name:p.name,type:"esriFieldType"+p.typeName,alias:p.name}))),f=a.map(p=>p.name),u=[];let m=0,d=0;return c.forEach(p=>{const h={};for(h[s]=m++,d=1;d<f.length;d++)h[f[d]]=p[d-1];u.push({attributes:h})}),{displayFieldName:"",fields:a,features:u}}class st{static get supportedVersions(){return[5]}static parse(t){const c=new DataView(t),s=3&c.getUint8(0);if(3!==s)return{header:{version:s},recordSet:null};const a=c.getUint32(4,!0),f=c.getUint16(8,!0),u=c.getUint16(10,!0),m={version:s,recordCount:a,headerByteCount:f,recordByteCount:u};let d=32;const p=[],h=[];let x;if(3===s){for(;13!==c.getUint8(d);)x=String.fromCharCode(c.getUint8(d+11)).trim(),p.push({name:(0,it.f)(new Uint8Array(t,d,11)),type:x,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(x)],length:c.getUint8(d+16)}),d+=32;if(d+=1,p.length>0)for(;h.length<a&&t.byteLength-d>u;){const y=[];32===c.getUint8(d)?(d+=1,p.forEach(g=>{if("C"===g.type)y.push((0,it.f)(new Uint8Array(t,d,g.length)).trim());else if("N"===g.type)y.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim(),10));else if("F"===g.type)y.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim()));else if("D"===g.type){const b=String.fromCharCode.apply(null,new Uint8Array(t,d,g.length)).trim();y.push(new Date(parseInt(b.substring(0,4),10),parseInt(b.substring(4,6),10)-1,parseInt(b.substring(6,8),10)))}d+=g.length}),h.push(y)):d+=u}}return{header:m,fields:p,records:h,recordSet:Jt({fields:p,records:h})}}}var at=w(46572),ot=w(17253);const fe=new Map;fe.set("int16","esriFieldTypeSmallInteger"),fe.set("int32","esriFieldTypeInteger"),fe.set("int64","esriFieldTypeInteger"),fe.set("float32","esriFieldTypeSingle"),fe.set("float64","esriFieldTypeDouble"),fe.set("text","esriFieldTypeString");let Re=class extends ue{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const{data:c}=yield t.request(t.url+"/conf.json",{signal:i?.signal});if(!t._validateHeader(c))throw new J.Z("cloudraster:open","Invalid or unsupported conf.json.");t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const{storageInfo:s,rasterInfo:a}=t._parseHeader(c);if("thematic"===a.dataType){const f=yield t._fetchAuxiliaryInformation();a.attributeTable=f}t._set("storageInfo",s),t._set("rasterInfo",a),t.ioConfig.retryCount=t.ioConfig.retryCount||0})()}fetchRawTile(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){const{transposeInfo:f}=a.rasterInfo.storageInfo,{transposedVariableName:u}=s,m=!(!f||!u),d=m?0:a.rasterInfo.storageInfo.maximumPyramidLevel-i;if(d<0)return null;const p=a._buildCacheFilePath(d,t,c,s.multidimensionalDefinition,u),h=a._getIndexRecordFromBundle(t,c,m),x=yield a.request(p,{range:{from:0,to:a.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!x)return null;const y=new Uint8Array(x.data),g=a._getTileEndAndContentType(y,h);if(0===g.recordSize)return null;const b=yield a.request(p,{range:{from:g.position,to:g.position+g.recordSize},responseType:"array-buffer",signal:s.signal});if(!b)return null;const[S,v]=a._getTileSize(m);return a.decodePixelBlock(b.data,{width:S,height:v,planes:null,pixelType:null,returnInterleaved:m})})()}_validateHeader(i){return i&&"RasterInfo"===i.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(c=>!i[c])}_parseHeader(i){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][i.pixelType],{bandCount:c,histograms:s,colormap:a,blockWidth:f,blockHeight:u,firstPyramidLevel:m,maximumPyramidLevel:d}=i,p=i.statistics&&i.statistics.map(_=>({min:_.min,max:_.max,avg:_.mean,stddev:_.standardDeviation,median:_.median,mode:_.mode})),h=i.extent.spatialReference,x=i.geodataXform?.spatialReference,y=new G.Z(h?.wkid||h?.wkt?h:x);let g=new X.Z({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:y});const b=new U.Z({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:y}),S=Math.round((g.xmax-g.xmin)/b.x),v=Math.round((g.ymax-g.ymin)/b.y),I=this._parseTransform(i.geodataXform),T=I?g:null;I&&(g=I.forwardTransform(g),b.x=(g.xmax-g.xmin)/S,b.y=(g.ymax-g.ymin)/v);const P=i.properties??{},D=i.format.toLowerCase().replace("cache/",""),E=new U.Z(i.origin.x,i.origin.y,y);let B,k,M,H;if(a&&a.colors)for(B=[],k=0;k<a.colors.length;k++)M=a.colors[k],H=a.values?a.values[k]:k,B.push([H,255&M,M<<16>>>24,M<<8>>>24,M>>>24]);const O=i.LODInfos,z=[];for(k=0;k<O.levels.length;k++)z.push({level:O.levels[k],resolution:O.resolutions[k],scale:96/.0254*O.resolutions[k]});const N=new xe.Z({dpi:96,lods:z,format:D,origin:E,size:[f,u],spatialReference:y}),W={recordSize:8,packetSize:i.packetSize,headerSize:i.packetSize*i.packetSize*8+64},ee=[{maxCol:Math.ceil(S/f)-1,maxRow:Math.ceil(v/u)-1,minCol:0,minRow:0}];let j=2;if(d>0)for(k=0;k<d;k++)ee.push({maxCol:Math.ceil(S/j/f)-1,maxRow:Math.ceil(v/j/u)-1,minCol:0,minRow:0}),j*=2;const V=i.mdInfo;let Y=null;if(V&&P._yxs){const _=P._yxs;Y={packetSize:_.PacketSize,tileSize:[_.TileXSize,_.TileYSize]}}return{storageInfo:W,rasterInfo:new Se.Z({width:S,height:v,pixelType:t,bandCount:c,extent:g,nativeExtent:T,transform:I,spatialReference:y,pixelSize:b,keyProperties:P,statistics:p,histograms:s,multidimensionalInfo:V,colormap:B,storageInfo:new Ie.Z({blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,origin:E,tileInfo:N,transposeInfo:Y,firstPyramidLevel:m,maximumPyramidLevel:d,blockBoundary:ee})})}}_parseTransform(i){if(!(0,at.j)(i))throw new J.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,at.c)(i);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new J.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}_fetchAuxiliaryInformation(i){var t=this;return(0,Z.Z)(function*(){const c=t.request(t.url+"/conf.vat.json",{signal:i}).then(u=>u.data).catch(()=>null),s=t.request(t.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:i}).then(u=>u.data).catch(()=>null),a=yield Promise.all([c,s]);let f;if(a[0]){let u=a[0].fields;const m=a[0].values;if(u&&m){u=u.map(p=>({type:"OID"===p.name?"esriFieldTypeOID":fe.get(p.type),name:p.name,alias:p.alias||p.name}));const d=m.map(p=>({attributes:p}));u&&m&&(f={fields:u,features:d})}}return!f&&a[1]&&(f=st.parse(a[1]).recordSet),ot.default.fromJSON(f)})()}_buildCacheFilePath(i,t,c,s,a){const f=this._getPackageSize(!!a),u=Math.floor(t/f)*f,m=Math.floor(c/f)*f,d="R"+this._toHexString4(u)+"C"+this._toHexString4(m);let p="L";p+=i>=10?i.toString():"0"+i.toString();const{multidimensionalInfo:h}=this.rasterInfo,x=s?.[0];if((0,R.Wi)(h)||!x)return`${this.url}/_alllayers/${p}/${d}.bundle`;let y="_yxs";if(!a){y=h.variables.find(S=>S.name===x.variableName).dimensions[0].values.indexOf(x.values[0]).toString(16);const b=4-y.length;for(let S=0;S<b;S++)y="0"+y;y="S"+y}const g=this._getVariableFolderName(a||x.variableName);return`${this.url}/_alllayers/${g}/${y}/${p}/${d}.bundle`}_getPackageSize(i=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return i&&(0,R.pC)(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(i=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:c}=t;return i&&(0,R.pC)(c)?c.tileSize:t.tileInfo.size}_getVariableFolderName(i){return""===(i=i.trim())?"_v":i.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(i,t,c=!1){const s=this._getPackageSize(c),a=s*(i%s)+t%s;if(a<0)throw"Invalid level / row / col";return 20+a*this.storageInfo.recordSize+44}_getTileEndAndContentType(i,t){const c=i.subarray(t,t+8);let s,a=0;for(s=0;s<5;s++)a|=(255&c[s])<<8*s;const f=0xffffffffff&a;for(a=0,s=5;s<8;s++)a|=(255&c[s])<<8*(s-5);return{position:f,recordSize:0xffffffffff&a}}_toHexString4(i){let t=i.toString(16);if(4!==t.length){let c=4-t.length;for(;c-- >0;)t="0"+t}return t}};(0,C._)([(0,F.Cb)({readOnly:!0})],Re.prototype,"storageInfo",void 0),(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.CloudRaster")],Re);const Lt=Re;var Wt=w(8314),ke=w(17057);let Ce=class extends ue{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=t.data,{pixelBlock:s,statistics:a,histograms:f,name:u,keyProperties:m,nativeExtent:d,transform:p}=t.data,{width:h,height:x,pixelType:y}=s,g=c.extent??new X.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:x-.5,spatialReference:new G.Z({wkid:3857})}),v=new Se.Z({width:h,height:x,pixelType:y,extent:g,nativeExtent:d,transform:p,pixelSize:{x:g.width/h,y:g.height/x},spatialReference:g.spatialReference,bandCount:3,keyProperties:m||{},statistics:a,isPseudoSpatialReference:c.isPseudoSpatialReference??!c.extent,histograms:f});t.createRemoteDatasetStorageInfo(v,512,512),t._set("rasterInfo",v),t.updateTileInfo(),yield t._buildInMemoryRaster(s,{width:512,height:512},i),t.datasetName=u,t.url="/InMemory/"+u})()}fetchRawTile(i,t,c,s={}){const a=this._pixelBlockTiles.get(`${i}/${t}/${c}`);return Promise.resolve(a)}_buildInMemoryRaster(i,t,c){var s=this;return(0,Z.Z)(function*(){const a=s.rasterInfo.storageInfo.maximumPyramidLevel,f=s.rasterJobHandler?s.rasterJobHandler.split({pixelBlock:i,tileSize:t,maximumPyramidLevel:a},c):Promise.resolve((0,ce.Vl)(i,t,a)),u=(0,R.pC)(s.rasterInfo.statistics),m=(0,R.pC)(s.rasterInfo.histograms),d=u?Promise.resolve({statistics:null,histograms:null}):s.rasterJobHandler?s.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},c):Promise.resolve((0,ke.Hv)(i)),p=yield(0,ge.as)([f,d]);if(!p[0].value&&p[1].value)throw new J.Z("inmemory-raster:open","failed to build in memory raster");s._pixelBlockTiles=p[0].value,u||(s.rasterInfo.statistics=p[1].value?.statistics),m||(s.rasterInfo.histograms=p[1].value?.histograms)})()}};(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),(0,C._)([(0,F.Cb)()],Ce.prototype,"data",void 0),Ce=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ce);const At=Ce;function he(i,t){if(!i||!t)return[];let c=t;t.includes("/")?(c=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const f=he(i,c);for(let u=0;u<f.length;u++)he(f[u],t).forEach(m=>s.push(m));return s}const a=i.getElementsByTagNameNS("*",c);if(!a||0===a.length)return[];for(let f=0;f<a.length;f++)s.push(a[f]||a.item[f]);return s}function K(i,t){if(!i||!t)return null;let c=t;t.includes("/")?(c=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=he(i,c);return s.length>0?t?K(s[0],t):s[0]:null}function q(i,t=null){const c=t?K(i,t):i;let s;return c?(s=c.textContent||c.nodeValue,s?s.trim():null):null}function Oe(i,t){return function _t(i,t){const c=he(i,t),s=[];let a;for(let f=0;f<c.length;f++)a=c[f].textContent||c[f].nodeValue,a&&(a=a.trim(),""!==a&&s.push(a));return s}(i,t).map(c=>Number(c))}function de(i,t){const c=q(i,t);return Number(c)}function Le(i,t){const c=i?.nodeName?.toLowerCase(),s=t.toLowerCase();return c.slice(c.lastIndexOf(":")+1)===s}var We=w(85374);function ct(i,t){if(!i||!t)return null;const c=[];for(let s=0;s<i.length;s++)c.push(i[s]),c.push(t[s]);return c}function De(i){if(!i)return null;let t=Number(i);if(!isNaN(t)&&0!==t)return new G.Z({wkid:t});if((i=String(i)).startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const c=i.indexOf("VERTCS"),s=i.indexOf("PROJCS"),a=s>-1?s:i.indexOf("GEOGCS");if(-1===a)return null;const f=i.slice(a,i.lastIndexOf("]",c)+1).trim(),u=i.slice(c,i.lastIndexOf("]")).trim();t=Ae(f);const m=new G.Z(t?{wkid:t}:{wkt:f}),d=Ae(u);return d&&(m.vcsWkid=d),m}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=Ae(i),new G.Z(0!==t?{wkid:t}:{wkt:i})):null}function Ae(i){const t=i.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(a=>a.trim()).filter(a=>""!==a),c=t[t.length-1].split(","),s=c[0]?.toLowerCase();if(("epsg"===s||"esri"===s)&&i.endsWith('"]]')){const a=Number(c[1]);if(!isNaN(a)&&0!==a)return a}return 0}function _e(i){if("pamdataset"!==i?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(s=>{if(1===s.nodeType)if(Le(s,"SRS")){if(!t.spatialReference){const a=q(s);t.spatialReference=De(a)}}else if(Le(s,"Metadata"))if("xml:ESRI"===s.getAttribute("domain")){const{spatialReference:a,transform:f}=function jt(i){const t=K(i,"GeodataXform"),c=De(de(t,"SpatialReference/WKID")||q(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:c,transform:null};const s=de(t,"PolynomialOrder")??1,a=Oe(t,"CoeffX/Double"),f=Oe(t,"CoeffY/Double"),u=Oe(t,"InverseCoeffX/Double"),m=Oe(t,"InverseCoeffY/Double"),d=ct(a,f),p=ct(u,m);return{spatialReference:c,transform:d&&p&&d.length&&p.length?new We.Z({spatialReference:c,polynomialOrder:s,forwardCoefficients:d,inverseCoefficients:p}):null}}(s);t.transform=f,t.spatialReference||(t.spatialReference=a)}else he(s,"MDI").forEach(a=>t.metadata[a.getAttribute("key")]=q(a));else if(Le(s,"PAMRasterBand")){const a=function Ut(i){const t=de(i,"NoDataValue"),c=K(i,"Histograms/HistItem"),s=de(c,"HistMin"),a=de(c,"HistMax"),f=de(c,"BucketCount"),u=q(c,"HistCounts")?.split("|").map(y=>Number(y));let m,d,p,h;he(i,"Metadata/MDI").forEach(y=>{const g=Number(y.textContent??y.nodeValue);switch(y.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=g;break;case"STATISTICS_MAXIMUM":d=g;break;case"STATISTICS_MEAN":p=g;break;case"STATISTICS_STDDEV":h=g}});const x=de(i,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:u?.length&&null!=s&&null!=a?{min:s,max:a,size:f||u.length,counts:u}:null,sourceBandIndex:x,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:h}:null}}(s);null!=a.sourceBandIndex&&null==t.rasterBands[a.sourceBandIndex]?t.rasterBands[a.sourceBandIndex]=a:t.rasterBands.push(a)}});const c=t.rasterBands;return c.length&&(t.statistics=c[0].statistics?c.map(f=>f.statistics).filter(R.pC):null,t.histograms=c[0].histogram?c.map(f=>f.histogram).filter(R.pC):null),t}let Ze=class extends ue{open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=yield t._fetchData(i);let{spatialReference:s,statistics:a,histograms:f,transform:u}=yield t._fetchAuxiliaryData(i);const m=!s;m&&(s=new G.Z({wkid:3857})),f?.length&&null==a&&(a=(0,ke.Oh)(f));const{width:d,height:p}=c;let h=new X.Z({xmin:-.5,ymin:.5-p,xmax:d-.5,ymax:.5,spatialReference:s});const x=u?u.forwardTransform(h):h;let y=!0;if(u){const b=u.forwardCoefficients;y=b&&0===b[1]&&0===b[2],y&&(u=null,h=x)}const g=new At({data:{extent:x,nativeExtent:h,transform:u,pixelBlock:c,statistics:a,histograms:f,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:m}});yield g.open(),g.data=null,t._set("rasterInfo",g.rasterInfo),t._inMemoryRaster=g})()}fetchRawTile(i,t,c,s={}){return this._inMemoryRaster.fetchRawTile(i,t,c,s)}_fetchData(i){var t=this;return(0,Z.Z)(function*(){const{data:c}=yield t.request(t.url,{responseType:"array-buffer",signal:i?.signal}),s=(0,et.y)(c).toUpperCase();if("JPG"!==s&&"PNG"!==s&&"GIF"!==s&&"BMP"!==s)throw new J.Z("image-aux-raster:open","the data is not a supported format");t._set("datasetFormat",s);const a=s.toLowerCase(),f="gif"===a||"bmp"===a||!(0,Wt.Z)("ios");return yield t.decodePixelBlock(c,{format:a,useCanvas:f,hasNoZlibMask:!0})})()}_fetchAuxiliaryData(i){var t=this;return(0,Z.Z)(function*(){const c=(0,R.Wg)(i?.signal),s=t.ioConfig.skipExtensions??[],a=s.includes("aux.xml")?null:t.request(t.url+".aux.xml",{responseType:"xml",signal:c}),f=t.datasetFormat,u="JPG"===f?"jgw":"PNG"===f?"pgw":"BMP"===f?"bpw":null,m=u&&s.includes(u)?null:t.request(t.url.slice(0,t.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:c}),d=yield(0,ge.as)([a,m]);if(c?.aborted)throw(0,ge.zE)();const p=_e(d[0].value?.data);if(!p.transform){const h=d[1].value?d[1].value.data.split("\n").slice(0,6).map(x=>Number(x)):null;p.transform=6===h?.length?new We.Z({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return p})()}};(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Ze.prototype,"datasetFormat",void 0),Ze=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ze);const ze=Ze;var Gt=w(21726),$t=w(51026),Vt=w(28930),Yt=w(76671),Xt=w(99208);let Te=class extends ue{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=i&&i.signal,s=t.sourceJSON?{data:t.sourceJSON}:yield t.request(t.url,{query:{f:"json"},signal:c});s.ssl&&(t.url=t.url.replace(/^http:/i,"https:"));const a=s.data;if(t.sourceJSON=a,!a)throw new J.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new J.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");t._fixScaleInServiceInfo(),t.tileType=a.cacheType,null==t.tileType&&(t.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(a.tileInfo.format.toLowerCase())?"Map":"lerc"===a.tileInfo.format.toLowerCase()?"Elevation":"Raster"),t.datasetName=a.name?.slice(a.name.indexOf("/")+1)??"";const u=yield t._fetchRasterInfo({signal:c});if((0,R.Wi)(u))throw new J.Z("image-server-raster:open","cannot initialize image service");const m="Map"===t.tileType?(0,$t.d)(a.tileInfo,a):xe.Z.fromJSON(a.tileInfo);(0,R.O3)(m);const[d,p]=t._computeMinMaxLOD(u,m),{extent:h,pixelSize:x}=u,y=.5/u.width*x.x,g=Math.max(x.x,x.y),{lods:b}=m;("Map"!==t.tileType&&0!==a.maxScale||Math.abs(x.x-x.y)>y||!b.some(B=>Math.abs(B.resolution-g)<y))&&(x.x=x.y=d.resolution,u.width=Math.ceil((h.xmax-h.xmin)/x.x-.1),u.height=Math.ceil((h.ymax-h.ymin)/x.y-.1));const S=d.level-p.level,[v,I]=m.size,T=[];b.forEach(B=>{B.level>=p.level&&B.level<=d.level&&T.push({x:B.resolution,y:B.resolution})}),T.sort((B,k)=>B.x-k.x);const P=t.computeBlockBoundary(h,v,I,m.origin,T,S),D=T.length>1?T.slice(1):null;let E;if(a.transposeInfo&&(E={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:u.keyProperties?._yxs.PacketSize??0}),u.storageInfo=new Ie.Z({blockWidth:m.size[0],blockHeight:m.size[1],pyramidBlockWidth:m.size[0],pyramidBlockHeight:m.size[1],pyramidResolutions:D,compression:m.format,origin:m.origin,firstPyramidLevel:1,maximumPyramidLevel:S,tileInfo:m,transposeInfo:E,blockBoundary:P}),t._fixGCSShift(u),t._set("rasterInfo",u),a.capabilities.toLowerCase().includes("tilemap")){const B={tileInfo:u.storageInfo.tileInfo,parsedUrl:(0,Gt.mN)(t.url),url:t.url,tileServers:[],type:"tile"};t._tilemapCache=new Vt.y({layer:B})}})()}fetchRawTile(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){const{storageInfo:f,extent:u}=a.rasterInfo,{transposeInfo:m}=f,d=(0,R.pC)(m)&&!!s.transposedVariableName;if(a._slices&&!d&&null==s.sliceId)return null;const h=`${a.url}/tile/${d?0:f.maximumPyramidLevel-i+a._levelOffset}/${t}/${c}`,x=a._slices?d?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:y}=yield a.request(h,{query:x,responseType:"array-buffer",signal:s.signal});if(!y)return null;const g=d?m.tileSize:f.tileInfo.size,b=yield a.decodePixelBlock(y,{width:g[0],height:g[1],planes:null,pixelType:null,isPoint:"Elevation"===a.tileType,returnInterleaved:d}),S=f.blockBoundary[i];if("jpg"!==f.compression||c>S.minCol&&c<S.maxCol&&t>S.minRow&&t<S.maxRow)return b;const{origin:v,blockWidth:I,blockHeight:T}=f,{x:P,y:D}=a.getPyramidPixelSize(i),E=Math.round((u.xmin-v.x)/P)%I,B=Math.round((u.xmax-v.x)/P)%I||I,k=Math.round((v.y-u.ymax)/D)%T,M=Math.round((v.y-u.ymin)/D)%T||T,H=c===S.minCol?E:0,O=t===S.minRow?k:0;return(0,ce.pW)(b,{x:H,y:O},{width:(c===S.maxCol?B:I)-H,height:(t===S.maxRow?M:T)-O}),b})()}getSliceIndex(i){if(!this._slices||(0,R.Wi)(i)||0===i.length)return null;const t=i;for(let c=0;c<this._slices.length;c++){const s=this._slices[c].multidimensionalDefinition;if(s.length===t.length&&!s.some(a=>{const f=t.find(u=>a.variableName===u.variableName&&u.dimensionName===a.dimensionName);return!f||(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])!==(Array.isArray(f.values[0])?`${f.values[0][0]}-${f.values[0][1]}`:f.values[0])}))return c}return null}fetchVariableStatisticsHistograms(i,t){var c=this;return(0,Z.Z)(function*(){const s=c.request(c.url+"/statistics",{query:{variable:i,f:"json"},signal:t}).then(u=>u.data?.statistics),a=c.request(c.url+"/histograms",{query:{variable:i,f:"json"},signal:t}).then(u=>u.data?.histograms),f=yield Promise.all([s,a]);return f[0]&&f[0].forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:f[0]||null,histograms:f[1]||null}})()}computeBestPyramidLevelForLocation(i,t={}){var c=this;return(0,Z.Z)(function*(){if(!c._tilemapCache)return 0;let s=c.identifyPixelLocation(i,0,(0,R.Wg)(t.datumTransformation));if(null===s)return null;let a=0;const{maximumPyramidLevel:f}=c.rasterInfo.storageInfo;let u=f-a+c._levelOffset;const m=s.srcLocation;for(;u>=0;){try{if("available"===(yield c._tilemapCache.fetchAvailability(u,s.row,s.col,t)))break}catch{}if(u--,a++,s=c.identifyPixelLocation(m,a,(0,R.Wg)(t.datumTransformation)),null===s)return null}return-1===u||null==s?null:a})()}_fetchRasterInfo(i){var t=this;return(0,Z.Z)(function*(){const c=t.sourceJSON;if("Map"===t.tileType){const m=c.fullExtent||c.extent,d=Math.ceil((m.xmax-m.xmin)/c.pixelSizeX-.1),p=Math.ceil((m.ymax-m.ymin)/c.pixelSizeY-.1),h=G.Z.fromJSON(c.spatialReference||m.spatialReference),x=new U.Z({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:h});return new Se.Z({width:d,height:p,bandCount:3,extent:X.Z.fromJSON(m),spatialReference:h,pixelSize:x,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:s}=i,a=(0,Xt.g)(t.url,t.sourceJSON,{signal:s,query:t.ioConfig.customFetchParameters}),f=c.hasMultidimensions?t.request(`${t.url}/slices`,{query:{f:"json"},signal:s}).then(m=>m.data&&m.data.slices).catch(()=>null):null,u=yield Promise.all([a,f]);return t._slices=u[1],u[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_fixGCSShift(i){const{extent:t,spatialReference:c}=i;t.xmin>-1&&t.xmax>181&&c?.wkid&&c.isGeographic&&(i.nativeExtent=i.extent,i.transform=new Yt.Z,i.extent=i.transform.forwardTransform(t))}_computeMinMaxLOD(i,t){const{pixelSize:c}=i,s=.5/i.width*c.x,{lods:a}=t,f=t.lodAt(Math.max.apply(null,a.map(y=>y.level))),u=t.lodAt(Math.min.apply(null,a.map(y=>y.level))),{tileType:m}=this;if("Map"===m)return this._levelOffset=a[0].level,[f,u];if("Raster"===m)return[a.find(y=>y.resolution===c.x)??f,u];const{minScale:d,maxScale:p}=this.sourceJSON;let h=f;p>0&&(h=a.find(y=>Math.abs(y.scale-p)<s),h||(h=a.filter(y=>y.scale>p).sort((y,g)=>y.scale>g.scale?1:-1)[0]??f));let x=u;return d>0&&(x=a.find(y=>Math.abs(y.scale-d)<s)??u,this._levelOffset=x.level-u.level),[h,x]}};(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),(0,C._)([(0,F.Cb)()],Te.prototype,"tileType",void 0),Te=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Te);const Kt=Te;var Qt=w(25688),qt=w(44853);const ie=new Map;ie.set("Int8","s8"),ie.set("UInt8","u8"),ie.set("Int16","s16"),ie.set("UInt16","u16"),ie.set("Int32","s32"),ie.set("UInt32","u32"),ie.set("Float32","f32"),ie.set("Float64","f32"),ie.set("Double64","f32");const le=new Map;le.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),le.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),le.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),le.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ye=class extends ue{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init(),t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const c=i?(0,R.Wg)(i.signal):null,s=yield t.request(t.url,{responseType:"xml",signal:c}),{rasterInfo:a,files:f}=t._parseHeader(s.data);if(-1===t.ioConfig.skipExtensions?.indexOf("aux.xml")){const v=yield t._fetchAuxiliaryData(i);null!=v&&(a.statistics=v.statistics??a.statistics,a.histograms=v.histograms,v.histograms&&(0,R.Wi)(a.statistics)&&(a.statistics=(0,ke.Oh)(v.histograms)))}t._set("rasterInfo",a),t._files=f;const u=yield t.request(f.index,{responseType:"array-buffer",signal:c});t._storageIndex=t._parseIndex(u.data);const{blockWidth:m,blockHeight:d}=t.rasterInfo.storageInfo,p=t.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:x}=t.rasterInfo,y=[],g=t._getBandSegmentCount();let b=0,S=-1;for(;b<t._storageIndex.length;){S++;const v=Math.ceil(h/m/p**S)-1,I=Math.ceil(x/d/p**S)-1;b+=(v+1)*(I+1)*g*4,y.push({maxRow:I,maxCol:v,minCol:0,minRow:0})}t.rasterInfo.storageInfo.blockBoundary=y,S>0&&(t.rasterInfo.storageInfo.firstPyramidLevel=1,t.rasterInfo.storageInfo.maximumPyramidLevel=S),t.updateTileInfo()})()}fetchRawTile(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){const{blockWidth:f,blockHeight:u,blockBoundary:m}=a.rasterInfo.storageInfo,d=m[i];if(!d||d.maxRow<t||d.maxCol<c||d.minRow>t||d.minCol>c)return null;const{bandCount:p,pixelType:h}=a.rasterInfo,{ranges:x,actualTileWidth:y,actualTileHeight:g}=a._getTileLocation(i,t,c);if(!x||0===x.length)return null;if(0===x[0].from&&0===x[0].to){const O=new Uint8Array(f*u);return new Qt.Z({width:f,height:u,pixels:null,mask:O,validPixelCount:0})}const{bandIds:b}=a.ioConfig,S=a._getBandSegmentCount(),v=[];let I=0;for(I=0;I<S;I++)(!b||b.indexOf[I]>-1)&&v.push(a.request(a._files.data,{range:{from:x[I].from,to:x[I].to},responseType:"array-buffer",signal:s.signal}));const T=yield Promise.all(v),P=T.map(O=>O.data.byteLength).reduce((O,z)=>O+z),D=new Uint8Array(P);let E=0;for(I=0;I<S;I++)D.set(new Uint8Array(T[I].data),E),E+=T[I].data.byteLength;const B=le.get(a.rasterInfo.storageInfo.compression).decoderFormat,k=yield a.decodePixelBlock(D.buffer,{width:f,height:u,format:B,planes:b?.length||p,pixelType:h});if((0,R.pC)(a.rasterInfo.noDataValue)&&"lerc"!==B&&!k.mask){const O=a.rasterInfo.noDataValue[0];if(null!=O){const z=k.width*k.height,N=new Uint8Array(z);if(Math.abs(O)>1e24)for(I=0;I<z;I++)Math.abs((k.pixels[0][I]-O)/O)>1e-6&&(N[I]=1);else for(I=0;I<z;I++)k.pixels[0][I]!==O&&(N[I]=1);k.mask=N}}let M=0,H=0;if(y!==f||g!==u){let O=k.mask;if(O)for(I=0;I<u;I++)if(H=I*f,I<g)for(M=y;M<f;M++)O[H+M]=0;else for(M=0;M<f;M++)O[H+M]=0;else for(O=new Uint8Array(f*u),k.mask=O,I=0;I<g;I++)for(H=I*f,M=0;M<y;M++)O[H+M]=1}return k})()}_parseIndex(i){if(i.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,c,s,a,f,u;if(qt.f){for(c=new Uint8Array(i),a=new ArrayBuffer(i.byteLength),s=new Uint8Array(a),f=0;f<i.byteLength/4;f++)for(u=0;u<4;u++)s[4*f+u]=c[4*f+3-u];t=new Uint32Array(a)}else t=new Uint32Array(i);return t}_getBandSegmentCount(){return le.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,t,c){const{blockWidth:s,blockHeight:a,pyramidScalingFactor:f}=this.rasterInfo.storageInfo,{width:u,height:m}=this.rasterInfo,d=this._getBandSegmentCount();let p,h,x,y=0,g=0;for(x=0;x<i;x++)g=f**x,p=Math.ceil(u/s/g),h=Math.ceil(m/a/g),y+=p*h;g=f**i,p=Math.ceil(u/s/g),h=Math.ceil(m/a/g),y+=t*p+c,y*=4*d;const b=this._storageIndex.subarray(y,y+4*d);let S=0,v=0;const I=[];for(let T=0;T<d;T++)S=b[4*T+0]*2**32+b[4*T+1],v=S+b[4*T+2]*2**32+b[4*T+3],I.push({from:S,to:v});return{ranges:I,actualTileWidth:c<p-1?s:Math.ceil(u/g)-s*(p-1),actualTileHeight:t<h-1?a:Math.ceil(m/g)-a*(h-1)}}_parseHeader(i){const t=K(i,"MRF_META/Raster");if(!t)throw new J.Z("mrf:open","not a valid MRF format");const c=K(t,"Size"),s=parseInt(c.getAttribute("x"),10),a=parseInt(c.getAttribute("y"),10),f=parseInt(c.getAttribute("c"),10),u=(q(t,"Compression")||"none").toLowerCase();if(!le.has(u))throw new J.Z("mrf:open","currently does not support compression "+u);const m=q(t,"DataType")||"UInt8",d=ie.get(m);if(null==d)throw new J.Z("mrf:open","currently does not support pixel type "+m);const p=K(t,"PageSize"),h=parseInt(p.getAttribute("x"),10),x=parseInt(p.getAttribute("y"),10),y=K(t,"DataValues");let g,b;if(y&&(b=y.getAttribute("NoData"),null!=b&&(g=b.trim().split(" ").map(z=>parseFloat(z)))),K(i,"MRF_META/CachedSource"))throw new J.Z("mrf:open","currently does not support MRF referencing other data files");const S=K(i,"MRF_META/GeoTags"),v=K(S,"BoundingBox");let I,T=!1;if(null!=v){const z=parseFloat(v.getAttribute("minx")),N=parseFloat(v.getAttribute("miny")),W=parseFloat(v.getAttribute("maxx")),ee=parseFloat(v.getAttribute("maxy")),j=q(S,"Projection")||"";let V=G.Z.WGS84;if("LOCAL_CS[]"!==j)if(j.toLowerCase().startsWith("epsg:")){const Y=Number(j.slice(5));isNaN(Y)||0===Y||(V=new G.Z({wkid:Y}))}else V=De(j)??G.Z.WGS84;else T=!0,V=new G.Z({wkid:3857});I=new X.Z(z,N,W,ee),I.spatialReference=V}else T=!0,I=new X.Z({xmin:-.5,ymin:.5-a,xmax:s-.5,ymax:.5,spatialReference:new G.Z({wkid:3857})});const P=K(i,"MRF_META/Rsets"),D=parseInt(P&&P.getAttribute("scale")||"2",10),E=I.spatialReference,B=new Ie.Z({origin:new U.Z({x:I.xmin,y:I.ymax,spatialReference:E}),blockWidth:h,blockHeight:x,pyramidBlockWidth:h,pyramidBlockHeight:x,compression:u,pyramidScalingFactor:D}),k=new U.Z({x:I.width/s,y:I.height/a,spatialReference:E}),M=new Se.Z({width:s,height:a,extent:I,isPseudoSpatialReference:T,spatialReference:E,bandCount:f,pixelType:d,pixelSize:k,noDataValue:g,storageInfo:B}),H=q(i,"datafile"),O=q(i,"IndexFile");return{rasterInfo:M,files:{mrf:this.url,index:O||this.url.replace(".mrf",".idx"),data:H||this.url.replace(".mrf",le.get(u).blobExtension)}}}_fetchAuxiliaryData(i){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:i?.signal});return _e(c)}catch{return null}})()}};(0,C._)([(0,F.Cb)()],ye.prototype,"_files",void 0),(0,C._)([(0,F.Cb)()],ye.prototype,"_storageIndex",void 0),(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),ye=(0,C._)([(0,re.j)("esri.layers.support.rasterIO.MRFRaster")],ye);const er=ye;var we=w(93122),Ee=w(635);const je=(i,t)=>i.get(t)?.values,Pe=(i,t)=>i.get(t)?.values?.[0];let me=class extends ue{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(i){var t=this;return(0,Z.Z)(function*(){yield t.init();const c=i?(0,R.Wg)(i.signal):null,{data:s}=yield t.request(t.url,{range:{from:0,to:t._bufferSize},responseType:"array-buffer",signal:c});if(!s)throw new J.Z("tiffraster:open","failed to open url "+t.url);t.datasetName=t.url.slice(t.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFDPos:f,isBigTiff:u}=(0,we.cK)(s),m=[];yield t._readIFDs(m,s,a,f,0,u?8:4,c);const{imageInfo:d,rasterInfo:p}=t._parseIFDs(m);if(t._headerInfo={littleEndian:a,isBigTiff:u,ifds:m,...d},t._set("rasterInfo",p),!d.isSupported)throw new J.Z("tiffraster:open","this tiff is not supported: "+d.message);if(!d.tileWidth)throw new J.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=t.ioConfig;if(!h.includes("aux.xml")){const x=yield t._fetchAuxiliaryMetaData(i);null!=x&&t._processPAMInfo(x,p)}h.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||(p.attributeTable=yield t._fetchAuxiliaryTable(i),(0,R.pC)(p.attributeTable)&&(p.keyProperties.DataType="thematic")),t.updateTileInfo()})()}fetchRawTile(i,t,c,s={}){var a=this;return(0,Z.Z)(function*(){if(!a._headerInfo?.isSupported||a.isBlockOutside(i,t,c))return null;const f=a._getTileLocation(i,t,c);if(!f)return null;const{ranges:u,actualTileWidth:m,actualTileHeight:d,ifd:p}=f,h=u.map(B=>a.request(a.url,{range:B,responseType:"array-buffer",signal:s.signal})),x=yield Promise.all(h),y=x.map(B=>B.data.byteLength).reduce((B,k)=>B+k),g=1===x.length?x[0].data:new ArrayBuffer(y),b=[0],S=[0];if(x.length>1){const B=new Uint8Array(g);for(let k=0,M=0;k<x.length;k++){const H=x[k].data;B.set(new Uint8Array(H),M),b[k]=M,M+=H.byteLength,S[k]=H.byteLength}}const{blockWidth:v,blockHeight:I}=a.getBlockWidthHeight(i),T=yield a.decodePixelBlock(g,{format:"tiff",customOptions:{headerInfo:a._headerInfo,ifd:p,offsets:b,sizes:S},width:v,height:I,planes:null,pixelType:null});let P,D,E;if(m!==v||d!==I){let B=T.mask;if(B)for(P=0;P<I;P++)if(E=P*v,P<d)for(D=m;D<v;D++)B[E+D]=0;else for(D=0;D<v;D++)B[E+D]=0;else for(B=new Uint8Array(v*I),T.mask=B,P=0;P<d;P++)for(E=P*v,D=0;D<m;D++)B[E+D]=1}return T})()}_parseIFDs(i){const t=(0,we.FI)(i),{width:c,height:s,tileWidth:a,tileHeight:f,planes:u,pixelType:m,compression:d,firstPyramidLevel:p,maximumPyramidLevel:h,pyramidBlockWidth:x,pyramidBlockHeight:y,tileBoundary:g,affine:b,metadata:S}=t;let I=De(t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid),T=!1;null==I&&(T=!0,I=new G.Z({wkid:3857}));const P=new X.Z({...t.extent,spatialReference:I}),D=new U.Z(P?{x:P.xmin,y:P.ymax,spatialReference:I}:{x:0,y:0}),E=new Ie.Z({blockWidth:a,blockHeight:f,pyramidBlockWidth:x,pyramidBlockHeight:y,compression:d,origin:D,firstPyramidLevel:p,maximumPyramidLevel:h,blockBoundary:g}),B=new U.Z({x:(P.xmax-P.xmin)/c,y:(P.ymax-P.ymin)/s,spatialReference:I}),k=S?{BandProperties:S.bandProperties,DataType:S.dataType}:{};let M=null;const H=Pe(i[0],"PHOTOMETRICINTERPRETATION"),O=je(i[0],"COLORMAP");if(3===H&&O?.length>3&&O.length%3==0){M=[];const N=O.length/3;for(let W=0;W<N;W++)M.push([W,O[W]>>>8,O[W+N]>>>8,O[W+2*N]>>>8])}const z=new Se.Z({width:c,height:s,bandCount:u,pixelType:m,pixelSize:B,storageInfo:E,spatialReference:I,isPseudoSpatialReference:T,keyProperties:k,extent:P,colormap:M,statistics:S?S.statistics:null});return b?.length&&(z.nativeExtent=new X.Z({xmin:-.5,ymin:.5-s,xmax:c-.5,ymax:.5,spatialReference:I}),z.transform=new We.Z({polynomialOrder:1,forwardCoefficients:[b[2]+b[0]/2,b[5]-b[3]/2,b[0],b[3],-b[1],-b[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new U.Z({x:(P.xmax-P.xmin)/c,y:(P.ymax-P.ymin)/s,spatialReference:I}),E.origin.x=-.5,E.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(i,t){if(t.statistics=i.statistics??t.statistics,t.histograms=i.histograms,i.histograms&&(0,R.Wi)(t.statistics)&&(t.statistics=(0,ke.Oh)(i.histograms)),i.transform&&(0,R.Wi)(t.transform)){t.transform=i.transform,t.nativeExtent=t.extent;const c=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new U.Z({x:(c.xmax-c.xmin)/t.width,y:(c.ymax-c.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=c}t.spatialReference||(t.spatialReference=i.spatialReference)}_readIFDs(i,t,c,s,a,f=4,u){var m=this;return(0,Z.Z)(function*(){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(yield m.request(m.url,{range:{from:s+a,to:s+a+m._bufferSize},responseType:"array-buffer",signal:u})).data,a=s+a,s=0);const d=yield m._readIFD(t,c,s,a,Ee.Z.TIFF_TAGS,f,u);if(i.push(d.ifd),!d.nextIFD)return null;yield m._readIFDs(i,t,c,d.nextIFD-a,a,f,u)})()}_readIFD(i,t,c,s,a=Ee.Z.TIFF_TAGS,f=4,u){var m=this;return(0,Z.Z)(function*(){if(!i)return null;const d=(0,we.vr)(i,t,c,s,a,f);if(d.success){const p=[];if(d.ifd?.forEach(h=>{h.values||p.push(h)}),p.length>0){const h=p.map(y=>y.offlineOffsetSize).filter(R.pC),x=Math.min.apply(null,h.map(y=>y[0]));if(Math.min.apply(null,h.map(y=>y[0]+y[1]))-x<=m._bufferSize){const{data:y}=yield m.request(m.url,{range:{from:x,to:x+m._bufferSize},responseType:"array-buffer",signal:u});i=y,s=x,p.forEach(g=>(0,we.Dq)(i,t,g,s))}}if(d.ifd?.has("GEOKEYDIRECTORY")){const h=d.ifd.get("GEOKEYDIRECTORY"),x=h?.values;if(x&&x.length>4){const y=x[0]+"."+x[1]+"."+x[2],g=yield m._readIFD(i,t,h.valueOffset+6-s,s,Ee.Z.GEO_KEYS,2,u);h.data=g.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[y]})}}return d}return d.requiredBufferSize&&d.requiredBufferSize!==i.byteLength?(i=(yield m.request(m.url,{range:{from:s,to:s+d.requiredBufferSize+4},responseType:"array-buffer",signal:u})).data).byteLength<d.requiredBufferSize?null:m._readIFD(i,t,0,s,Ee.Z.TIFF_TAGS,4,u):void 0})()}_getTileLocation(i,t,c){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,f=0===i?0:i-(s-1),u=this._headerInfo?.ifds[f];if(!u)return null;const m=(0,we.If)(u,this._headerInfo),d=je(u,"TILEOFFSETS");if(void 0===d)return null;const p=je(u,"TILEBYTECOUNTS"),{minRow:h,minCol:x,maxRow:y,maxCol:g}=a[f];if(t>y||c>g||t<h||c<x)return null;const b=Pe(u,"IMAGEWIDTH"),S=Pe(u,"IMAGELENGTH"),v=Pe(u,"TILEWIDTH"),I=Pe(u,"TILELENGTH"),T=m?this.rasterInfo.bandCount:1,P=T*t*(g+1)+c,D=[{from:d[P],to:d[P+T-1]+p[P+T-1]-1}];if(m){let k=!0;for(let M=0;M<T;M++)if(d[P+M]+p[P+M]!==d[P+M+1]){k=!1;break}if(!k)for(let M=0;M<T;M++)D[M]={from:d[P+M],to:d[P+M]+p[P+M]-1}}return null==d[P]||null==p[P]?null:{ranges:D,ifd:u,actualTileWidth:c===g&&b%v||v,actualTileHeight:t===y&&S%I||I}}_fetchAuxiliaryMetaData(i){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".aux.xml",{responseType:"xml",signal:i?.signal});return _e(c)}catch{return null}})()}_fetchAuxiliaryTable(i){var t=this;return(0,Z.Z)(function*(){try{const{data:c}=yield t.request(t.url+".vat.dbf",{responseType:"array-buffer",signal:i?.signal}),s=st.parse(c);return s?.recordSet?ot.default.fromJSON(s.recordSet):null}catch{return null}})()}};(0,C._)([(0,F.Cb)()],me.prototype,"_files",void 0),(0,C._)([(0,F.Cb)()],me.prototype,"_headerInfo",void 0),(0,C._)([(0,F.Cb)()],me.prototype,"_bufferSize",void 0),(0,C._)([(0,F.Cb)({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),me=(0,C._)([(0,re.j)("esri.layers.support.rasterDatasets.TIFFRaster")],me);const tr=me,$=new Map;$.set("CRF",{desc:"Cloud Raster Format",constructor:Lt}),$.set("MRF",{desc:"Meta Raster Format",constructor:er}),$.set("TIFF",{desc:"GeoTIFF",constructor:tr}),$.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Kt}),$.set("JPG",{desc:"JPG Raster Format",constructor:ze}),$.set("PNG",{desc:"PNG Raster Format",constructor:ze}),$.set("GIF",{desc:"GIF Raster Format",constructor:ze}),$.set("BMP",{desc:"BMP Raster Format",constructor:ze});class rr{static get supportedFormats(){const t=new Set;return $.forEach((c,s)=>t.add(s)),t}static open(t){var c=this;return(0,Z.Z)(function*(){const{url:s,ioConfig:a,sourceJSON:f}=t;let u=t.datasetFormat;null==u&&s.lastIndexOf(".")&&(u=s.slice(s.lastIndexOf(".")+1).toUpperCase()),"OVR"===u||"TIF"===u?u="TIFF":"JPG"!==u&&"JPEG"!==u&&"JFIF"!==u||(u="JPG"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(u="RasterTileServer");const m={url:s,sourceJSON:f,datasetFormat:u,ioConfig:a??{bandIds:null,sampling:null}};let d,p;if(u&&c.supportedFormats.has(u)){if("CRF"===u&&!a?.enableCRF)throw new J.Z("rasterfactory:open",`cannot open raster: ${s}`);return d=$.get(u).constructor,p=new d(m),yield p.open({signal:t.signal}),p}if(u)throw new J.Z("rasterfactory:open","not a supported format "+u);const h=Array.from($.keys());let x=0;const y=()=>(u=h[x++],u&&("CRF"!==u||a?.enableCRF)?(d=$.get(u).constructor,p=new d(m),p.open({signal:t.signal}).then(()=>p).catch(()=>y())):null);return y()})()}static register(t,c,s){$.has(t.toUpperCase())||$.set(t.toUpperCase(),{desc:c,constructor:s})}}var nr=w(49430);let L=class extends((0,xt.h)((0,Et.M)((0,Dt.q)((0,Zt.I)((0,It.N)(Ot((0,Ht.n)((0,zt.Q)((0,mt.R)(gt.Z)))))))))){constructor(...i){super(...i),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(i,t){return"string"==typeof i?{url:i,...t}:i}load(i){const t=(0,R.pC)(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(ge.r9).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let i=[new be.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:t}=this,{attributeTable:c}=t,s=(0,R.pC)(c)?c.fields:null;if(s){const m=s.filter(d=>"oid"!==d.type&&"value"!==d.name.toLowerCase()).map(d=>{const p=d.clone();return p.name="Raster."+d.name,p});i=i.concat(m)}const{dataType:f,multidimensionalInfo:u}=t;if(("vector-magdir"===f||"vector-uv"===f)&&(0,R.pC)(u)){const m=u.variables[0].unit?.trim();i.push(new be.Z({name:"Raster.Magnitude",alias:"Magnitude"+(m?` (${m})`:""),domain:null,editable:!1,type:"double"})),i.push(new be.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(i){this._set("renderer",i),this.updateRenderer()}readRenderer(i,t,c){const a=(0,Me.ij)(t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,c)||void 0;if(null!=a)return a}createPopupTemplate(i){return(0,nr.eZ)({fields:this.rasterFields,title:this.title},i)}write(i,t){const{raster:c}=this;return(this.loaded?"RasterTileServer"===c.datasetFormat&&("Raster"===c.tileType||"Map"===c.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(i,t):(t&&t.messages&&t.messages.push(new J.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t.origin}/${t.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(i){var t=this;return(0,Z.Z)(function*(){if(t.raster)t.raster.rasterInfo||(yield t.raster.open()),t.url=t.raster.url;else{const s=yield rr.open({url:t.url,sourceJSON:t.sourceJSON,ioConfig:{sampling:"closest",...t.ioConfig,customFetchParameters:t.customParameters},signal:i});if(t.rasterFunction){const a=(0,rt.Ue)(t.rasterFunction.toJSON(),{raster:s}),f=new tt({rasterFunction:a});yield f.open(),t.raster=f}else t.raster=s}const{rasterInfo:c}=t.raster;if(!c)throw new J.Z("imagery-tile-layer:load","cannot load resources on "+t.url);if(t.sourceJSON=t.sourceJSON||t.raster.sourceJSON,null!=t.sourceJSON){const s="Map"===t.raster.tileType&&null!=t.sourceJSON.minLOD&&null!=t.sourceJSON.maxLOD?t.sourceJSON:{...t.sourceJSON,minScale:0,maxScale:0};t.read(s,{origin:"service"})}null==t.title&&(t.title=t.raster.datasetName),"Map"===t.raster.tileType&&(t.popupEnabled=!1),t._configDefaultSettings(),t.addHandles((0,pt.YP)(()=>t.customParameters,s=>{t.raster.ioConfig.customFetchParameters=s}))})()}};(0,C._)([(0,F.Cb)({type:[Ge.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],L.prototype,"bandIds",void 0),(0,C._)([(0,F.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,ht.J)(Nt.c)],L.prototype,"interpolation",void 0),(0,C._)([(0,F.Cb)({json:{write:!0}})],L.prototype,"multidimensionalDefinition",void 0),(0,C._)([(0,F.Cb)(Ne.rn)],L.prototype,"legendEnabled",void 0),(0,C._)([(0,F.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),(0,C._)([(0,F.Cb)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,C._)([(0,F.Cb)({json:{read:!0,write:!0}})],L.prototype,"blendMode",void 0),(0,C._)([(0,F.Cb)()],L.prototype,"sourceJSON",void 0),(0,C._)([(0,F.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],L.prototype,"version",void 0),(0,C._)([(0,F.Cb)()],L.prototype,"title",void 0),(0,C._)([(0,F.Cb)({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),(0,C._)([(0,F.Cb)({type:["ArcGISTiledImageServiceLayer"]})],L.prototype,"operationalLayerType",void 0),(0,C._)([(0,F.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(i,t,c){t[c]=!i}}}})],L.prototype,"popupEnabled",void 0),(0,C._)([(0,F.Cb)({type:dt.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],L.prototype,"popupTemplate",void 0),(0,C._)([(0,F.Cb)({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),(0,C._)([(0,F.Cb)({readOnly:!0,type:[be.Z]})],L.prototype,"fields",void 0),(0,C._)([(0,F.Cb)({readOnly:!0,type:[be.Z]})],L.prototype,"rasterFields",null),(0,C._)([(0,F.Cb)({types:Me.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:Me.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:i=>({enabled:i&&"vector-field"!==i.type&&"flow"!==i.type})}}}}})],L.prototype,"renderer",null),(0,C._)([(0,yt.r)("renderer")],L.prototype,"readRenderer",null),L=(0,C._)([(0,re.j)("esri.layers.ImageryTileLayer")],L);const ir=L}}]);