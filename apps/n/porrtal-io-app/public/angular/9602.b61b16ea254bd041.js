"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[9602],{49602:(tt,se,c)=>{c.r(se),c.d(se,{default:()=>Ar});var Oe,s=c(17626),de=c(73281),f=c(62208),ye=c(99959),ae=c(10699),o=c(77712),O=(c(85931),c(8314),c(90912)),A=c(76898),F=c(99433),xt=c(44917),x=c(15861),rt=c(29132),It=c(88879),De=c(90885),D=c(84792),Z=c(26584),Ne=c(2076),V=c(58817),wt=c(63290),Ft=c(32917),Pt=c(21726),K=c(83960),j=c(68653),be=c(13812),it=c(25982),z=c(86810),Tt=c(55342);const Se=new Set(["raster","raster2","dem","fillraster"]),Ce=new Set(["rasters"]),nt=n=>n&&n.rasterFunction?L.fromJSON(n):n,je=n=>n&&n instanceof L?n.toJSON():n,Me=n=>n?.functionName&&!n.declaredClass,st=n=>Me(n)?new L(n):n;let L=Oe=class extends z.wq{constructor(n){super(n),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(n){if(n){const i=Object.keys(n);if(i.some(e=>Se.has(e.toLowerCase())&&Me(n[e]))||i.some(e=>Ce.has(e.toLowerCase())&&Array.isArray(n[e])&&n[e].some(t=>Me(t)))){n=(0,V.d9)(n);for(const e of i)Se.has(e.toLowerCase())?n[e]=st(n[e]):Ce.has(e.toLowerCase())&&Array.isArray(n[e])&&(n[e]=n[e].map(t=>st(t)))}}this._set("functionArguments",n)}readFunctionArguments(n){return(n=>{if(null==n)return null;n=(0,V.d9)(n);const i={};for(const e of Object.keys(n))i[e]=Se.has(e.toLowerCase())?nt(n[e]):Ce.has(e.toLowerCase())&&Array.isArray(n[e])?n[e].map(nt):n[e];return i})(n)}writeFunctionArguments(n,i,e){const t={};for(const r of Object.keys(n))t[r]=Se.has(r.toLowerCase())?je(n[r]):Ce.has(r.toLowerCase())&&Array.isArray(n[r])?n[r].map(je):je(n[r]);i[e]=t}readFunctionName(n,i){const e=i.rasterFunctionInfos;return i.name||(e&&e.length&&"None"!==e[0].name?e[0].name:i.rasterFunctionDefinition?i.rasterFunctionDefinition.name:i.rasterFunction)}clone(){return new Oe({functionName:this.functionName,functionArguments:(0,V.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,V.d9)(this.rasterFunctionDefinition)})}};(0,s._)([(0,o.Cb)({json:{type:Object,name:"rasterFunctionArguments"}})],L.prototype,"functionArguments",null),(0,s._)([(0,j.r)("functionArguments")],L.prototype,"readFunctionArguments",null),(0,s._)([(0,F.c)("functionArguments")],L.prototype,"writeFunctionArguments",null),(0,s._)([(0,o.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],L.prototype,"functionName",void 0),(0,s._)([(0,j.r)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],L.prototype,"readFunctionName",null),(0,s._)([(0,Tt.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,o.Cb)({json:{default:"unknown"}})],L.prototype,"outputPixelType",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:!0,write:!0}})],L.prototype,"variableName",void 0),(0,s._)([(0,o.Cb)({type:Object,json:{name:"rasterFunctionDefinition"}})],L.prototype,"rasterFunctionDefinition",void 0),L=Oe=(0,s._)([(0,A.j)("esri.layers.support.RasterFunction")],L);const S=L,Nt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var ue=c(70208),Ot=c(65468),jt=c(80239);const Mt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},At={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},_t=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function at(n){return _t.has(n.type)}function ot(n,i){if(!n||!i)return(0,V.d9)(n||i);const e=(0,V.d9)(n);if(i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),lt(e.rasterFunctionDefinition.arguments,i)}else"none"!==i.functionName.toLowerCase()&&(ut(e.functionArguments).Raster=i);return e}function lt(n,i){for(const e in n)"raster"===e.toLowerCase()&&("RasterFunctionVariable"===n[e].type?(n[e]=i.rasterFunctionDefinition,n[e].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===n[e].type&&lt(n[e].arguments,i))}function X(n){const i=(0,V.d9)(Nt[n.functionName+"Function"]),e=n.functionArguments;for(const t in e)"raster"===t.toLowerCase()?(i.arguments[t]=X(e[t]),i.arguments[t].type="RasterFunctionTemplate"):"colormap"===t.toLowerCase()?(i.arguments[t].value=Qt(e[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=e[t];return i}function ut(n){const i=n.Raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?ut(i.functionArguments):n}const he={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function xe(n,i){const e=Mt[String(i).toLowerCase()];return e&&n.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),n}function pt(n){if(!n)return;const{fields:i}=n,e=i&&i.find(t=>t&&t.name&&"value"===t.name.toLowerCase());return e&&e.name}function Ht(n){const i=[];return n.forEach(e=>{const t=e;if(Array.isArray(t))i.push(t);else{if(null==t.min||null==t.max)return;i.push([t.min,t.max,t.avg||0,t.stddev||0])}}),i}function Qt(n){const i=[],e=[];return n.forEach(t=>{i.push(t[0]),e.push((0,ue.io)([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:e}}var Ae,Bt=c(66656),q=c(49672);const ge=(0,Ne.w)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),_e=(0,Ne.w)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let J=Ae=class extends z.wq{constructor(n){super(n),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(n,i){return null!=i.ascending?i.ascending:null==i.sortAscending||i.sortAscending}readMethod(n,i){return function Gt(n){let i;switch(n?n.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return _e.fromJSON(i)}(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(n,i){const e=i.mosaicOperation,t=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),r=e||(t?ge.toJSON(t):null);return ge.fromJSON(r)||"first"}castSortValue(n){return null==n||"string"==typeof n||"number"==typeof n?n:`${n}`}clone(){return new Ae({ascending:this.ascending,itemRenderingRule:(0,V.d9)(this.itemRenderingRule),lockRasterIds:(0,V.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,V.d9)(this.multidimensionalDefinition),objectIds:(0,V.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,V.d9)(this.viewpoint),where:this.where})}};(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],J.prototype,"ascending",void 0),(0,s._)([(0,j.r)("ascending",["ascending","sortAscending"])],J.prototype,"readAscending",null),(0,s._)([(0,o.Cb)({type:S,json:{write:!0}})],J.prototype,"itemRenderingRule",void 0),(0,s._)([(0,o.Cb)({type:[O.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],J.prototype,"lockRasterIds",void 0),(0,s._)([(0,o.Cb)({type:String,json:{type:_e.jsonValues,write:{target:"mosaicMethod",writer:_e.write}}})],J.prototype,"method",void 0),(0,s._)([(0,j.r)("method",["mosaicMethod","defaultMosaicMethod"])],J.prototype,"readMethod",null),(0,s._)([(0,o.Cb)({type:[it.Z],json:{write:!0}})],J.prototype,"multidimensionalDefinition",void 0),(0,s._)([(0,o.Cb)({type:[O.z8],json:{name:"fids",write:!0}})],J.prototype,"objectIds",void 0),(0,s._)([(0,o.Cb)({json:{type:ge.jsonValues,read:{reader:ge.read},write:{target:"mosaicOperation",writer:ge.write}}})],J.prototype,"operation",void 0),(0,s._)([(0,j.r)("operation",["mosaicOperation","mosaicOperator"])],J.prototype,"readOperation",null),(0,s._)([(0,o.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],J.prototype,"sortField",void 0),(0,s._)([(0,o.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],J.prototype,"sortValue",void 0),(0,s._)([(0,Bt.p)("sortValue")],J.prototype,"castSortValue",null),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],J.prototype,"viewpoint",void 0),(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],J.prototype,"where",void 0),J=Ae=(0,s._)([(0,A.j)("esri.layers.support.MosaicRule")],J);const H=J;var U=c(2939);let P=class extends z.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(n,i,e){this.layer.version<10.3||(i[e]=n)}writeCompressionQuality(n,i,e){this.format&&this.format.toLowerCase().includes("jpg")&&null!=n&&(i[e]=n)}writeCompressionTolerance(n,i,e){"lerc"===this.format&&null!=n&&(i[e]=n)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}writeLercVersion(n,i,e){"lerc"===this.format&&this.layer.version>=10.5&&(i[e]=n)}get version(){const n=this.layer;return n.commitProperty("bandIds"),n.commitProperty("format"),n.commitProperty("compressionQuality"),n.commitProperty("compressionTolerance"),n.commitProperty("interpolation"),n.commitProperty("noData"),n.commitProperty("noDataInterpretation"),n.commitProperty("mosaicRule"),n.commitProperty("renderingRule"),n.commitProperty("adjustAspectRatio"),n.commitProperty("pixelFilter"),n.commitProperty("renderer"),n.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(n){this._set("version",n)}get mosaicRule(){const n=this.layer;let i=n.mosaicRule;const e=n.definitionExpression;return i?e&&e!==i.where&&(i=i.clone(),i.where=e):e&&(i=new H({where:e})),i}get renderingRule(){const n=this.layer;let i=n.renderingRule;const e=n.pixelFilter,t=!n.format||n.format.includes("jpg")||n.format.includes("png");return i=this._addResampleRasterFunction(i),t&&!e&&"vector-field"!==n.renderer?.type&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){const n=this.layer,{rasterInfo:i,renderingRule:e,renderer:t}=n;return t&&at(t)?ot(function Vt(n,i){switch(i=i||{},n.type){case"raster-stretch":return function Lt(n,i){const e=i.convertToRFT,t=new S;t.functionName="Stretch";const r=he[Ot.v.toJSON(n.stretchType)],a="u8",l={StretchType:r,Statistics:Ht(n.statistics),DRA:n.dynamicRangeAdjustment,UseGamma:n.useGamma,Gamma:n.gamma,ComputeGamma:n.computeGamma};if(null!=n.outputMin&&(l.Min=n.outputMin),null!=n.outputMax&&(l.Max=n.outputMax),r===he.standardDeviation?(l.NumberOfStandardDeviations=n.numberOfStandardDeviations,t.outputPixelType=a):r===he.percentClip?(l.MinPercent=n.minPercent,l.MaxPercent=n.maxPercent,t.outputPixelType=a):r===he.minMax?t.outputPixelType=a:r===he.sigmoid&&(l.SigmoidStrengthLevel=n.sigmoidStrengthLevel),t.functionArguments=l,t.variableName="Raster",n.colorRamp){const u=n.colorRamp,m=new S;if(e)m.functionArguments={ColorRamp:(0,ue.pM)(u)};else{const d=(0,ue.Uh)(u);if(d)m.functionArguments={colorRamp:d};else if(!i.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const p=n.colorRamp.toJSON();"algorithmic"===p.type?p.algorithm=p.algorithm||"esriCIELabAlgorithm":"multipart"===p.type&&p.colorRamps?.length&&p.colorRamps.forEach(y=>y.algorithm=y.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:p}}else m.functionArguments={Colormap:(0,ue.Jw)(u,256)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=t,e?new S({rasterFunctionDefinition:X(m)}):m}return e?new S({rasterFunctionDefinition:X(t)}):t}(n,i);case"class-breaks":return function Zt(n,i){const e=[],t=[],r=[],a=[],{pixelType:u,rasterAttributeTable:m}=i,d=m&&m.features,p=pt(m);if(d&&Array.isArray(d)&&n.classBreakInfos){n.classBreakInfos.forEach((b,B)=>{const N=b.symbol.color;let C;N.a&&d.forEach(I=>{C=I.attributes[n.field],(C>=b.minValue&&C<b.maxValue||B===n.classBreakInfos.length-1&&C>=b.minValue)&&a.push([I.attributes[p],N.r,N.g,N.b])})});const v=u?xe(a,u):a,h=new S;return h.functionName="Colormap",h.functionArguments={},h.functionArguments.Colormap=v,h.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:X(h)}):h}n.classBreakInfos.forEach((v,h)=>{const b=v.symbol&&v.symbol.color;b.a?(e.push(0===h?v.minValue:v.minValue+1e-6,v.maxValue+1e-6),t.push(h),a.push([h,b.r,b.g,b.b])):r.push(v.minValue,v.maxValue)});const y=u?xe(a,u):a,R=new S;R.functionName="Remap",R.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:r},R.variableName="Raster";const g=new S;return g.functionName="Colormap",g.functionArguments={Colormap:y,Raster:R},i.convertToRFT?new S({rasterFunctionDefinition:X(g)}):g}(n,i);case"unique-value":return function zt(n,i){const e=[],{pixelType:t,rasterAttributeTable:r}=i,a=r&&r.features,l=pt(r),u=n.defaultSymbol?.color?.toRgb(),m=n.uniqueValueInfos;if(m)if(a){const y=new Map;m.forEach(g=>{const v=g.value,h=g.symbol.color?.toRgb();null!=v&&h&&y.set(String(v),h)});const R=n.field;a.forEach(({attributes:g})=>{const v=String(g[R]),h=g[l];if(y.has(v)){const b=y.get(v);e.push([h,...b])}else u&&e.push([h,...u])})}else for(let y=0;y<m.length;y++){const R=m[y],g=R.symbol.color,v=+R.value;if(g?.a){if(isNaN(v))return null;e.push([v,g.r,g.g,g.b])}}const d=t&&e.length>0?xe(e,t):e,p=new S;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=d,p.variableName="Raster",i.convertToRFT?new S({rasterFunctionDefinition:X(p)}):p}(n,i);case"raster-colormap":return function Ut(n,i){const e=n.extractColormap();if(!e||0===e.length)return;const{pixelType:t}=i,r=t?xe(e,t):e,a=new S;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=r,i.convertToRFT?new S({rasterFunctionDefinition:X(a)}):a}(n,i);case"vector-field":return function Jt(n,i){const e=new S;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:r}=i,a="vector-uv"===t;let l,u;r&&2===r.length&&(l=r.map(R=>R.BandName.toLowerCase()).indexOf("magnitude"),u=r.map(R=>R.BandName.toLowerCase()).indexOf("direction")),-1!==l&&null!==l||(l=0,u=1);const m="arithmetic"===n.rotationType?1:2,d="flow-from"===n.flowRepresentation?0:1,p=n.visualVariables?n.visualVariables.find(R=>"Magnitude"===R.field):new jt.Z,y={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:m,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:At[n.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return e.functionArguments=y,i.convertToRFT?new S({rasterFunctionDefinition:X(e)}):e}(n,i);case"raster-shaded-relief":return function Et(n,i){const e=i.convertToRFT;if("elevation"!==i.dataType)return new S;const t=new S;t.functionName="Hillshade";const r="traditional"===n.hillshadeType?0:1,a="none"===n.scalingType?1:3,l={HillshadeType:r,SlopeType:a,ZFactor:n.zFactor};return 0===r&&(l.Azimuth=n.azimuth,l.Altitude=n.altitude),3===a&&(l.PSPower=n.pixelSizePower,l.PSZFactor=n.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",n.colorRamp&&(t.functionName="ShadedRelief",e?l.ColorRamp=(0,ue.pM)(n.colorRamp):l.Colormap=(0,ue.Jw)(n.colorRamp,256)),e?new S({rasterFunctionDefinition:X(t)}):t}(n,i);case"flow":throw new Error("Unsupported rendering rule.")}}(t,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:i.keyProperties?.BandProperties,convertColorRampToColormap:n.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition}),e):e}_addResampleRasterFunction(n){if("vector-field"!==this.layer.renderer?.type||"Resample"===n?.functionName)return n;let e=new S({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return e=n?.rasterFunctionDefinition?new S({rasterFunctionDefinition:X(e)}):e,ot(e,n)}};(0,s._)([(0,o.Cb)()],P.prototype,"layer",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,F.c)("adjustAspectRatio")],P.prototype,"writeAdjustAspectRatio",null),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,K.B)("layer.bandIds")],P.prototype,"bandIds",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"compression",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,K.B)("layer.compressionQuality")],P.prototype,"compressionQuality",void 0),(0,s._)([(0,F.c)("compressionQuality")],P.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,K.B)("layer.compressionTolerance")],P.prototype,"compressionTolerance",void 0),(0,s._)([(0,F.c)("compressionTolerance")],P.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"format",null),(0,s._)([(0,o.Cb)({type:String,json:{read:{reader:U.c.read},write:{writer:U.c.write}}}),(0,K.B)("layer.interpolation")],P.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}}),(0,K.B)("layer.noData")],P.prototype,"noData",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:{reader:U.k.read},write:{writer:U.k.write}}}),(0,K.B)("layer.noDataInterpretation")],P.prototype,"noDataInterpretation",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"pixelType",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"lercVersion",void 0),(0,s._)([(0,F.c)("lercVersion")],P.prototype,"writeLercVersion",null),(0,s._)([(0,o.Cb)({type:Number})],P.prototype,"version",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"mosaicRule",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],P.prototype,"renderingRule",null),P=(0,s._)([(0,A.j)("esri.layers.mixins.ExportImageServiceParameters")],P);var ee=c(36255),Wt=c(60466),Kt=c(60295),ct=c(79645),$t=c(9548),Xt=c(79781),Ve=c(8614),Yt=c(30994),Ie=c(8341),qt=c(54805),Je=c(13924),M=c(2618),te=c(65234);let pe=class extends z.wq{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],pe.prototype,"north",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],pe.prototype,"up",void 0),(0,s._)([(0,o.Cb)({type:te.Z,json:{write:!0}})],pe.prototype,"spatialReference",void 0),pe=(0,s._)([(0,A.j)("esri.rest.support.ImageAngleResult")],pe);const kt=pe;var mt=c(17253);let $=class extends z.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"catalogItemVisibilities",void 0),(0,s._)([(0,o.Cb)({type:mt.default,json:{write:!0}})],$.prototype,"catalogItems",void 0),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],$.prototype,"location",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"name",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"objectId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"processedValues",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"properties",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],$.prototype,"value",void 0),$=(0,s._)([(0,A.j)("esri.rest.support.ImageIdentifyResult")],$);const er=$;let we=class extends z.wq{constructor(){super(...arguments),this.geometries=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],we.prototype,"geometries",void 0),we=(0,s._)([(0,A.j)("esri.rest.support.ImagePixelLocationResult")],we);const tr=we;let k=class extends z.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"attributes",void 0),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],k.prototype,"location",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"locationId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"rasterId",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"resolution",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],k.prototype,"pixelValue",void 0),k=(0,s._)([(0,A.j)("esri.rest.support.ImageSample")],k);const rr=k;let Fe=class extends z.wq{constructor(){super(...arguments),this.samples=null}};(0,s._)([(0,o.Cb)({type:[rr],json:{write:!0}})],Fe.prototype,"samples",void 0),Fe=(0,s._)([(0,A.j)("esri.rest.support.ImageSampleResult")],Fe);const ir=Fe;function dt(n){const i=n?.time;if(i&&(null!=i.start||null!=i.end)){const e=[];null!=i.start&&e.push(i.start),null==i.end||e.includes(i.end)||e.push(i.end),n.time=e.join(",")}}function yt(n,i,e){return Ee.apply(this,arguments)}function Ee(){return(Ee=(0,x.Z)(function*(n,i,e){const t=(0,M.en)(n),r=i.geometry?[i.geometry]:[],a=yield(0,Je.aX)(r),l=i.toJSON();dt(l);const u=a&&a[0];(0,f.pC)(u)&&(l.geometry=u.toJSON());const m=(0,M.cv)({...t.query,f:"json",...l});return(0,M.lA)(m,e)})).apply(this,arguments)}function Le(){return(Le=(0,x.Z)(function*(n,i,e){const t=i.toJSON();(0,f.pC)(t.angleName)&&(t.angleName=t.angleName.join(",")),(0,f.pC)(i.point)&&i.point.spatialReference?.imageCoordinateSystem&&(t.point.spatialReference=Be(i.point.spatialReference)),(0,f.pC)(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(t.spatialReference=gt(i.spatialReference));const r=(0,M.en)(n),a=(0,M.cv)({...r.query,f:"json",...t}),l=(0,M.lA)(a,e),{data:u}=yield(0,D.default)(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new te.Z({wkid:0,imageCoordinateSystem:u.spatialReference}):te.Z.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new kt(u)})).apply(this,arguments)}function Ze(){return(Ze=(0,x.Z)(function*(n,i,e){const t=i.toJSON(),{geometries:r}=i;for(let d=0;d<r.length;d++)r[d].spatialReference?.imageCoordinateSystem&&(t.geometries.geometries[d].spatialReference=Be(r[d].spatialReference));const a=(0,M.en)(n),l=(0,M.cv)({...a.query,f:"json",...t}),u=(0,M.lA)(l,e),{data:m}=yield(0,D.default)(`${a.path}/computePixelLocation`,u);return tr.fromJSON(m)})).apply(this,arguments)}function ze(){return(ze=(0,x.Z)(function*(n,i,e){const t=yield yt(n,i,e),r=(0,M.en)(n),{data:a}=yield(0,D.default)(`${r.path}/computeStatisticsHistograms`,t),{statistics:l}=a;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:a.histograms}})).apply(this,arguments)}function Ue(){return(Ue=(0,x.Z)(function*(n,i,e){const t=yield yt(n,i,e),r=(0,M.en)(n),{data:a}=yield(0,D.default)(`${r.path}/computeHistograms`,t);return{histograms:a.histograms}})).apply(this,arguments)}function He(){return(He=(0,x.Z)(function*(n,i,e){const t=i.toJSON();dt(t),t.outFields?.length&&(t.outFields=t.outFields.join(","));const r=(yield(0,Je.aX)(i.geometry))?.[0];(0,f.pC)(r)&&(t.geometry=r.toJSON());const a=(0,M.en)(n),l=(0,M.cv)({...a.query,f:"json",...t}),u=(0,M.lA)(l,e),{data:m}=yield(0,D.default)(`${a.path}/getSamples`,u),d=m?.samples?.map(p=>{const y="NaN"===p.value||""===p.value?null:p.value.split(" ").map(R=>Number(R));return{...p,pixelValue:y}});return ir.fromJSON({samples:d})})).apply(this,arguments)}function ht(n,i,e){return Qe.apply(this,arguments)}function Qe(){return(Qe=(0,x.Z)(function*(n,i,e){const t=(0,M.en)(n);return(0,Je.aX)(i.geometry?[i.geometry]:[]).then(a=>{const l=i.toJSON(),u=a&&a[0];(0,f.pC)(u)&&(l.geometry=JSON.stringify(u.toJSON()));const m=(0,M.cv)({...t.query,f:"json",...l}),d=(0,M.lA)(m,e);return(0,D.default)(t.path+"/identify",d)}).then(a=>er.fromJSON(a.data))})).apply(this,arguments)}function Be(n){const{imageCoordinateSystem:i}=n;if(i){const{id:e,referenceServiceName:t}=i;return null!=e?t?{icsid:e,icsns:t}:{icsid:e}:{ics:i}}return n.toJSON()}function gt(n,i){const e=Be(n),{icsid:t,icsns:r,wkid:a}=e;return null!=t?null==r||i?.toLowerCase().includes("/"+r.toLowerCase()+"/")?`0:${t}`:JSON.stringify(e):a?a.toString():JSON.stringify(e)}c(15283);var Ke,ur=c(2865),Pe=(c(16730),c(37053),c(82054),c(2004)),pr=(c(21674),c(72854)),cr=c(37118),Ge=(c(55214),c(24192),c(84952)),mr=(c(24263),c(87183),c(67736),c(90463)),dr=c(24865),ft=(c(67010),c(6871),c(99208)),yr=c(27497);function We(){return(We=(0,x.Z)(function*(n,i,e){const t=(0,M.en)(n),r=(0,M.cv)({...t.query,f:"json"}),a=(0,M.lA)(r,e),l=`${t.path}/${i}/info`,u=(0,D.default)(`${l}`,a),m=(0,D.default)(`${l}/keyProperties`,a),d=yield Promise.allSettled([u,m]),p="fulfilled"===d[0].status?d[0].value.data:null,y="fulfilled"===d[1].status?d[1].value.data:null;let R=null;p.statistics?.length&&(R=p.statistics.map(I=>({min:I[0],max:I[1],avg:I[2],stddev:I[3]})));const g=Pe.Z.fromJSON(p.extent),v=Math.ceil(g.width/p.pixelSizeX-.1),h=Math.ceil(g.height/p.pixelSizeY-.1),b=g.spatialReference,B=new q.Z({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:b}),N=p.histograms?.length?p.histograms:null,C=new yr.Z({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new ct.Z({width:v,height:h,bandCount:p.bandCount,extent:g,spatialReference:b,pixelSize:B,pixelType:p.pixelType.toLowerCase(),statistics:R,histograms:N,keyProperties:y,storageInfo:C})})).apply(this,arguments)}let re=Ke=class extends z.wq{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ke((0,V.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,s._)([(0,o.Cb)({type:[String],json:{name:"angleName",write:!0}})],re.prototype,"angleNames",void 0),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],re.prototype,"point",void 0),(0,s._)([(0,o.Cb)({type:te.Z,json:{write:!0}})],re.prototype,"spatialReference",void 0),(0,s._)([(0,o.Cb)({type:O.z8,json:{write:!0}})],re.prototype,"rasterId",void 0),re=Ke=(0,s._)([(0,A.j)("esri.rest.support.ImageAngleParameters")],re);const gr=re;var Xe,$e=c(97478),fe=c(91179);let Y=Xe=class extends z.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,fe.Ji)(n),i[e]=n.toJSON())}clone(){return new Xe((0,V.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({types:rt.qM,json:{read:fe.im}})],Y.prototype,"geometry",void 0),(0,s._)([(0,F.c)("geometry")],Y.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:H,json:{write:!0}})],Y.prototype,"mosaicRule",void 0),(0,s._)([(0,o.Cb)({type:S,json:{write:!0}})],Y.prototype,"renderingRule",void 0),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],Y.prototype,"pixelSize",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],Y.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({type:$e.Z,json:{read:{source:"time"},write:{target:"time"}}})],Y.prototype,"timeExtent",void 0),Y=Xe=(0,s._)([(0,A.j)("esri.rest.support.ImageHistogramParameters")],Y);const vt=Y;var Ye;let T=Ye=class extends z.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,fe.Ji)(n),i[e]=JSON.stringify(n.toJSON()))}set mosaicRule(n){let i=n;i&&i.mosaicMethod&&(i=H.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(n,i,e){null!=n&&(i[e]=JSON.stringify(n.toJSON()))}set renderingRule(n){let i=n;i&&i.rasterFunction&&(i=S.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("renderingRule",i)}writeRenderingRule(n,i,e){null!=n&&(i[e]=JSON.stringify(n.toJSON())),n.rasterFunctionDefinition&&(i[e]=JSON.stringify(n.rasterFunctionDefinition))}writeRenderingRules(n,i,e){null!=n&&(i[e]=JSON.stringify(n.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(n,i,e){null!=n&&(i[e]=JSON.stringify(n))}writeTimeExtent(n,i,e){if(null!=n){const t=(0,f.pC)(n.start)?n.start.getTime():null,r=(0,f.pC)(n.end)?n.end.getTime():null;i[e]=null!=t?null!=r?`${t},${r}`:`${t}`:null}}clone(){return new Ye((0,V.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({json:{write:!0}})],T.prototype,"geometry",void 0),(0,s._)([(0,F.c)("geometry")],T.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:H,json:{write:!0}})],T.prototype,"mosaicRule",null),(0,s._)([(0,F.c)("mosaicRule")],T.prototype,"writeMosaicRule",null),(0,s._)([(0,o.Cb)({type:S,json:{write:!0}})],T.prototype,"renderingRule",null),(0,s._)([(0,F.c)("renderingRule")],T.prototype,"writeRenderingRule",null),(0,s._)([(0,o.Cb)({type:[S],json:{write:!0}})],T.prototype,"renderingRules",void 0),(0,s._)([(0,F.c)("renderingRules")],T.prototype,"writeRenderingRules",null),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],T.prototype,"pixelSize",void 0),(0,s._)([(0,F.c)("pixelSize")],T.prototype,"writePixelSize",null),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"returnGeometry",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"returnCatalogItems",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"returnPixelValues",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],T.prototype,"maxItemCount",void 0),(0,s._)([(0,o.Cb)({type:$e.Z,json:{write:{target:"time"}}})],T.prototype,"timeExtent",void 0),(0,s._)([(0,F.c)("timeExtent")],T.prototype,"writeTimeExtent",null),(0,s._)([(0,o.Cb)({json:{write:!0}})],T.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({json:{write:!0}})],T.prototype,"viewId",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],T.prototype,"processAsMultidimensional",void 0),T=Ye=(0,s._)([(0,A.j)("esri.rest.support.ImageIdentifyParameters")],T);const Rt=T;var qe;let ce=qe=class extends z.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(n,i,e){i.geometries={geometryType:"esriGeometryPoint",geometries:n.map(t=>t.toJSON())}}clone(){return new qe({geometries:this.geometries.map(n=>n.clone()),rasterId:this.rasterId})}};(0,s._)([(0,o.Cb)({type:[q.Z],json:{write:!0}})],ce.prototype,"geometries",void 0),(0,s._)([(0,F.c)("geometries")],ce.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)({type:O.z8,json:{write:!0}})],ce.prototype,"rasterId",void 0),ce=qe=(0,s._)([(0,A.j)("esri.rest.support.ImagePixelLocationParameters")],ce);const fr=ce;var ke;let E=ke=class extends z.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(n,i,e){null!=n&&(i.geometryType=(0,fe.Ji)(n),i[e]=n.toJSON())}set locations(n){if(n?.length){const i=new pr.Z({spatialReference:n[0].spatialReference});i.points=n.map(e=>[e.x,e.y]),this._set("locations",n),this.geometry=i}}clone(){return new ke((0,V.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.Cb)({types:rt.qM,json:{read:fe.im}})],E.prototype,"geometry",void 0),(0,s._)([(0,F.c)("geometry")],E.prototype,"writeGeometry",null),(0,s._)([(0,o.Cb)()],E.prototype,"locations",null),(0,s._)([(0,o.Cb)({type:String,json:{type:U.c.jsonValues,read:U.c.read,write:U.c.write}})],E.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)({type:H,json:{write:!0}})],E.prototype,"mosaicRule",void 0),(0,s._)([(0,o.Cb)({type:[String],json:{write:!0}})],E.prototype,"outFields",void 0),(0,s._)([(0,o.Cb)({type:q.Z,json:{write:!0}})],E.prototype,"pixelSize",void 0),(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],E.prototype,"raster",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],E.prototype,"returnFirstValueOnly",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],E.prototype,"sampleDistance",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],E.prototype,"sampleCount",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],E.prototype,"sliceId",void 0),(0,s._)([(0,o.Cb)({type:$e.Z,json:{read:{source:"time"},write:{target:"time"}}})],E.prototype,"timeExtent",void 0),E=ke=(0,s._)([(0,A.j)("esri.rest.support.ImageSampleParameters")],E);const vr=E;var Rr=c(37084);const bt=wt.Z.getLogger("esri.layers.mixins.ArcGISImageService"),et=(0,Ne.w)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),br=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Sr=(0,o.Eg)(O.q9,{min:0,max:255}),xr=n=>{let i=class extends n{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new P({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?H.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(r=>"number"==typeof r))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new Wt.Z(this.fields):null}set format(e){e&&br.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=H.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?H.fromJSON(r):this._isMosaicRuleSupported(t)?H.fromJSON(t):null}writeMosaicRule(e,t,r){let a=this.mosaicRule;const l=this.definitionExpression;a?l&&l!==a.where&&(a=a.clone(),a.where=l):l&&(a=new H({where:l})),this._isValidCustomizedMosaicRule(a)&&(t[r]=a.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Sr(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(a=>"esriFieldTypeOID"===a.type||"oid"===a.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,Pt.mN)(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){const a=t?.layerDefinition?.drawingInfo?.renderer,l=(0,De.ij)(a,r);return null==l?null:("vector-field"===l.type&&t.symbolTileSize&&!a.symbolTileSize&&(l.symbolTileSize=t.symbolTileSize),at(l)||bt.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),l)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new ee.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new ee.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new ee.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let l=this.fields?(0,V.d9)(this.fields):[];l.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&l.push(t),this.version>=10.4&&(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(m=>"none"===m.name.toLowerCase())&&l.push(a),(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(m=>"none"!==m.name.toLowerCase()).forEach(m=>{l.push(new ee.Z({name:"Raster.ServicePixelValue."+m.name,alias:m.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(l.push(new ee.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),l.push(new ee.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const u=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(u&&u.length>0){const m=u.filter(d=>"esriFieldTypeOID"!==d.type&&"value"!==d.name.toLowerCase()).map(d=>{const p=(0,V.d9)(d);return p.name=e+d.name,p});l=l.concat(m)}return l}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?S.fromJSON({rasterFunctionDefinition:t.renderingRule}):S.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const a=e.toJSON();t[r]=a.rasterFunctionDefinition?a.rasterFunctionDefinition:a}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?te.Z.fromJSON(r):null}readPixelType(e){return et.fromJSON(e)||e}writePixelType(e,t,r){((0,f.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=et.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var r=this;return(0,x.Z)(function*(){let a=e;if(!r._isPicture()&&r.renderer&&r.symbolizer&&!r.pixelFilter){const l=JSON.stringify(r._cachedRendererJson)!==JSON.stringify(r.renderer.toJSON()),u=r._rasterJobHandler.instance,{bandIds:m}=r;if(u){l&&(r.symbolizer.bind(),yield u.updateSymbolizer(r.symbolizer,t),r._cachedRendererJson=r.renderer.toJSON());const d=yield u.symbolize({bandIds:m,...e},t);a={extent:e.extent,pixelBlock:d}}else a={extent:e.extent,pixelBlock:r.symbolizer.symbolize({bandIds:m,...e})}}return a})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeAngles(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsComputeAngles)throw new Z.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,O.TJ)(gr,e).clone(),function nr(n,i,e){return Le.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computePixelSpaceLocations(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsComputePixelLocation)throw new Z.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,O.TJ)(fr,e).clone(),function sr(n,i,e){return Ze.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computeHistograms(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsComputeHistograms)throw new Z.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,O.TJ)(vt,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;return u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule&&(e.mosaicRule=l),a&&null==e.raster&&(e.raster=a),function or(n,i,e){return Ue.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsComputeStatisticsHistograms)throw new Z.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,O.TJ)(vt,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;return u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule&&(e.mosaicRule=l),a&&null==e.raster&&(e.raster=a),function ar(n,i,e){return ze.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return(0,f.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,a={}){if(null==e||null==t||null==r)return Promise.reject(new Z.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const l=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:a.signal}):null;return(0,ae.gx)(l).then(u=>{u&&(this.rasterInfo=u);const m={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,a.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(m)})}fetchKeyProperties(e){return(0,D.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new Z.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,D.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then(t=>mt.default.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return function hr(n,i,e){return We.apply(this,arguments)}(this.parsedUrl.path,e,r)}getCatalogItemICSInfo(e,t){var r=this;return(0,x.Z)(function*(){const{data:a}=yield(0,D.default)(r.parsedUrl.path+"/"+e+"/info/ics",{query:r._getQueryParams(),...t}),l=a&&a.ics;if(!l)return;let u=null;try{u=(yield(0,D.default)(r.parsedUrl.path+"/"+e+"/info",{query:r._getQueryParams(),...t})).data.extent}catch{}if(!u||!u.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const m=r.version>=10.7?(0,D.default)(r.parsedUrl.path+"/"+e+"/info/icstopixel",{query:r._getQueryParams(),...t}).then(w=>w.data).catch(()=>({})):{},d=u.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},y=(0,D.default)(r.parsedUrl.path+"/project",{query:r._getQueryParams(p),...t}).then(w=>w.data).catch(()=>({})),g=(u.xmin+u.xmax)/2,v=(u.ymax-u.ymin)/6,h=u.ymin+v,b=[];for(let w=0;w<5;w++)b.push({x:g,y:h+v*w});const B={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:b}),inSR:d.wkid||JSON.stringify(d),outSR:"0:"+e},N=(0,D.default)(r.parsedUrl.path+"/project",{query:r._getQueryParams(B),...t}).then(w=>w.data).catch(()=>({})),C=yield Promise.all([m,y,N]);let I=C[0].ipxf;if(null==I){const w=l.geodataXform?.xf_0;"topup"===w?.name?.toLowerCase()&&6===w?.coefficients?.length&&(I={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:w.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const G=Pe.Z.fromJSON(C[1]&&C[1].geometries&&C[1].geometries[0]);G&&(G.spatialReference=new te.Z({wkid:0,imageCoordinateSystem:l}));const _=C[2].geometries?C[2].geometries.filter(w=>null!=w&&null!=w.x&&null!=w.y&&"NaN"!==w.x&&"NaN"!==w.y):[],ie=_.length;if(ie<3)return{ics:l,icsToPixelTransform:I,icsExtent:G,northDirection:null};let me=0,Te=0,ve=0,ne=0;for(let w=0;w<ie;w++)me+=_[w].x,Te+=_[w].y,ve+=_[w].x*_[w].x,ne+=_[w].x*_[w].y;const W=(ie*ne-me*Te)/(ie*ve-me*me);let Re=0;const St=_[4].x>_[0].x,Ct=_[4].y>_[0].y;return W===1/0?Re=Ct?90:270:0===W?Re=St?0:180:W>0?Re=St?180*Math.atan(W)/Math.PI:180*Math.atan(W)/Math.PI+180:W<0&&(Re=Ct?180+180*Math.atan(W)/Math.PI:360+180*Math.atan(W)/Math.PI),{ics:l,icsToPixelTransform:I,icsExtent:G,northDirection:Re}})()}generateRasterInfo(e,t){var r=this;return(0,x.Z)(function*(){if((!e||"none"===e?.functionName?.toLowerCase()||r._isVectorFieldResampleFunction(e))&&(0,f.pC)(r.serviceRasterInfo))return r.serviceRasterInfo;const a=function Cr(n){if(!n)return null;const i=JSON.stringify(n).match(/"rasterFunction":"(.*?")/gi)?.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}(e);if(r._functionRasterInfos[a])return r._functionRasterInfos[a];const l=r._generateRasterInfo(e,t);r._functionRasterInfos[a]=l;try{return yield l}catch{return r._functionRasterInfos[a]=null,null}})()}getExportImageServiceParameters(e,t,r,a){const l=gt((e=e.clone().shiftCentralMeridian()).spatialReference,this.parsedUrl.path);(0,f.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:d}=u;let{renderingRule:p}=u;const y=this.renderingRule?.rasterFunctionDefinition,R=!this.renderer||"raster-stretch"===this.renderer.type;if(m?.length&&this._hasRenderingRule(this.renderingRule)&&!y&&R){const h={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if("Stretch"===p.rasterFunction)h.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=h;else if("Colormap"===p.rasterFunction){const b=p.rasterFunctionArguments.Raster;"Stretch"===b?.rasterFunction?(h.rasterFunctionArguments.Raster=b.rasterFunctionArguments.Raster,b.rasterFunctionArguments.Raster=h):(h.rasterFunctionArguments.Raster=b,p.rasterFunctionArguments.Raster=h)}else h.rasterFunctionArguments.Raster=p,p=h;u.bandIds=void 0}else u.bandIds=m?.join(",");d instanceof Array&&d.length>0&&(u.noData=d.join(","));const g=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,a):null;u.mosaicRule=g&&JSON.stringify(g),u.renderingRule=this._getRenderingRuleString(S.fromJSON(p));const v={};if(a){const{start:h,end:b}=a.toJSON();h&&b&&h===b?v.time=""+h:null==h&&null==b||(v.time=`${h??"null"},${b??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+r,...u,...v}}getSamples(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsGetSamples)throw new Z.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,O.TJ)(vr,e).clone();const{raster:a}=r;return a&&null==e.raster&&(e.raster=a),function lr(n,i,e){return He.apply(this,arguments)}(r.url,e,r._getRequestOptions(t))})()}identify(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsIdentify)throw new Z.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,O.TJ)(Rt,e).clone();const{raster:a,mosaicRule:l,renderingRule:u}=r;if(u&&null==e.renderingRule&&(e.renderingRule=u),l&&null==e.mosaicRule){const m=r._combineMosaicRuleWithTimeExtent(l,e.timeExtent);e.mosaicRule=(0,f.Wg)(m)}return a&&null==e.raster&&(e.raster=a),ht(r.url,e,r._getRequestOptions(t))})()}createQuery(){const e=new Ge.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}queryRasters(e,t){var r=this;return(0,x.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,ur.e)(r.url,e,t)})()}queryObjectIds(e,t){var r=this;return(0,x.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,dr.G)(r.url,e,t)})()}queryRasterCount(e,t){var r=this;return(0,x.Z)(function*(){return({query:e,requestOptions:t}=yield r._prepareForQuery(e,t)),(0,mr.P)(r.url,e,t)})()}queryVisibleRasters(e,t){var r=this;return(0,x.Z)(function*(){if(!e)throw new Z.Z("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:a,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:m}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let d=!1,p=null,y=null;const R="raster.servicepixelvalue",g=r.rasterFunctionNamesIndex;if((0,f.pC)(e.outFields)&&(d=e.outFields.some(C=>!C.toLowerCase().includes(R)),r.version>=10.4)){const C=e.outFields.filter(I=>I.toLowerCase().includes(R)&&I.length>R.length).map(I=>{const G=I.slice(R.length+1);return[r._updateRenderingRulesFunctionName(G,g),G]});p=C.map(I=>new S({functionName:I[0]})),y=C.map(I=>I[1]),0===p.length?r.renderingRule?(p.push(r.renderingRule),y.push(r.renderingRule.functionName)):p=null:r.renderingRule&&!p.some(I=>I.functionName===r.renderingRule.functionName)&&(p.push(r.renderingRule),y.push(r.renderingRule.functionName))}const v=(0,f.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(r.spatialReference),h=e.timeExtent||r.timeExtent,b=r._combineMosaicRuleWithTimeExtent(r.exportImageServiceParameters.mosaicRule,h),B=r._getQueryParams({geometry:e.geometry,timeExtent:h,mosaicRule:b,renderingRule:r.version<10.4?r.renderingRule:null,renderingRules:p,pixelSize:a,returnCatalogItems:d,returnGeometry:v,raster:r.raster,maxItemCount:u?1:null});delete B.f;const N=new Rt(B);try{yield r.generateRasterInfo(r.renderingRule);const C=yield ht(r.url,N,{signal:t?.signal,query:{...r.customParameters}}),I=e.outFields,G=C.value.toLowerCase().includes("nodata");if(!d||v||!C?.catalogItems?.features.length||!m&&G)return r._processVisibleRastersResponse(C,{returnDomainValues:l,templateRRFunctionNames:y,showNoDataRecords:m,templateFields:I});const _=r.objectIdField||"ObjectId",ie=C.catalogItems.features,me=ie.map(ne=>ne.attributes?.[_]),Te=new Ge.Z({objectIds:me,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[_]}),ve=yield r.queryRasters(Te);return ve?.features?.length&&ve.features.forEach(ne=>{ie.forEach(W=>{W.attributes[_]===ne.attributes[_]&&(W.geometry=new cr.Z(ne.geometry),(0,f.pC)(e.outSpatialReference)&&(W.geometry.spatialReference=e.outSpatialReference))})}),r._processVisibleRastersResponse(C,{returnDomainValues:l,templateRRFunctionNames:y,showNoDataRecords:m,templateFields:I})}catch{throw new Z.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})()}fetchVariableStatisticsHistograms(e,t){var r=this;return(0,x.Z)(function*(){const a=(0,D.default)(r.parsedUrl.path+"/statistics",{query:r._getQueryParams({variable:e}),signal:t}).then(m=>m.data?.statistics),l=(0,D.default)(r.parsedUrl.path+"/histograms",{query:r._getQueryParams({variable:e}),signal:t}).then(m=>m.data?.histograms),u=yield Promise.all([a,l]);return u[0]&&u[0].forEach(m=>{m.avg=m.mean,m.stddev=m.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}})()}createFlowMesh(e,t){var r=this;return(0,x.Z)(function*(){const a=r._rasterJobHandler.instance;return a?a.createFlowMesh(e,t):(0,Rr.GE)(e.meshType,e.simulationSettings,e.flowData,(0,f.pC)(t.signal)?t.signal:(new AbortController).signal)})()}_fetchService(e){var t=this;return(0,x.Z)(function*(){yield t._fetchServiceInfo(e),(0,f.pC)(t.serviceRasterInfo)&&!t.rasterInfo&&(t.rasterInfo=t.serviceRasterInfo);const r=t.sourceJSON,a=(0,f.pC)(t.serviceRasterInfo)?Promise.resolve(t.serviceRasterInfo):(0,ft.g)(t.parsedUrl.path,r,{signal:e,query:t._getQueryParams()}).then(m=>(t._set("serviceRasterInfo",m),m)),l=t._hasRenderingRule(t.renderingRule)?t.generateRasterInfo(t.renderingRule,{signal:e}):null,u=t._getRasterFunctionInfos();return Promise.all([a,l,u]).then(m=>{t._set("rasterInfo",m[1]?m[1]:m[0]),m[2]&&t._set("rasterFunctionInfos",m[2]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t._set("renderer",null),bt.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._set("renderer",t._configRenderer(t.renderer)),t.own((0,Ft.YP)(()=>t.renderingRule,p=>{(t.renderer||t.symbolizer||t.popupEnabled&&t.popupTemplate)&&t.generateRasterInfo(p).then(y=>{y&&(t.rasterInfo=y)})}));const{serviceRasterInfo:d}=t;(0,f.pC)(d)&&d.multidimensionalInfo&&t._updateMultidimensionalDefinition(d)})})()}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if((0,f.Wi)(e)||(0,f.Wi)(this.multidimensionalInfo)||(0,f.Wi)(t)||(0,f.Wi)(r?.startField))return e;const{startField:a}=r,l=this.multidimensionalInfo.variables.some(g=>g.dimensions.some(v=>v.name===a))?a:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(g=>g.dimensionName!==l),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const u=e.multidimensionalDefinition.filter(g=>g.dimensionName===l),m=(0,f.pC)(t.start)?t.start.getTime():null,d=(0,f.pC)(t.end)?t.end.getTime():null,p=null==m||null==d||m===d,y=p?[m||d]:[[m,d]],R=this.version>=10.8;if(u.length)u.forEach(g=>{g.dimensionName===l&&(R?(g.dimensionName=null,g.isSlice=null,g.values=null):(g.isSlice=p,g.values=y))});else if(!R){const g=e.multidimensionalDefinition.filter(v=>null!=v.variableName&&null==v.dimensionName);g.length?g.forEach(v=>{v.dimensionName=l,v.isSlice=p,v.values=y}):e.multidimensionalDefinition.push(new it.Z({variableName:"",dimensionName:l,isSlice:p,values:y}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,f.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var r=this;return(0,x.Z)(function*(){if(yield r._fetchCapabilities(t?.signal),!r.capabilities.operations.supportsQuery)throw new Z.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,f.pC)(e)?(0,O.TJ)(Ge.Z,e):r.createQuery(),t=r._getRequestOptions(t),r.raster&&(t.query={...t.query,raster:r.raster}),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,x.Z)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new $t.Z;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>null),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,Ie.U0)(this.rasterInfo).includes(this.renderer.type)}_fetchCapabilities(e){var t=this;return(0,x.Z)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,x.Z)(function*(){let r=t.sourceJSON;if(!r){const{data:a,ssl:l}=yield(0,D.default)(t.parsedUrl.path,{query:t._getQueryParams(),signal:e});r=a,t.sourceJSON=r,l&&(t.url=t.url.replace(/^http:/i,"https:"))}if(r.capabilities?.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly")>-1)throw new Z.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(r,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){return!!e&&(this._isMosaicDataset(e)||e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&e.fields?.length>1))}_isVectorFieldResampleFunction(e){if((0,f.Wi)(e))return!1;const{functionName:t,functionArguments:r}=e,a="resample"===t?.toLowerCase(),l=r?.ResampleType||r?.resampleType;return a&&(7===l||10===l)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const r=(0,Ie.YD)(this.rasterInfo);!r||3===this.rasterInfo.bandCount&&0===r[0]&&1===r[1]&&2===r[2]||(this.bandIds=r)}e||(e=(0,Ie.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,Ie.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new qt.Z({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,f.pC)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){(0,f.pC)(e?.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,Ve.J)(e,t,r)}_getRasterFunctionInfos(e){var t=this;return(0,x.Z)(function*(){const r=t.sourceJSON.rasterFunctionInfos;return t.serviceRasterInfo?r:r&&t.version>=10.3?1===r.length&&"none"===r[0].name.toLowerCase()?r:(yield(0,D.default)(t.parsedUrl.path+"/rasterFunctionInfos",{query:t._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null})()}_requestArrayBuffer(e){var t=this;return(0,x.Z)(function*(){const{imageProps:r,requestAsImageElement:a,signal:l}=e;if(a&&!t.pixelFilter&&r.format?.indexOf("png")>-1)return{imageElement:(yield(0,D.default)(t.parsedUrl.path+"/exportImage",{responseType:"image",query:t._getQueryParams({f:"image",...e.imageServiceParameters}),signal:l})).data,params:r};const u=t._initJobHandler(),m=(0,D.default)(t.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:t._getQueryParams({f:"image",...e.imageServiceParameters}),signal:l}),d=(yield Promise.all([m,u]))[0].data,p=r.format||"jpgpng";let y=p;if("bsq"!==y&&"bip"!==y&&(y=(0,Ve.y)(d)),!y)throw new Z.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(d)));const R={signal:l};return{pixelData:{pixelBlock:yield"gif"===p||"bmp"===p||p.includes("png")&&("png"===y||"jpg"===y)?(0,Ve.J)(d,{useCanvas:!0,...r},R):t._decodePixelBlock(d,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:p},R),extent:r.extent},params:r}})()}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return(0,ft.N)(this.parsedUrl.path,e,r)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,Xt.Tj)(e);if((0,f.pC)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new H;const r=this.mosaicRule.multidimensionalDefinition;(!r||r&&r.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:a,showNoDataRecords:l,returnDomainValues:u,templateFields:m}=t,d=e.processedValues;let p=e.catalogItems&&e.catalogItems.features,y=e.properties&&e.properties.Values&&e.properties.Values.map(N=>N.replace(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",g="string"==typeof r&&r.toLowerCase().includes("nodata"),v=[];if(r&&!p&&!g){const N={};N[R]=0,y=[r],p=[new It.Z(this.fullExtent,null,N)]}if(!p)return[];let h,b,B;this._updateResponseFieldNames(p,m),g&&!l&&(p=[]);for(let N=0;N<p.length;N++){if(h=p[N],null!=r){if(b=y[N],B=this.renderingRule&&d&&d.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?d[a.indexOf(this.renderingRule.functionName)]:r,"nodata"===b.toLowerCase()&&!l)continue;const I="Raster.ServicePixelValue";h.attributes["Raster.ItemPixelValue"]=b,h.attributes[I]=B,this._updateFeatureWithMagDirValues(h,b);const G=this.fields&&this.fields.length>0;let _=this.renderingRule&&(0,f.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?G?b:r:B;this.renderingRule||(_=G?b:r),this._updateFeatureWithRasterAttributeTableValues(h,_)}if(h.sourceLayer=h.layer=this,u&&this._updateFeatureWithDomainValues(h),a&&d&&a.length===d.length)for(let C=0;C<a.length;C++)h.attributes["Raster.ServicePixelValue."+a[C]]=d[C];v.push(p[N])}return v}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,f.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,a=r&&r.features;if(!a)return;const l=r.fields,u=l.map(p=>p.name).filter(p=>"value"===p.toLowerCase()),m=u&&u[0];if(!m)return;const d=a.filter(p=>p.attributes[m]===(null!=t?parseInt(t,10):null));d&&d[0]&&l.forEach(p=>{e.attributes[this.rasterAttributeTableFieldPrefix+p.name]=d[0].attributes[p.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map(d=>parseFloat(d)),a=r.map(d=>[d]),l=r.map(d=>({minValue:d,maxValue:d,noDataValue:null})),u=new Kt.Z({height:1,width:1,pixelType:"f32",pixels:a,statistics:l});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:u,extent:new Pe.Z(0,0,0,0,this.spatialReference)});const m="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[u.pixels[0][0],u.pixels[1][0]]:(0,Yt.Tg)([u.pixels[0][0],u.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){(this.fields&&this.fields.filter(r=>r.domain&&"coded-value"===r.domain.type))?.forEach(r=>{const a=e.attributes[r.name];if(null!=a){const l=r.domain.codedValues.find(u=>u.code===a);l&&(e.attributes[r.name]=l.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;(0,f.Wi)(r)||e.forEach(a=>{if(a&&a.attributes)for(const l of t)if(r.has(l)){const u=r.get(l).name;u!==l&&(a.attributes[l]=a.attributes[u],delete a.attributes[u])}})}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(y=>y.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:a,maxRecordCount:l}=e,u=t.includes("image"),m="esriImageServiceDataTypeElevation"===e.serviceDataType,d=!!(e.spatialReference||e.extent&&e.extent.spatialReference),p=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsMeasure:t.includes("mensuration")&&d,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&u,supportsProject:r>=10.3&&u,supportsComputeStatisticsHistograms:r>=10.4&&u,supportsQueryBoundary:r>=10.6&&u,supportsCalculateVolume:r>=10.7&&m,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:p,supportsDelete:p,supportsEditing:p,supportsUpdate:p,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,supportsStatistics:!!a?.supportsStatistics,supportsOrderBy:!!a?.supportsOrderBy,supportsDistinct:!!a?.supportsDistinct,supportsPagination:!!a?.supportsPagination,supportsStandardizedQueriesOnly:!!a?.useStandardizedQueries,supportsPercentileStatistics:!!a?.supportsPercentileStatistics,supportsCentroid:!!a?.supportsReturningGeometryCentroid,supportsDistance:!!a?.supportsQueryWithDistance,supportsExtent:!!a?.supportsReturningQueryExtent,supportsGeometryProperties:!!a?.supportsReturningGeometryProperties,supportsHavingClause:!!a?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!a?.supportsDefaultSR,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return(0,s._)([(0,o.Cb)()],i.prototype,"_functionRasterInfos",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,o.Cb)({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),(0,s._)([(0,j.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),(0,s._)([(0,j.r)("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),(0,s._)([(0,j.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"rasterFunctionNamesIndex",null),(0,s._)([(0,o.Cb)()],i.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,K.B)("serviceRasterInfo.bandCount")],i.prototype,"bandCount",void 0),(0,s._)([(0,o.Cb)({type:[O.z8],json:{write:!0}})],i.prototype,"bandIds",void 0),(0,s._)([(0,j.r)("bandIds")],i.prototype,"readBandIds",null),(0,s._)([(0,o.Cb)({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),(0,s._)([(0,j.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),(0,s._)([(0,o.Cb)({type:Number})],i.prototype,"compressionQuality",void 0),(0,s._)([(0,F.c)("compressionQuality")],i.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.Cb)({type:Number})],i.prototype,"compressionTolerance",void 0),(0,s._)([(0,F.c)("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.Cb)({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),(0,s._)([(0,o.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"rasterInfo",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,type:[ee.Z]})],i.prototype,"fields",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"fieldsIndex",null),(0,s._)([(0,o.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),(0,s._)([(0,j.r)("service","format",["serviceDataType"])],i.prototype,"readFormat",null),(0,s._)([(0,o.Cb)({type:Pe.Z})],i.prototype,"fullExtent",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),(0,s._)([(0,o.Cb)({type:String,json:{type:U.c.jsonValues,read:U.c.read,write:U.c.write}})],i.prototype,"interpolation",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"minScale",void 0),(0,s._)([(0,j.r)("service","minScale")],i.prototype,"readMinScale",null),(0,s._)([(0,o.Cb)()],i.prototype,"maxScale",void 0),(0,s._)([(0,j.r)("service","maxScale")],i.prototype,"readMaxScale",null),(0,s._)([(0,o.Cb)({type:H})],i.prototype,"mosaicRule",null),(0,s._)([(0,j.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),(0,s._)([(0,F.c)("mosaicRule")],i.prototype,"writeMosaicRule",null),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,K.B)("serviceRasterInfo.multidimensionalInfo")],i.prototype,"multidimensionalInfo",void 0),(0,s._)([(0,o.Cb)({json:{type:O.z8}})],i.prototype,"noData",void 0),(0,s._)([(0,F.c)("noData")],i.prototype,"writeNoData",null),(0,s._)([(0,o.Cb)({type:String,json:{type:U.k.jsonValues,read:U.k.read,write:U.k.write}})],i.prototype,"noDataInterpretation",void 0),(0,s._)([(0,o.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),(0,s._)([(0,j.r)("objectIdField")],i.prototype,"readObjectIdField",null),(0,s._)([(0,o.Cb)({})],i.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({})],i.prototype,"typeIdField",void 0),(0,s._)([(0,o.Cb)({})],i.prototype,"types",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"parsedUrl",null),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,K.B)("serviceRasterInfo.pixelSize.x")],i.prototype,"pixelSizeX",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,K.B)("serviceRasterInfo.pixelSize.y")],i.prototype,"pixelSizeY",void 0),(0,s._)([(0,o.Cb)({type:Function})],i.prototype,"pixelFilter",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"raster",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"viewId",void 0),(0,s._)([(0,o.Cb)({types:De.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:De.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],i.prototype,"renderer",null),(0,s._)([(0,j.r)("renderer")],i.prototype,"readRenderer",null),(0,s._)([(0,F.c)("renderer")],i.prototype,"writeRenderer",null),(0,s._)([(0,o.Cb)()],i.prototype,"symbolizer",void 0),(0,s._)([(0,o.Cb)(be.Oh)],i.prototype,"opacity",void 0),(0,s._)([(0,o.Cb)({readOnly:!0}),(0,K.B)("serviceRasterInfo.attributeTable")],i.prototype,"rasterAttributeTable",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"rasterFields",null),(0,s._)([(0,o.Cb)({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),(0,s._)([(0,o.Cb)({type:S})],i.prototype,"renderingRule",null),(0,s._)([(0,j.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),(0,s._)([(0,F.c)("renderingRule")],i.prototype,"writeRenderingRule",null),(0,s._)([(0,o.Cb)()],i.prototype,"serviceDataType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,type:te.Z})],i.prototype,"spatialReference",void 0),(0,s._)([(0,j.r)("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),(0,s._)([(0,o.Cb)({json:{type:et.jsonValues}})],i.prototype,"pixelType",void 0),(0,s._)([(0,j.r)("pixelType")],i.prototype,"readPixelType",null),(0,s._)([(0,F.c)("pixelType")],i.prototype,"writePixelType",null),(0,s._)([(0,o.Cb)({constructOnly:!0,type:ct.Z})],i.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,o.Cb)()],i.prototype,"sourceJSON",void 0),(0,s._)([(0,o.Cb)(be.HQ)],i.prototype,"url",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],i.prototype,"version",void 0),(0,s._)([(0,j.r)("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=(0,s._)([(0,A.j)("esri.layers.mixins.ArcGISImageService")],i),i};var Ir=c(65088),wr=c(552),Fr=c(50107),Pr=c(49286),Tr=c(6647),Dr=c(30346),Nr=c(99555),Or=c(97941),jr=c(5676),Mr=c(49430);let Q=class extends((0,wr.h)((0,Or.n)((0,Dr.Q)((0,Nr.M)((0,Pr.q)((0,Tr.I)(xr((0,Fr.N)((0,Ir.Y)((0,ye.R)(xt.Z))))))))))){constructor(...n){super(...n),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(n,i){return"string"==typeof n?{url:n,...i}:n}load(n){const i=(0,f.pC)(n)?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(ae.r9).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(n,i,e){i[e]="vector-field"===this.renderer?.type?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(n){const i=this.rasterFields,e=this.title,t=new Set;let r=!1,a=!1;this.capabilities&&(r=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const l=new Set;r&&l.add("raster.itempixelvalue");for(const u of i){const m=u.name.toLowerCase();l.has(m)||m.includes("raster.servicepixelvalue.")||t.add(u.name)}return a&&t.add("raster.magnitude").add("raster.direction"),(0,Mr.eZ)({fields:i,title:e},{...n,visibleFieldNames:t})}queryFeatures(n,i){return this.queryRasters(n,i).then(e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(n,i){return this.queryRasterCount(n,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(n){return(0,jr.D)(this,n)}};(0,s._)([(0,o.Cb)(be.rn)],Q.prototype,"legendEnabled",void 0),(0,s._)([(0,o.Cb)({type:["show","hide"]})],Q.prototype,"listMode",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),(0,s._)([(0,o.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),(0,s._)([(0,F.c)("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),(0,s._)([(0,o.Cb)(be.C_)],Q.prototype,"popupEnabled",void 0),(0,s._)([(0,o.Cb)({type:de.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),(0,s._)([(0,o.Cb)({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),Q=(0,s._)([(0,A.j)("esri.layers.ImageryLayer")],Q);const Ar=Q},90463:(tt,se,c)=>{c.d(se,{P:()=>ae});var s=c(15861),de=c(2618),f=c(20477),ye=c(84952);function ae(oe,le,O){return o.apply(this,arguments)}function o(){return(o=(0,s.Z)(function*(oe,le,O){const A=(0,de.en)(oe);return(0,f.executeQueryForCount)(A,ye.Z.from(le),{...O}).then(F=>F.data.count)})).apply(this,arguments)}},24865:(tt,se,c)=>{c.d(se,{G:()=>ae});var s=c(15861),de=c(2618),f=c(20477),ye=c(84952);function ae(oe,le,O){return o.apply(this,arguments)}function o(){return(o=(0,s.Z)(function*(oe,le,O){const A=(0,de.en)(oe);return(0,f.executeQueryForIds)(A,ye.Z.from(le),{...O}).then(F=>F.data.objectIds)})).apply(this,arguments)}}}]);