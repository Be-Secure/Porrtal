"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[2943],{8549:(Je,ge,L)=>{L.d(ge,{C:()=>B,b:()=>ee});var P=L(10109),ne=L(33726),S=L(2166),b=L(95285),De=L(69960),Re=L(17625),q=L(22355),we=L(44835),ue=L(16396);function ee(T){const I=new q.kG;I.extensions.add("GL_OES_standard_derivatives");const{vertex:oe,fragment:W}=I;return(0,S.Sv)(oe,T),I.attributes.add(ue.T.POSITION,"vec3"),I.attributes.add(ue.T.UV0,"vec2"),I.varyings.add("vUV","vec2"),T.hasMultipassTerrain&&I.varyings.add("depth","float"),oe.code.add(Re.H`
    void main(void) {
      vUV = uv0;
      ${T.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),I.include(P.l,T),W.uniforms.add(new b.A("size",Z=>Z.size)),W.uniforms.add(new De.N("color1",Z=>Z.color1)),W.uniforms.add(new De.N("color2",Z=>Z.color2)),W.include(ne.Y),W.code.add(Re.H`
    void main() {
      ${T.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${T.transparencyPassType===we.A.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),I}const B=Object.freeze(Object.defineProperty({__proto__:null,build:ee},Symbol.toStringTag,{value:"Module"}))},32943:(Je,ge,L)=>{L.r(ge),L.d(ge,{default:()=>$t});var P=L(17626),ne=L(14517),S=L(62208),b=L(77712),q=(L(85931),L(90912),L(76898)),we=L(39691),ue=L(1437),ee=L(74554),B=L(32917),T=L(55915),I=L(12080),oe=L(21286),W=L(15572),Z=L(67831),pe=L(99770),D=L(84161),R=L(28093),ae=L(4794),ze=L(65234),ke=L(78172),xe=L(11519),qe=L(11544),et=L(44766),tt=L(37118),me=L(10049),ve=L(98943);function at(h,n,d){const v=new me._q;return(0,me.cA)(v,[h[0],h[1]],[n[0],n[1]],d),v.distance}function ht(h,n,d,v){const y=dt;return(0,T.ke)(h,v,$)&&(0,T.ke)(n,v,Q)&&(0,T.ke)(d,v,Ge)?(y.setPoint(0,0,$),y.setPoint(0,1,Q),y.setPoint(0,2,Ge),Math.abs((0,et.geodesicArea)(y,"square-meters"))):0}const $=(0,R.c)(),Q=(0,R.c)(),Ge=(0,R.c)(),dt=new tt.Z({rings:[[$,Q,Ge]],spatialReference:ze.Z.WGS84}),F=(0,R.c)();var Te=L(495),ct=L(53929),Ie=L(37187),he=L(16730),gt=L(11915);function Ee(h){return(0,gt.e)(function mt(h){const n=new Float64Array(2*h.length);for(let d=0;d<h.length;++d){const v=h[d],y=2*d;n[y+0]=v[0],n[y+1]=v[1]}return n}(h),[],2)}L(90014),L(66601),(0,R.c)(),(0,R.c)();class vt{constructor(n,d){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=(0,R.c)(),this.areaCentroidRenderCoords=(0,R.c)(),this.geodesicAreaCentroidRenderCoords=(0,R.c)(),this._length=0,this._centroidRenderCoords=(0,R.c)(),this._planeWorldCoords=(0,ae.c)(),this._worldUp=(0,R.c)(),this._worldTangent=(0,R.c)(),this._frame=[(0,R.c)(),(0,R.c)(),(0,R.c)()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=(0,R.c)(),this._tempV=(0,R.c)(),this._tempVec3=(0,R.c)(),this._tempSphere={center:(0,R.c)(),radius:0},this._sceneView=n,this.unitNormalizer=d}update(n,d,v,y,C,_,M){const A=this.unitNormalizer,V=this._sceneView.renderSpatialReference,w=this.unitNormalizer.spatialReference,G=(0,S.pC)(d);if(this._pathVersion===n.version&&this._validMeasurement===y&&!M&&this._hasCursorPoint===G&&this._mode===_)return!n.isValidPolygon&&(this._updateCursorSegmentLength(n,d),!0);this._pathVersion=n.version,this._validMeasurement=y,this._hasCursorPoint=G,this._resize(n.numVertices);const z=(0,I.rS)(v.spatialReference),j=(0,T.Up)(v.spatialReference,z)&&(0,T.jF)(v.spatialReference),{positionsGeographic:E,positionsWorldCoords:Ae,positionsRenderCoords:X,positionsSpherical:re}=this;n.forEachVertexPosition((x,N)=>{(function ft(h,n){n.hasZ||(n.z=(0,S.Pt)((0,ct.KO)(h,n,"ground"),0))})(v.elevationProvider,x),(0,T.KC)(x,Ae[N],w),(0,T.KC)(x,X[N],V),j&&((0,T.UY)(x,E[N]),(0,T.KC)(x,re[N],z),(0,D.n)(re[N],re[N]))});const Ve=this._updatePathLengths(y);if(this.pathLength=this._length>1?(0,W.yG)(A.normalizeDistance(Ve),"meters"):null,j){const x=this._updateGeodesicPathLengths(y,w);this.geodesicPathLength=this._length>1?(0,W.yG)(x,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(n,d),this._updateMode(n,_),y?(this._updateArea(v,A,V,w,C),j&&this._updateGeodesicArea(v),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(n){for(n<this._length&&(this.positionsWorldCoords.length=n,this.positionsRenderCoords.length=n,this.positionsProjectedWorldCoords.length=n,this.positionsFittedRenderCoords.length=n,this.positionsGeographic.length=n,this.positionsSpherical.length=n,this.positionsStereographic.length=n,this.pathSegmentLengths.length=n,this.geodesicPathSegmentLengths.length=n,this.perimeterSegmentLengths.length=n,this._length=n);this._length<n;)this.positionsWorldCoords.push((0,R.c)()),this.positionsRenderCoords.push((0,R.c)()),this.positionsProjectedWorldCoords.push((0,pe.a)()),this.positionsFittedRenderCoords.push((0,R.c)()),this.positionsGeographic.push((0,R.c)()),this.positionsSpherical.push((0,R.c)()),this.positionsStereographic.push((0,pe.a)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(n){const d=this.positionsWorldCoords,v=this.pathSegmentLengths;let y=0;for(let C=0;C<this._length;++C){const _=v[C]=(0,D.i)(d[C],d[(C+1)%this._length]);(C<this._length-1||n)&&(y+=_)}return y}_updateGeodesicPathLengths(n,d){const v=this.positionsGeographic,y=this.geodesicPathSegmentLengths;let C=0;for(let _=0;_<this._length;++_){const M=y[_]=at(v[_],v[(_+1)%this._length],d);(_<this._length-1||n)&&(C+=M)}return C}_updateArea(n,d,v,y,C){const _=n.renderCoordsHelper,M=this.positionsWorldCoords,A=this.positionsRenderCoords,V=this.positionsProjectedWorldCoords,w=this.positionsFittedRenderCoords,G=this._planeWorldCoords,O=this._centroidRenderCoords;(0,Te.H)(A,O),_.worldUpAtPosition(O,this._worldUp),_.worldBasisAtPosition(O,ke.R.X,this._worldTangent),(0,T.Qr)(O,this._worldUp,v,this._worldUp,y),(0,T.Qr)(O,this._worldTangent,v,this._worldTangent,y),M.length>2&&function it(h,n){if(h.length<3)throw new Error("need at least 3 points to fit a plane");(0,ve.pG)(h[0],h[1],h[2],n)}(M,G),this.fittingMode=this._selectFittingMode(G,M,this._worldUp,C);let z=0;if("horizontal"===this.fittingMode){let x=-1/0;A.forEach((N,be)=>{const Qe=_.getAltitude(A[be]);Qe>x&&(x=Qe,z=be)})}const j=M[z];let E=G,Ae=this._worldTangent;"horizontal"===this.fittingMode?E=this._worldUp:"vertical"===this.fittingMode&&(E=this._tempVec3,Ae=this._worldUp,(0,ve.T)(G,this._worldUp,E)),(0,D.c)(this._frame[2],E),(0,ve.T)(Ae,E,this._frame[0]),(0,D.f)(this._frame[1],this._frame[0],this._frame[2]),(0,D.o)(this._frame[1],this._frame[1]);const X=this._tempVec3,re=this._tempU,Ve=this._tempV;for(let x=0;x<this._length;++x){const N=V[x],be=w[x];(0,D.b)(X,M[x],j),(0,Z.s)(N,(0,D.e)(this._frame[0],X),(0,D.e)(this._frame[1],X)),(0,D.g)(re,this._frame[0],N[0]),(0,D.g)(Ve,this._frame[1],N[1]),(0,D.a)(X,re,Ve),(0,D.a)(X,X,j),(0,T.SH)(X,y,be,v)}this.perimeterLength=this._length>0?(0,W.yG)(d.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,(0,Te.H)(w,this.areaCentroidRenderCoords),(0,T.SH)(this.areaCentroidRenderCoords,v,this.areaCentroidWorldCoords,y),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?(0,W.ne)(d.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(n){const{renderCoordsHelper:d,spatialReference:v}=n,{positionsSpherical:y,positionsStereographic:C}=this,_=this._tempVec3,M=function lt(h,n=null,d=!0){const y=(C,_)=>{if(0===_[0]&&0===_[1]&&0===_[2])return!1;for(let M=0;M<C.length;++M)if((0,D.e)(_,C[M])<-1e-6)return!1;return!0};if(0===h.length)return!1;if(1===h.length)return n&&(0,D.c)(n,h[0]),!0;(0,D.s)(F,0,0,0);for(let C=0;C<h.length;++C)(0,D.a)(F,F,h[C]);if((0,D.n)(F,F),y(h,F))return n&&(0,D.c)(n,F),!0;if(!d)return!1;for(let C=0;C<h.length;++C)for(let _=0;_<h.length;++_)if(C!==_&&((0,D.f)(F,h[C],h[_]),(0,D.n)(F,F),y(h,F)))return n&&(0,D.c)(n,F),!0;return!1}(y,_);if(!M)return void(this.geodesicArea=null);const A=this._tempU,V=this._tempV;(0,ve._F)(_,A,V);for(let w=0;w<this._length;++w){const G=(0,D.e)(y[w],A),O=(0,D.e)(y[w],V),z=(0,D.e)(y[w],_);(0,Z.s)(C[w],G/z,O/z)}(0,D.g)(_,_,(0,I.Iu)(v).radius),d.toRenderCoords(_,(0,I.rS)(v),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=M&&0===this.geodesicIntersectingSegments.size?(0,W.ne)(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const n=this.positionsProjectedWorldCoords,d=this.perimeterSegmentLengths;let v=0;for(let y=0;y<this._length;++y)v+=d[y]=(0,Z.d)(n[y],n[(y+1)%this._length]);return v}_updateIntersectingSegments(){const n=this.positionsProjectedWorldCoords,d=this.intersectingSegments;d.clear();for(let v=0;v<this._length;++v)for(let y=v+2;y<this._length;++y)(y+1)%this._length!==v&&(0,xe.UT)(n[v],n[(v+1)%this._length],n[y],n[(y+1)%this._length])&&(d.add(v),d.add(y))}_computeArea(){const n=this.positionsProjectedWorldCoords,d=this.triangleIndices=(0,Ie.mi)(Ee(n));let v=0;for(let y=0;y<d.length;y+=3)v+=(0,qe.wu)(n[d[y]],n[d[y+1]],n[d[y+2]]);return v}_updateGeodesicIntersectingSegments(){const n=this.positionsStereographic,d=this.geodesicIntersectingSegments;d.clear();for(let v=0;v<this._length;++v)for(let y=v+2;y<this._length;++y)(y+1)%this._length!==v&&(0,xe.UT)(n[v],n[(v+1)%this._length],n[y],n[(y+1)%this._length])&&(d.add(v),d.add(y))}_computeGeodesicArea(){const n=this.positionsGeographic,v=this.geodesicTriangleIndices=(0,Ie.mi)(Ee(this.positionsStereographic));let y=0;for(let C=0;C<v.length;C+=3)y+=ht(n[v[C]],n[v[C+1]],n[v[C+2]],ze.Z.WGS84);return y}_selectFittingMode(n,d,v,y){const C=d.map(w=>Math.abs(function rt(h,n){return(0,D.e)(h,n)+h[3]}(n,w))).reduce((w,G)=>Math.max(w,G),0);!function st(h,n){const d=n.center;(0,D.s)(d,0,0,0);for(let y=0;y<h.length;++y)(0,D.a)(d,d,h[y]);(0,D.g)(d,d,1/h.length);let v=0;for(let y=0;y<h.length;++y)v=Math.max(v,(0,D.d)(d,h[y]));n.radius=Math.sqrt(v)}(d,this._tempSphere);const _=C/(2*this._tempSphere.radius);let V="horizontal";return _<y.maxRelativeErrorCoplanar?V="oblique":_<y.maxRelativeErrorAlmostCoplanar&&(V=Math.abs((0,D.e)(v,n))>Math.cos((0,oe.Vl)(y.verticalAngleThreshold))?"horizontal":"vertical"),V}_updateCursorSegmentLength(n,d){const v=n.lastPoint;!n.isValidPolygon&&(0,S.pC)(v)&&(0,S.pC)(d)?(this.geodesicCursorSegmentLength=(0,W.yG)(function ot(h,n){if(!(0,T.UY)(h,$)||!(0,T.UY)(n,Q))return 0;const d=new me._q;return(0,me.cA)(d,[$[0],$[1]],[Q[0],Q[1]]),d.distance}(v,d),"meters"),this.cursorSegmentLength=(0,W.yG)(this.unitNormalizer.normalizeDistance(function nt(h,n,d){return(0,T.KC)(h,$,d)&&(0,T.KC)(n,Q,d)?(0,D.i)($,Q):0}(v,d,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(n,d){if(d===ee.e.Auto){this.actualMeasurementMode="euclidean";let v=0;null!=this.geodesicPathLength&&(v+=this.geodesicPathLength.value),!n.isValidPolygon&&(0,S.pC)(this.geodesicCursorSegmentLength)&&(v+=this.geodesicCursorSegmentLength.value),v>yt&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=d===ee.e.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=d}}const yt=1e5;var Lt=L(68);let te=class extends ne.Z{constructor(h){super(h)}initialize(){const{spatialReference:h}=this.view,n=(0,I.rS)(h),d=n===I.GG?I.wY:n,v=!h||(0,T.Up)(h,d)?d:h,y=new Lt.D(v);this._measurementDataManager=new vt(this.view,y),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),(0,B.YP)(()=>this.analysisViewData.cursorPoint,()=>this._update(),B.Z_),(0,B.YP)(()=>this.analysisViewData.mode,()=>this._update(),B.Z_)]),this._update()}_update(h=!1){const{analysisViewData:n,view:d}=this;this._measurementDataManager.update(n.path,n.cursorPoint,d,n.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},n.mode,h)&&(n.measurementData=this._measurementDataManager.getData())}};(0,P._)([(0,b.Cb)({constructOnly:!0})],te.prototype,"view",void 0),(0,P._)([(0,b.Cb)({constructOnly:!0})],te.prototype,"analysis",void 0),(0,P._)([(0,b.Cb)({constructOnly:!0})],te.prototype,"analysisViewData",void 0),te=(0,P._)([(0,q.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],te);var Ct=L(61885),Be=L(72392),_t=L(63290),St=L(72642),Oe=L(65401),Pt=L(54865),Mt=L(50017),Fe=L(466),He=L(97737);const Ne="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",At=_t.Z.getLogger(Ne);let K=class extends Ct.Z.EventedAccessor{constructor(h={}){super(h),this._handles=new Be.Z,this._version=0,this._internalGeometryChange=!1,this._extent=(0,Oe.cS)()}destroy(){this._handles=(0,S.SC)(this._handles)}set areaMeasurement(h){this._set("areaMeasurement",h),(0,S.pC)(h)&&(0,S.pC)(this.view)&&this._initialize(h,this.view)}set view(h){this._set("view",h),(0,S.pC)(h)&&(0,S.pC)(this.areaMeasurement)&&this._initialize(this.areaMeasurement,h)}get constructed(){return(0,S.pC)(this.areaMeasurement)&&(0,S.pC)(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const h=(0,Oe.cS)(this._extent);return this.forEachVertex(n=>{(0,Oe.Ho)(h,n.pos)}),h}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(h,n){this._handles.removeAll(),this._handles.add((0,B.YP)(()=>h.geometry,()=>{this._updateEditGeometryFromModelGeometry(h,n)},B.tX)),this._makeDirty(!0)}_makeDirty(h=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),h&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(h,n){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let d=h.geometry;if((0,S.pC)(d)){const v=(0,T.fM)(d,n.spatialReference);(0,S.Wi)(v)&&(0,Pt.e)(h,d.spatialReference,At),d=v}this._editGeometryOperations=(0,S.pC)(d)?He.c.fromGeometry(d,n.state.viewingMode):new He.c(new Fe.XE("polygon",(0,Mt.Y6)(!0,!1,n.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",v=>{this._makeDirty(null!=v.addedVertices||null!=v.removedVertices),this._internalGeometryChange=!0,h.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const h=[];return this.forEachVertex(n=>{h.push(n)}),h}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const h=this._editGeometry.components[0].getLastVertex();if((0,S.pC)(h))return this._editGeometry.coordinateHelper.vectorToPoint(h.pos)}return null}getVertex(h){if(!this.constructed||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const n=this._editGeometry.components[0].vertices[0];let d=n;do{if(d.index===h)return d;d=d.rightEdge.rightVertex}while(d!==n&&null!=d);return null}getVertexPositionAsPoint(h){return this._editGeometry.coordinateHelper.vectorToPoint(h.pos)}getVertexPositionAsPointFromIndex(h){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(h).pos)}forEachVertex(h){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(h)}forEachVertexPosition(h){const n=this._editGeometry.coordinateHelper;this.forEachVertex((d,v)=>{n.vectorToPoint(d.pos,Ze),h(Ze,v)})}clear(){(0,S.pC)(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(h){if(!this.constructed)return null;if(0===this._editGeometry.components.length){const d=(0,S.Wg)(this.view);this._editGeometry.components.push(new Fe.wA(d.spatialReference,d.state.viewingMode))}const n=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(h));return this.emit("change"),n}close(){if(!this.constructed||0===this._editGeometry.components.length)return null;const h=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),h}ensureContains(h,n=""){let d=!1;if(this._editGeometry.components.forEach(v=>{v.iterateVertices(y=>{y===h&&(d=!0)})}),!d)throw new Error(`vertex doesnt exist ${n}`);return d}setVertexPosition(h,n){if(!this.constructed)return null;const d=this._editGeometryOperations.setVertexPosition(h,this._editGeometry.coordinateHelper.pointToVector(n));return this.emit("change"),d}equals(h){if(this.numVertices!==h.numVertices)return!1;let n=!0;return this.forEachVertexPosition((d,v)=>{const y=h.getVertexPositionAsPointFromIndex(v);d.equals(y)||(n=!1)}),!!n}};(0,P._)([(0,b.Cb)({value:null})],K.prototype,"areaMeasurement",null),(0,P._)([(0,b.Cb)({value:null})],K.prototype,"view",null),(0,P._)([(0,b.Cb)()],K.prototype,"isValidPolygon",null),(0,P._)([(0,b.Cb)()],K.prototype,"extent",null),(0,P._)([(0,b.Cb)()],K.prototype,"spatialReference",null),(0,P._)([(0,b.Cb)()],K.prototype,"numVertices",null),K=(0,P._)([(0,q.j)(Ne)],K);const Ze=new St.Z;var le=L(91558),J=(L(52515),L(51819)),Ke=(L(8314),L(84600)),Ye=L(28347),Vt=L(43703),fe=L(68063),de=L(87469),ye=L(993),bt=L(53928),Dt=L(52107),Y=L(40723),Le=L(16396),Xe=L(13934),Rt=L(60881),Ce=L(5894),$e=L(60909),wt=L(57623),Gt=L(651),Tt=L(91056),Et=L(39114),Ue=L(88569),Ot=L(12407),_e=L(44835),Ut=L(8549),Se=L(67969),Pe=L(2078);class Me extends Tt.A{initializeProgram(n){return new Ot.$(n.rctx,Me.shader.get().build(this.configuration),Et.i)}_setPipelineState(n){const d=this.configuration,v=n===_e.A.NONE,y=n===_e.A.FrontFace;return(0,Pe.sm)({blending:d.transparent?v?xt:(0,Ue.j7)(n):null,depthTest:{func:(0,Ue.Bh)(n)},depthWrite:v?d.writeDepth&&Pe.LZ:(0,Ue.K5)(n),colorWrite:Pe.BK,polygonOffset:v||y?d.polygonOffset&&zt:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}Me.shader=new Gt.J(Ut.C,()=>L.e(2558).then(L.bind(L,2558)));const zt={factor:0,units:-25},xt=(0,Pe.wK)(Se.zi.SRC_ALPHA,Se.zi.ONE,Se.zi.ONE_MINUS_SRC_ALPHA,Se.zi.ONE_MINUS_SRC_ALPHA);var se=L(87601),It=L(41528);class k extends It.W{constructor(){super(...arguments),this.transparencyPassType=_e.A.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}(0,P._)([(0,se.o)({count:_e.A.COUNT})],k.prototype,"transparencyPassType",void 0),(0,P._)([(0,se.o)()],k.prototype,"transparent",void 0),(0,P._)([(0,se.o)()],k.prototype,"writeDepth",void 0),(0,P._)([(0,se.o)()],k.prototype,"polygonOffset",void 0),(0,P._)([(0,se.o)()],k.prototype,"hasMultipassTerrain",void 0),(0,P._)([(0,se.o)()],k.prototype,"cullAboveGround",void 0);class Wt extends Y.F5{constructor(n){super(n,new Bt),this._configuration=new k}dispose(){}getConfiguration(n,d){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=d.transparencyPassType,this._configuration.hasMultipassTerrain=d.multipassTerrain.enabled,this._configuration.cullAboveGround=d.multipassTerrain.cullAboveGround,this._configuration}intersect(n,d,v,y,C,_,M){return(0,wt.Bw)(n,d,y,C,_,void 0,M)}requiresSlot(n,d){return!(d!==Xe.H.Color&&d!==Xe.H.Alpha||n!==(this.parameters.transparent?this.parameters.writeDepth?Ce.r.TRANSPARENT_MATERIAL:Ce.r.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:Ce.r.OPAQUE_MATERIAL)&&n!==Ce.r.DRAPED_MATERIAL)}createGLMaterial(n){return new jt(n)}createBufferWriter(){return new $e.G_($e.W1)}}class jt extends Rt.Z{beginSlot(n){return this.ensureTechnique(Me,n)}}class Bt extends Y.Mt{constructor(){super(...arguments),this.size=(0,pe.f)(1,1),this.color1=(0,ae.f)(.75,.75,.75,1),this.color2=(0,ae.f)(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Ft extends bt._{constructor(n){super(n),this._checkerBoardMaterial=null,this._renderOccluded=Y.yD.OccludeAndTransparent,this._geometry=null,this._size=(0,pe.f)(1,1),this._color1=(0,ae.f)(1,.5,0,.5),this._color2=(0,ae.f)(1,1,1,.5),this.applyProps(n)}get renderOccluded(){return this._renderOccluded}set renderOccluded(n){n!==this._renderOccluded&&(this._renderOccluded=n,this._updateMaterial())}get geometry(){return this._geometry}set geometry(n){this._geometry=n,this._geometryChanged()}get size(){return this._size}set size(n){(0,Z.c)(this._size,n),this._updateMaterial()}get color1(){return this._color1}set color1(n){(0,ye.g)(n,this._color1)||((0,ye.c)(this._color1,n),this._updateMaterial())}get color2(){return this._color2}set color2(n){(0,ye.g)(n,this._color2)||((0,ye.c)(this._color2,n),this._updateMaterial())}_updateMaterial(){(0,S.pC)(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Wt({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(n){(0,S.pC)(this._checkerBoardMaterial)&&n(this._checkerBoardMaterial)}createGeometries(n){if((0,S.Wi)(this._geometry)||(0,S.Wi)(this._checkerBoardMaterial))return;const d=Ht;(0,Ye.B)(d,this.transform);const v=this._geometry,y=[],C=(0,R.c)();v.position.forEach(A=>{(0,D.b)(C,A,d),y.push(C[0],C[1],C[2])});const _=[];v.uv.forEach(A=>{_.push(A[0],A[1])});const M=new Dt.Z([[Le.T.POSITION,{size:3,data:y,exclusive:!0}],[Le.T.UV0,{size:2,data:_,exclusive:!0}]],[[Le.T.POSITION,v.triangleIndices],[Le.T.UV0,v.triangleIndices]]);n.addGeometry(M,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const Ht=(0,R.c)();var ce=L(64770),Nt=L(54889),Zt=L(56683),Kt=L(41840);let H=class extends ne.Z{constructor(h){super(h),this._handles=new Be.Z,this._params={pathLineColor:le.Z.toUnitRGBA((0,J.e9)()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:le.Z.toUnitRGBA((0,J.e9)()),perimeterLineWidth:2,projectionLineColor:le.Z.toUnitRGBA((0,J.e9)()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:le.Z.toUnitRGBA((0,J.e9)(.5)),areaColor2:le.Z.toUnitRGBA((0,J.RN)(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=(0,R.c)(),this._originTransform=(0,Vt.c)(),this._cursorPositionRenderSpace=(0,R.c)(),this.messages=null,this.viewData=Yt,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const{analysisViewData:h,_params:n,view:d}=this;this._path=new de.r({view:d,attached:!0,width:n.pathLineWidth,color:n.pathLineColor,polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent}),this._intersectedPath=new de.r({view:d,attached:!0,width:n.pathLineWidth,color:n.intersectingLineColor,polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent}),this._perimeter=new de.r({view:d,attached:!0,width:n.perimeterLineWidth,color:n.perimeterLineColor,polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent}),this._intersectedPerimeter=new de.r({view:d,attached:!0,width:n.perimeterLineWidth,color:n.intersectingLineColor,polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent}),this._projectionLines=new de.r({view:d,attached:!0,width:n.projectionLineWidth,color:n.projectionLineColor,stipplePattern:(0,Nt.z5)(n.projectionLineStippleSize),polygonOffset:!0,renderOccluded:Y.yD.OccludeAndTransparent}),this._measurementArea=new Ft({view:d,attached:!0,color1:n.areaColor1,color2:n.areaColor2});const v={attached:!0,backgroundColor:(0,J.hU)(.6),textColor:(0,J.uu)(),view:d};this._areaLabel=new fe.Kc({...v,fontSize:ie.Large}),this._pathLengthLabel=new fe.Kc({...v,fontSize:ie.Small}),this._cursorSegmentLengthLabel=new fe.Kc({...v,fontSize:ie.Small}),this._perimeterLengthLabel=new fe.Kc({...v,fontSize:ie.Small}),this._handles.add([(0,B.YP)(()=>[h.mode,this.visible,h.unit,h.measurementData,h.cursorPoint],()=>this._update(),B.tX),(0,B.YP)(()=>d.state?.camera,()=>this._updateLabels(),B.tX),(0,Zt.qe)(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=(0,S.SC)(this._measurementArea),this._path=(0,S.SC)(this._path),this._intersectedPath=(0,S.SC)(this._intersectedPath),this._perimeter=(0,S.SC)(this._perimeter),this._intersectedPerimeter=(0,S.SC)(this._intersectedPerimeter),this._areaLabel=(0,S.SC)(this._areaLabel),this._pathLengthLabel=(0,S.SC)(this._pathLengthLabel),this._cursorSegmentLengthLabel=(0,S.SC)(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=(0,S.SC)(this._perimeterLengthLabel),this._projectionLines=(0,S.SC)(this._projectionLines),this._handles=(0,S.SC)(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:h},analysisViewData:n}=this;(0,S.Wi)(h)||(this._updateViewData(h,n.path,n.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(h,n,d){const v=n.isValidPolygon,y="geodesic"===h.actualMeasurementMode,C=y?h.geodesicArea:h.area;let _=1;if(C){const A=this._toPreferredAreaUnit(C,this.analysisViewData.unit);_=(0,oe.sk)(Math.sqrt(A.value)/Math.sqrt(300)),_*=Math.sqrt((0,he.En)(1,A.unit,"square-meters")),_/=h.unitNormalizer.normalizeDistance(1)}this._set("viewData",{validMeasurement:v,path:n,pathVersion:n.version,cursorPoint:d,measurementData:h,mode:h.actualMeasurementMode,positionsGeographic:h.positionsGeographic,positionsRenderCoords:h.positionsRenderCoords,positionsProjected:h.positionsProjectedWorldCoords,positionsFittedRenderCoords:h.positionsFittedRenderCoords,intersectingSegments:y?h.geodesicIntersectingSegments:h.intersectingSegments,triangleIndices:y?h.geodesicTriangleIndices:h.triangleIndices,fittingMode:h.fittingMode,areaCentroid:y?h.geodesicAreaCentroidRenderCoords:h.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:v?0:n.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:_})}_updateOrigin(){(0,Te.H)(this.viewData.positionsRenderCoords,this._origin),(0,Ye.f)(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(h){const n=this.viewData,d=n.path,v=this.view.renderCoordsHelper.spatialReference,y=n.mode,C=[],_=[],M=[],A=n.validMeasurement?d.numVertices:d.numVertices-1;for(let V=0;V<A;++V){const w=n[h][V],G=n[h][(V+1)%d.numVertices];let O=null;switch(y){case"euclidean":O=new ce.y(w,G);break;case"geodesic":O=new ce.u(w,G,v)}n.intersectingSegments.has(V)?M.push(O):_.push(O),C.push(O)}return{all:C,nonIntersecting:_,intersecting:M}}_updatePathSegments(){const{view:{renderCoordsHelper:h},viewData:n,visible:d}=this,v=this._createSegments("positionsRenderCoords"),{cursorPoint:y,mode:C,path:_}=n,M=!_.isValidPolygon,A=h.spatialReference;if(this._cursorSegment=null,_.numVertices>0&&M&&(0,S.pC)(y)&&h.toRenderCoords(y,this._cursorPositionRenderSpace)){const V=n.positionsRenderCoords[_.numVertices-1],w=this._cursorPositionRenderSpace;let G=null;switch(C){case"euclidean":G=new ce.y(V,w);break;case"geodesic":G=new ce.u(V,w,A)}v.nonIntersecting.push(G),this._cursorSegment=G}this._path.setGeometryFromSegments(v.nonIntersecting,this._origin),this._path.visible=d,this._intersectedPath.setGeometryFromSegments(v.intersecting,this._origin),this._intersectedPath.visible=d,this._pathSegments=v.all}_updatePerimeterSegments(){const h=this.visible&&"euclidean"===this.viewData.mode,n=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(n.nonIntersecting,this._origin),this._perimeter.visible=h,this._intersectedPerimeter.setGeometryFromSegments(n.intersecting,this._origin),this._intersectedPerimeter.visible=h,this._perimeterSegments=n.all}_updateArea(){const h=this.viewData;switch(h.mode){case"euclidean":this._updateAreaEuclidean(h);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(h){const n=this.visible;h.validMeasurement&&0===h.intersectingSegments.size&&h.triangleIndices?(this._measurementArea.geometry={uv:h.positionsProjected,position:h.positionsFittedRenderCoords,triangleIndices:h.triangleIndices},this._measurementArea.size=[h.checkerSize,h.checkerSize],this._measurementArea.visible=n):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const h=this.viewData,n=this.visible,d=h.path;if(d.numVertices>0&&h.validMeasurement&&"euclidean"===h.mode){const y=[];for(let C=0;C<d.numVertices;++C){const _=(0,R.c)();(0,D.b)(_,h.positionsRenderCoords[C],this._origin);const M=(0,R.c)();(0,D.b)(M,h.positionsFittedRenderCoords[C],this._origin),y.push([_,M])}this._projectionLines.geometry=y,this._projectionLines.visible=n}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:h}=this,{measurementData:n,mode:d,path:v}=h;if(!v)return;const y=!v.isValidPolygon,C=this.visible,_=this._formatAreaLabel(this.messages,"geodesic"===d?n.geodesicArea:n.area,this.analysisViewData.unit);(0,S.pC)(_)?(this._areaLabel.geometry={type:"point",point:h.areaCentroid},this._areaLabel.text=_,this._areaLabel.visible=h.validMeasurement&&0===h.intersectingSegments.size&&C):this._areaLabel.visible=!1,this._set("areaLabel",(0,S.Wg)(_));const M=this._formatLengthLabel(this.messages,"geodesic"===d?n.geodesicPathLength:n.pathLength,this.analysisViewData.unit);if((0,S.pC)(M)&&h.pathLengthLabelSegmentIndex>=0&&h.pathLengthLabelSegmentIndex<this._pathSegments.length){const O=this._pathSegments[h.pathLengthLabelSegmentIndex],z=(0,S.pC)(this._cursorSegment)?this._cursorSegment:Xt;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:O,right:z},this._pathLengthLabel.text=M,this._pathLengthLabel.visible=y&&v.numVertices>0&&C}else this._pathLengthLabel.visible=!1;const A="geodesic"===d?h.measurementData.geodesicCursorSegmentLength:h.measurementData.cursorSegmentLength;if((0,S.pC)(A)){const O=this._formatLengthLabel(this.messages,A,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=(0,S.pC)(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=(0,S.Wg)(O),this._cursorSegmentLengthLabel.visible=y&&0!==A.value&&C}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const V="geodesic"===h.mode,G=this._formatLengthLabel(this.messages,V?n.geodesicPathLength:n.perimeterLength,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",(0,S.Wg)(G)),h.validMeasurement&&0===h.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=(0,S.Wg)(G),this._perimeterLengthLabel.visible=!0;let O=!0;for(let z=0;z<h.path.numVertices;++z){const j=(h.perimeterLengthLabelSegmentIndex+z)%h.path.numVertices;if(O=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:V?this._pathSegments[j]:this._perimeterSegments[j],sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;O=!1}this._perimeterLengthLabel.visible=O&&C}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(h,n){return(0,W.nn)(h,this._preferredAreaUnit(h,n))}_preferredAreaUnit(h,n){switch(n){case"metric":return(0,he.tQ)(h.value,h.unit);case"imperial":return(0,he.Yl)(h.value,h.unit);default:return n}}_preferredLengthUnit(h,n){const d=this._deriveLengthUnitFromAreaUnit(n);switch(d){case"metric":return(0,he.KU)(h.value,h.unit);case"imperial":return(0,he.FN)(h.value,h.unit);default:return d}}_deriveLengthUnitFromAreaUnit(h){switch(h){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(h,n,d){return h&&n&&(0,Ke.VG)(h,n,this._preferredAreaUnit(n,d))}_formatLengthLabel(h,n,d){return h&&n&&(0,Ke.VG)(h,n,this._preferredLengthUnit(n,d))}_updateMessageBundle(){this.loadingMessages=!0,(0,Kt.ME)("esri/core/t9n/Units").then(h=>{this.messages=h,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var ie,h;(0,P._)([(0,b.Cb)()],H.prototype,"view",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"messages",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"analysis",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"viewData",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"analysisViewData",void 0),(0,P._)([(0,b.Cb)({readOnly:!0})],H.prototype,"areaLabel",void 0),(0,P._)([(0,b.Cb)({readOnly:!0})],H.prototype,"perimeterLengthLabel",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"loadingMessages",void 0),(0,P._)([(0,b.Cb)()],H.prototype,"visible",null),H=(0,P._)([(0,q.j)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],H),(h=ie||(ie={}))[h.Small=12]="Small",h[h.Large=16]="Large";const Yt={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Xt=new ce.y((0,R.c)(),(0,R.c)());let U=class extends((0,ue.p)(ne.Z)){constructor(h){super(h),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=ee.e.Auto}initialize(){const{analysis:h,view:n}=this;this.path=new K({view:n,areaMeasurement:h}),this.analysisVisualization=new H({view:n,analysis:h,analysisViewData:this}),this.analysisController=new te({view:n,analysis:h,analysisViewData:this})}destroy(){this.analysisController=(0,S.SC)(this.analysisController),this.analysisVisualization=(0,S.SC)(this.analysisVisualization),this.path.destroy()}get updating(){return!!this.analysisVisualization?.loadingMessages}get result(){const{measurementData:h}=this;return(0,S.Wi)(h)?{area:null,mode:null,perimeter:null}:"euclidean"===h.actualMeasurementMode?{area:h.area,perimeter:h.perimeterLength,mode:"euclidean"}:{area:h.geodesicArea,perimeter:h.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return(0,S.Pt)(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};(0,P._)([(0,b.Cb)({readOnly:!0})],U.prototype,"type",void 0),(0,P._)([(0,b.Cb)({constructOnly:!0,nonNullable:!0})],U.prototype,"analysis",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"updating",null),(0,P._)([(0,b.Cb)()],U.prototype,"analysisVisualization",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"analysisController",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"result",null),(0,P._)([(0,b.Cb)()],U.prototype,"measurementData",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"viewData",null),(0,P._)([(0,b.Cb)()],U.prototype,"validMeasurement",null),(0,P._)([(0,b.Cb)()],U.prototype,"path",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"lastDraggedVertex",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"cursorPoint",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"mode",void 0),(0,P._)([(0,b.Cb)()],U.prototype,"unit",null),(0,P._)([(0,b.Cb)(we.Y)],U.prototype,"_defaultUnit",void 0),U=(0,P._)([(0,q.j)("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],U);const $t=U}}]);