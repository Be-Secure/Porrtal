"use strict";(self.webpackChunka_porrtal_io_app=self.webpackChunka_porrtal_io_app||[]).push([[9217],{39217:(ke,ne,m)=>{m.r(ne),m.d(ne,{default:()=>xr});var s=m(17626),pe=m(73281),f=m(62208),ce=m(99959),me=m(10699),l=m(77712),A=(m(85931),m(90912)),_=m(76898),T=m(99433),de=m(44917),w=m(15861),et=m(29132),ft=m(88879),Pe=m(90885),j=m(84792),U=m(26584),Te=m(2076),z=m(58817),tt=m(63290),vt=m(32917),Rt=m(21726),E=m(68653),Re=m(13812),De=m(25982),Q=m(86810),I=m(40495);const bt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var ae=m(70208),St=m(65468),Ct=m(88115);const xt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},It={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},wt=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function rt(n){return wt.has(n.type)}function Ne(n,r){if(!n||!r)return(0,z.d9)(n||r);const a=(0,z.d9)(n);if(r.rasterFunctionDefinition){const e=r.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),it(a.rasterFunctionDefinition.arguments,r)}else"none"!==r.functionName.toLowerCase()&&(nt(a.functionArguments).Raster=r);return a}function it(n,r){for(const a in n)"raster"===a.toLowerCase()&&("RasterFunctionVariable"===n[a].type?(n[a]=r.rasterFunctionDefinition,n[a].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===n[a].type&&it(n[a].arguments,r))}function $(n){const r=(0,z.d9)(bt[n.functionName+"Function"]),a=n.functionArguments;for(const e in a)"raster"===e.toLowerCase()?(r.arguments[e]=$(a[e]),r.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(r.arguments[e].value=Vt(a[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=a[e];return r}function nt(n){const r=n?.Raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?nt(r.functionArguments):n}const ye={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function be(n,r){const a=xt[String(r).toLowerCase()];return a&&n.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),n}function st(n){if((0,f.Wi)(n))return;const{fields:r}=n,a=r&&r.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return a&&a.name}function jt(n){const r=[];return n.forEach(a=>{const e=a;if(Array.isArray(e))r.push(e);else{if(null==e.min||null==e.max)return;r.push([e.min,e.max,e.avg||0,e.stddev||0])}}),r}function Vt(n){const r=[],a=[];return n.forEach(e=>{r.push(e[0]),a.push((0,ae.io)([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:a}}var Oe,At=m(66656),q=m(72642);const he=(0,Te.w)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Me=(0,Te.w)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let J=Oe=class extends Q.wq{constructor(n){super(n),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(n,r){return null!=r.ascending?r.ascending:null==r.sortAscending||r.sortAscending}readMethod(n,r){return function _t(n){let r;switch(n?n.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":r="esriMosaicAttribute";break;case"lockraster":r="esriMosaicLockRaster";break;case"center":r="esriMosaicCenter";break;case"northwest":r="esriMosaicNorthwest";break;case"nadir":r="esriMosaicNadir";break;case"viewpoint":r="esriMosaicViewpoint";break;case"seamline":r="esriMosaicSeamline";break;default:r="esriMosaicNone"}return Me.fromJSON(r)}(r.mosaicMethod||r.defaultMosaicMethod)}readOperation(n,r){const a=r.mosaicOperation,e=r.mosaicOperator&&r.mosaicOperator.toLowerCase(),t=a||(e?he.toJSON(e):null);return he.fromJSON(t)||"first"}castSortValue(n){return null==n||"string"==typeof n||"number"==typeof n?n:`${n}`}clone(){return new Oe({ascending:this.ascending,itemRenderingRule:(0,z.d9)(this.itemRenderingRule),lockRasterIds:(0,z.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,z.d9)(this.multidimensionalDefinition),objectIds:(0,z.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,z.d9)(this.viewpoint),where:this.where})}};(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],J.prototype,"ascending",void 0),(0,s._)([(0,E.r)("ascending",["ascending","sortAscending"])],J.prototype,"readAscending",null),(0,s._)([(0,l.Cb)({type:I.Z,json:{write:!0}})],J.prototype,"itemRenderingRule",void 0),(0,s._)([(0,l.Cb)({type:[A.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],J.prototype,"lockRasterIds",void 0),(0,s._)([(0,l.Cb)({type:String,json:{type:Me.jsonValues,write:{target:"mosaicMethod",writer:Me.write}}})],J.prototype,"method",void 0),(0,s._)([(0,E.r)("method",["mosaicMethod","defaultMosaicMethod"])],J.prototype,"readMethod",null),(0,s._)([(0,l.Cb)({type:[De.Z],json:{write:!0}})],J.prototype,"multidimensionalDefinition",void 0),(0,s._)([(0,l.Cb)({type:[A.z8],json:{name:"fids",write:!0}})],J.prototype,"objectIds",void 0),(0,s._)([(0,l.Cb)({json:{type:he.jsonValues,read:{reader:he.read},write:{target:"mosaicOperation",writer:he.write}}})],J.prototype,"operation",void 0),(0,s._)([(0,E.r)("operation",["mosaicOperation","mosaicOperator"])],J.prototype,"readOperation",null),(0,s._)([(0,l.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],J.prototype,"sortField",void 0),(0,s._)([(0,l.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],J.prototype,"sortValue",void 0),(0,s._)([(0,At.p)("sortValue")],J.prototype,"castSortValue",null),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],J.prototype,"viewpoint",void 0),(0,s._)([(0,l.Cb)({type:String,json:{write:!0}})],J.prototype,"where",void 0),J=Oe=(0,s._)([(0,_.j)("esri.layers.support.MosaicRule")],J);const G=J;var H=m(2939);let D=class extends Q.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(n,r,a){this.layer.version<10.3||(r[a]=n)}get bandIds(){return this.layer.bandIds}set bandIds(n){this.layer&&(this.layer.bandIds=n)}get compressionQuality(){return this.layer?.compressionQuality}set compressionQuality(n){this.layer&&(this.layer.compressionQuality=n)}writeCompressionQuality(n,r,a){this.format&&this.format.toLowerCase().includes("jpg")&&null!=n&&(r[a]=n)}get compressionTolerance(){return this.layer?.compressionTolerance}set compressionTolerance(n){this.layer&&(this.layer.compressionTolerance=n)}writeCompressionTolerance(n,r,a){"lerc"===this.format&&null!=n&&(r[a]=n)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer?.interpolation}set interpolation(n){this.layer&&(this.layer.interpolation=n)}get noData(){return this.layer?.noData}set noData(n){this.layer&&(this.layer.noData=n)}get noDataInterpretation(){return this.layer?.noDataInterpretation}set noDataInterpretation(n){this.layer&&(this.layer.noDataInterpretation=n)}writeLercVersion(n,r,a){"lerc"===this.format&&this.layer.version>=10.5&&(r[a]=n)}get version(){const n=this.layer;return n.commitProperty("bandIds"),n.commitProperty("format"),n.commitProperty("compressionQuality"),n.commitProperty("compressionTolerance"),n.commitProperty("interpolation"),n.commitProperty("noData"),n.commitProperty("noDataInterpretation"),n.commitProperty("mosaicRule"),n.commitProperty("renderingRule"),n.commitProperty("adjustAspectRatio"),n.commitProperty("pixelFilter"),n.commitProperty("definitionExpression"),n.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(n){this._set("version",n)}get mosaicRule(){const n=this.layer;let r=n.mosaicRule;const a=n.definitionExpression;return r?a&&a!==r.where&&(r=r.clone(),r.where=a):a&&(r=new G({where:a})),r}get renderingRule(){const n=this.layer;let r=n.renderingRule;const a=n.pixelFilter,e=!n.format||n.format.includes("jpg")||n.format.includes("png");r=this._addResampleRasterFunction(r);const t=n.multidimensionalSubset?.areaOfInterest;return t&&(r=this._addClipFunction(r,t)),e&&!a&&"vector-field"!==n.renderer?.type&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(n){const r=this.layer,{rasterInfo:a,renderer:e}=r;return n=n||r.renderingRule,e&&rt(e)?Ne(function Ft(n,r){switch(r=r||{},n.type){case"raster-stretch":return function Dt(n,r){const a=r.convertToRFT,e=new I.Z;e.functionName="Stretch";const t=ye[St.v.toJSON(n.stretchType)],i="u8",o={StretchType:t,Statistics:jt(n.statistics),DRA:n.dynamicRangeAdjustment,UseGamma:n.useGamma,Gamma:n.gamma,ComputeGamma:n.computeGamma};if(null!=n.outputMin&&(o.Min=n.outputMin),null!=n.outputMax&&(o.Max=n.outputMax),t===ye.standardDeviation?(o.NumberOfStandardDeviations=n.numberOfStandardDeviations,e.outputPixelType=i):t===ye.percentClip?(o.MinPercent=n.minPercent,o.MaxPercent=n.maxPercent,e.outputPixelType=i):t===ye.minMax?e.outputPixelType=i:t===ye.sigmoid&&(o.SigmoidStrengthLevel=n.sigmoidStrengthLevel),e.functionArguments=o,e.variableName="Raster",n.colorRamp){const u=n.colorRamp,p=new I.Z;if(a)p.functionArguments={ColorRamp:(0,ae.pM)(u)};else{const d=(0,ae.Uh)(u);if(d)p.functionArguments={colorRamp:d};else if(!r.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const c=n.colorRamp.toJSON();"algorithmic"===c.type?c.algorithm=c.algorithm||"esriCIELabAlgorithm":"multipart"===c.type&&c.colorRamps?.length&&c.colorRamps.forEach(y=>y.algorithm=y.algorithm||"esriCIELabAlgorithm"),p.functionArguments={colorRamp:c}}else p.functionArguments={Colormap:(0,ae.Jw)(u,256)}}return p.variableName="Raster",p.functionName="Colormap",p.functionArguments.Raster=e,a?new I.Z({rasterFunctionDefinition:$(p)}):p}return a?new I.Z({rasterFunctionDefinition:$(e)}):e}(n,r);case"class-breaks":return function Nt(n,r){const a=[],e=[],t=[],i=[],{pixelType:u,rasterAttributeTable:p}=r,d=(0,f.Wi)(p)?null:p.features,c=st(p);if(d&&Array.isArray(d)&&n.classBreakInfos){n.classBreakInfos.forEach((C,x)=>{const F=C.symbol.color;let S;F.a&&d.forEach(b=>{S=b.attributes[n.field],(S>=C.minValue&&S<C.maxValue||x===n.classBreakInfos.length-1&&S>=C.minValue)&&i.push([b.attributes[c],F.r,F.g,F.b])})});const g=u?be(i,u):i,R=new I.Z;return R.functionName="Colormap",R.functionArguments={},R.functionArguments.Colormap=g,R.variableName="Raster",r.convertToRFT?new I.Z({rasterFunctionDefinition:$(R)}):R}n.classBreakInfos.forEach((g,R)=>{const C=g.symbol&&g.symbol.color;C.a?(a.push(0===R?g.minValue:g.minValue+1e-6,g.maxValue+1e-6),e.push(R),i.push([R,C.r,C.g,C.b])):t.push(g.minValue,g.maxValue)});const y=u?be(i,u):i,h=new I.Z;h.functionName="Remap",h.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const v=new I.Z;return v.functionName="Colormap",v.functionArguments={Colormap:y,Raster:h},r.convertToRFT?new I.Z({rasterFunctionDefinition:$(v)}):v}(n,r);case"unique-value":return function Ot(n,r){const a=[],{pixelType:e,rasterAttributeTable:t}=r,i=(0,f.Wi)(t)?null:t.features,o=st(t),u=n.defaultSymbol?.color?.toRgb(),p=n.uniqueValueInfos;if(p)if(i){const y=new Map;p.forEach(v=>{const g=v.value,R=v.symbol.color;null!=g&&R&&R.a&&y.set(String(g),R.toRgb())});const h=n.field;i.forEach(({attributes:v})=>{const g=String(v[h]),R=v[o];if(y.has(g)){const C=y.get(g);a.push([R,...C])}else u&&a.push([R,...u])})}else for(let y=0;y<p.length;y++){const h=p[y],v=h.symbol.color,g=+h.value;if(v?.a){if(isNaN(g))return null;a.push([g,v.r,v.g,v.b])}}const d=e&&a.length>0?be(a,e):a,c=new I.Z;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=d,c.variableName="Raster",r.convertToRFT?new I.Z({rasterFunctionDefinition:$(c)}):c}(n,r);case"raster-colormap":return function Mt(n,r){const a=n.extractColormap();if(!a||0===a.length)return;const{pixelType:e}=r,t=e?be(a,e):a,i=new I.Z;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=t,r.convertToRFT?new I.Z({rasterFunctionDefinition:$(i)}):i}(n,r);case"vector-field":return function Pt(n,r){const a=new I.Z;a.functionName="VectorFieldRenderer";const{dataType:e,bandProperties:t}=r,i="vector-uv"===e;let o,u;t&&2===t.length&&(o=t.map(h=>h.BandName.toLowerCase()).indexOf("magnitude"),u=t.map(h=>h.BandName.toLowerCase()).indexOf("direction")),-1!==o&&null!==o||(o=0,u=1);const p="arithmetic"===n.rotationType?1:2,d="flow-from"===n.flowRepresentation?0:1,c=n.visualVariables?n.visualVariables.find(h=>"Magnitude"===h.field):new Ct.Z,y={magnitudeBandID:o,directionBandID:u,isUVComponents:i,referenceSystem:p,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:It[n.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return a.functionArguments=y,r.convertToRFT?new I.Z({rasterFunctionDefinition:$(a)}):a}(n,r);case"raster-shaded-relief":return function Tt(n,r){const a=r.convertToRFT;if("elevation"!==r.dataType&&("generic"!==r.dataType||1!==r.bandCount||"s16"!==r.pixelType&&"s32"!==r.pixelType&&"f32"!==r.pixelType&&"f64"!==r.pixelType))return new I.Z;const e=new I.Z;e.functionName="Hillshade";const t="traditional"===n.hillshadeType?0:1,i="none"===n.scalingType?1:3,o={HillshadeType:t,SlopeType:i,ZFactor:n.zFactor};return 0===t&&(o.Azimuth=n.azimuth,o.Altitude=n.altitude),3===i&&(o.PSPower=n.pixelSizePower,o.PSZFactor=n.pixelSizeFactor),e.functionArguments=o,e.variableName="Raster",n.colorRamp&&(e.functionName="ShadedRelief",a?o.ColorRamp=(0,ae.pM)(n.colorRamp):o.Colormap=(0,ae.Jw)(n.colorRamp,256)),a?new I.Z({rasterFunctionDefinition:$(e)}):e}(n,r);case"flow":throw new Error("Unsupported rendering rule.")}}(e,{rasterAttributeTable:a.attributeTable,pixelType:a.pixelType,dataType:a.dataType,bandProperties:a.keyProperties?.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!!n?.rasterFunctionDefinition,bandCount:a.bandCount}),n):n}_addResampleRasterFunction(n){if("vector-field"!==this.layer.renderer?.type||"Resample"===n?.functionName)return n;let e=new I.Z({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:this.layer.serviceRasterInfo.pixelSize}});return e=n?.rasterFunctionDefinition?new I.Z({rasterFunctionDefinition:$(e)}):e,Ne(e,n)}_addClipFunction(n,r){return Ne(new I.Z({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}}),n)}};(0,s._)([(0,l.Cb)()],D.prototype,"layer",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,T.c)("adjustAspectRatio")],D.prototype,"writeAdjustAspectRatio",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"bandIds",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"compression",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"compressionQuality",null),(0,s._)([(0,T.c)("compressionQuality")],D.prototype,"writeCompressionQuality",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"compressionTolerance",null),(0,s._)([(0,T.c)("compressionTolerance")],D.prototype,"writeCompressionTolerance",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"format",null),(0,s._)([(0,l.Cb)({type:String,json:{read:{reader:H.c.read},write:{writer:H.c.write}}})],D.prototype,"interpolation",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"noData",null),(0,s._)([(0,l.Cb)({type:String,json:{read:{reader:H.k.read},write:{writer:H.k.write}}})],D.prototype,"noDataInterpretation",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"pixelType",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"lercVersion",void 0),(0,s._)([(0,T.c)("lercVersion")],D.prototype,"writeLercVersion",null),(0,s._)([(0,l.Cb)({type:Number})],D.prototype,"version",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"mosaicRule",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],D.prototype,"renderingRule",null),D=(0,s._)([(0,_.j)("esri.layers.mixins.ExportImageServiceParameters")],D);var k=m(36255),Zt=m(60466),Et=m(11354),je=m(25688),at=m(79645),Jt=m(9548),Se=m(79781),Ve=m(8614),Lt=m(30994),Ce=m(8341),zt=m(99033),Ae=m(93555),Z=m(2618),ee=m(65234);let oe=class extends Q.wq{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],oe.prototype,"north",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],oe.prototype,"up",void 0),(0,s._)([(0,l.Cb)({type:ee.Z,json:{write:!0}})],oe.prototype,"spatialReference",void 0),oe=(0,s._)([(0,_.j)("esri.rest.support.ImageAngleResult")],oe);const Ut=oe;var ot=m(17253);let K=class extends Q.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"catalogItemVisibilities",void 0),(0,s._)([(0,l.Cb)({type:ot.default,json:{write:!0}})],K.prototype,"catalogItems",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],K.prototype,"location",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"name",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"objectId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"processedValues",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"properties",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],K.prototype,"value",void 0),K=(0,s._)([(0,_.j)("esri.rest.support.ImageIdentifyResult")],K);const Ht=K;let xe=class extends Q.wq{constructor(){super(...arguments),this.geometries=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],xe.prototype,"geometries",void 0),xe=(0,s._)([(0,_.j)("esri.rest.support.ImagePixelLocationResult")],xe);const Qt=xe;let Y=class extends Q.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],Y.prototype,"attributes",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],Y.prototype,"location",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],Y.prototype,"locationId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],Y.prototype,"rasterId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],Y.prototype,"resolution",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],Y.prototype,"pixelValue",void 0),Y=(0,s._)([(0,_.j)("esri.rest.support.ImageSample")],Y);const Gt=Y;let Ie=class extends Q.wq{constructor(){super(...arguments),this.samples=null}};(0,s._)([(0,l.Cb)({type:[Gt],json:{write:!0}})],Ie.prototype,"samples",void 0),Ie=(0,s._)([(0,_.j)("esri.rest.support.ImageSampleResult")],Ie);const Bt=Ie;function lt(n){const r=n?.time;if(r&&(null!=r.start||null!=r.end)){const a=[];null!=r.start&&a.push(r.start),null==r.end||a.includes(r.end)||a.push(r.end),n.time=a.join(",")}}function ut(n,r,a){return _e.apply(this,arguments)}function _e(){return(_e=(0,w.Z)(function*(n,r,a){const e=(0,Z.en)(n),t=r.geometry?[r.geometry]:[],i=yield(0,Ae.aX)(t),o=r.toJSON();lt(o);const u=i&&i[0];(0,f.pC)(u)&&(o.geometry=u.toJSON());const p=(0,Z.cv)({...e.query,f:"json",...o});return(0,Z.lA)(p,a)})).apply(this,arguments)}function Ze(){return(Ze=(0,w.Z)(function*(n,r,a){const e=r.toJSON();(0,f.pC)(e.angleName)&&(e.angleName=e.angleName.join(",")),(0,f.pC)(r.point)&&r.point.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=He(r.point.spatialReference)),(0,f.pC)(r.spatialReference)&&r.spatialReference.imageCoordinateSystem&&(e.spatialReference=ct(r.spatialReference));const t=(0,Z.en)(n),i=(0,Z.cv)({...t.query,f:"json",...e}),o=(0,Z.lA)(i,a),{data:u}=yield(0,j.default)(`${t.path}/computeAngles`,o);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new ee.Z({wkid:0,imageCoordinateSystem:u.spatialReference}):ee.Z.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new Ut(u)})).apply(this,arguments)}function Ee(){return(Ee=(0,w.Z)(function*(n,r,a){const e=r.toJSON(),{geometries:t}=r;if(t)for(let d=0;d<t.length;d++)t[d].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[d].spatialReference=He(t[d].spatialReference));const i=(0,Z.en)(n),o=(0,Z.cv)({...i.query,f:"json",...e}),u=(0,Z.lA)(o,a),{data:p}=yield(0,j.default)(`${i.path}/computePixelLocation`,u);return Qt.fromJSON(p)})).apply(this,arguments)}function Je(){return(Je=(0,w.Z)(function*(n,r,a){const e=yield ut(n,r,a),t=(0,Z.en)(n),{data:i}=yield(0,j.default)(`${t.path}/computeStatisticsHistograms`,e),{statistics:o}=i;return o?.length&&o.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o,histograms:i.histograms}})).apply(this,arguments)}function Le(){return(Le=(0,w.Z)(function*(n,r,a){const e=yield ut(n,r,a),t=(0,Z.en)(n),{data:i}=yield(0,j.default)(`${t.path}/computeHistograms`,e);return{histograms:i.histograms}})).apply(this,arguments)}function ze(){return(ze=(0,w.Z)(function*(n,r,a){const e=r.toJSON();lt(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const t=(yield(0,Ae.aX)(r.geometry))?.[0];(0,f.pC)(t)&&(e.geometry=t.toJSON());const i=(0,Z.en)(n),o=(0,Z.cv)({...i.query,f:"json",...e}),u=(0,Z.lA)(o,a),{data:p}=yield(0,j.default)(`${i.path}/getSamples`,u),d=p?.samples?.map(c=>{const y="NaN"===c.value||""===c.value?null:c.value.split(" ").map(h=>Number(h));return{...c,pixelValue:y}});return Bt.fromJSON({samples:d})})).apply(this,arguments)}function pt(n,r,a){return Ue.apply(this,arguments)}function Ue(){return(Ue=(0,w.Z)(function*(n,r,a){const e=(0,Z.en)(n);return(0,Ae.aX)(r.geometry?[r.geometry]:[]).then(i=>{const o=r.toJSON(),u=i&&i[0];(0,f.pC)(u)&&(o.geometry=JSON.stringify(u.toJSON()));const p=(0,Z.cv)({...e.query,f:"json",...o}),d=(0,Z.lA)(p,a);return(0,j.default)(e.path+"/identify",d)}).then(i=>Ht.fromJSON(i.data))})).apply(this,arguments)}function He(n){const{imageCoordinateSystem:r}=n;if(r){const{id:a,referenceServiceName:e}=r;return null!=a?e?{icsid:a,icsns:e}:{icsid:a}:{ics:r}}return n.toJSON()}function ct(n,r){const a=He(n),{icsid:e,icsns:t,wkid:i}=a;return null!=e?null==t||r?.toLowerCase().includes("/"+t.toLowerCase()+"/")?`0:${e}`:JSON.stringify(a):i?i.toString():JSON.stringify(a)}m(8314),m(15283);var Be,Yt=m(2865),we=(m(59318),m(24263),m(16730),m(37053),m(82054),m(2004)),kt=(m(21674),m(72854)),er=m(37118),Qe=(m(55214),m(24192),m(96854)),tr=(m(87183),m(67736),m(90463)),rr=m(24865),mt=(m(67010),m(6871),m(99208)),ir=m(27497);function Ge(){return(Ge=(0,w.Z)(function*(n,r,a){const e=(0,Z.en)(n),t=(0,Z.cv)({...e?.query,f:"json"}),i=(0,Z.lA)(t,a),o=`${e?.path}/${r}/info`,u=(0,j.default)(`${o}`,i),p=(0,j.default)(`${o}/keyProperties`,i),d=yield Promise.allSettled([u,p]),c="fulfilled"===d[0].status?d[0].value.data:null,y="fulfilled"===d[1].status?d[1].value.data:null;let h=null;c.statistics?.length&&(h=c.statistics.map(b=>({min:b[0],max:b[1],avg:b[2],stddev:b[3]})));const v=we.Z.fromJSON(c.extent),g=Math.ceil(v.width/c.pixelSizeX-.1),R=Math.ceil(v.height/c.pixelSizeY-.1),C=v.spatialReference,x=new q.Z({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:C}),F=c.histograms?.length?c.histograms:null,S=new ir.Z({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new at.Z({width:g,height:R,bandCount:c.bandCount,extent:v,spatialReference:C,pixelSize:x,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:F,keyProperties:y,storageInfo:S})})).apply(this,arguments)}let te=Be=class extends Q.wq{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Be((0,z.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,s._)([(0,l.Cb)({type:[String],json:{name:"angleName",write:!0}})],te.prototype,"angleNames",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],te.prototype,"point",void 0),(0,s._)([(0,l.Cb)({type:ee.Z,json:{write:!0}})],te.prototype,"spatialReference",void 0),(0,s._)([(0,l.Cb)({type:A.z8,json:{write:!0}})],te.prototype,"rasterId",void 0),te=Be=(0,s._)([(0,_.j)("esri.rest.support.ImageAngleParameters")],te);const sr=te;var Ke,We=m(97478),ge=m(91179);let X=Ke=class extends Q.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,ge.Ji)(n),r[a]=n.toJSON())}clone(){return new Ke((0,z.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,s._)([(0,l.Cb)({types:et.qM,json:{read:ge.im}})],X.prototype,"geometry",void 0),(0,s._)([(0,T.c)("geometry")],X.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:G,json:{write:!0}})],X.prototype,"mosaicRule",void 0),(0,s._)([(0,l.Cb)({type:I.Z,json:{write:!0}})],X.prototype,"renderingRule",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],X.prototype,"pixelSize",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],X.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({type:We.Z,json:{read:{source:"time"},write:{target:"time"}}})],X.prototype,"timeExtent",void 0),X=Ke=(0,s._)([(0,_.j)("esri.rest.support.ImageHistogramParameters")],X);const dt=X;var $e;let N=$e=class extends Q.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,ge.Ji)(n),r[a]=JSON.stringify(n.toJSON()))}set mosaicRule(n){let r=n;r&&r.mosaicMethod&&(r=G.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(n,r,a){null!=n&&(r[a]=JSON.stringify(n.toJSON()))}set renderingRule(n){let r=n;r&&r.rasterFunction&&(r=I.Z.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("renderingRule",r)}writeRenderingRule(n,r,a){null!=n&&(r[a]=JSON.stringify(n.toJSON())),n.rasterFunctionDefinition&&(r[a]=JSON.stringify(n.rasterFunctionDefinition))}writeRenderingRules(n,r,a){null!=n&&(r[a]=JSON.stringify(n.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(n,r,a){null!=n&&(r[a]=JSON.stringify(n))}writeTimeExtent(n,r,a){if(null!=n){const e=(0,f.pC)(n.start)?n.start.getTime():null,t=(0,f.pC)(n.end)?n.end.getTime():null;r[a]=null!=e?null!=t?`${e},${t}`:`${e}`:null}}clone(){return new $e((0,z.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,s._)([(0,l.Cb)({json:{write:!0}})],N.prototype,"geometry",void 0),(0,s._)([(0,T.c)("geometry")],N.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:G,json:{write:!0}})],N.prototype,"mosaicRule",null),(0,s._)([(0,T.c)("mosaicRule")],N.prototype,"writeMosaicRule",null),(0,s._)([(0,l.Cb)({type:I.Z,json:{write:!0}})],N.prototype,"renderingRule",null),(0,s._)([(0,T.c)("renderingRule")],N.prototype,"writeRenderingRule",null),(0,s._)([(0,l.Cb)({type:[I.Z],json:{write:!0}})],N.prototype,"renderingRules",void 0),(0,s._)([(0,T.c)("renderingRules")],N.prototype,"writeRenderingRules",null),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],N.prototype,"pixelSize",void 0),(0,s._)([(0,T.c)("pixelSize")],N.prototype,"writePixelSize",null),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],N.prototype,"returnGeometry",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],N.prototype,"returnCatalogItems",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],N.prototype,"returnPixelValues",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],N.prototype,"maxItemCount",void 0),(0,s._)([(0,l.Cb)({type:We.Z,json:{write:{target:"time"}}})],N.prototype,"timeExtent",void 0),(0,s._)([(0,T.c)("timeExtent")],N.prototype,"writeTimeExtent",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],N.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],N.prototype,"viewId",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],N.prototype,"processAsMultidimensional",void 0),N=$e=(0,s._)([(0,_.j)("esri.rest.support.ImageIdentifyParameters")],N);const yt=N;var Xe;let le=Xe=class extends Q.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(n,r,a){r.geometries={geometryType:"esriGeometryPoint",geometries:n.map(e=>e.toJSON())}}clone(){return new Xe({geometries:this.geometries?.map(n=>n.clone())??[],rasterId:this.rasterId})}};(0,s._)([(0,l.Cb)({type:[q.Z],json:{write:!0}})],le.prototype,"geometries",void 0),(0,s._)([(0,T.c)("geometries")],le.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:A.z8,json:{write:!0}})],le.prototype,"rasterId",void 0),le=Xe=(0,s._)([(0,_.j)("esri.rest.support.ImagePixelLocationParameters")],le);const ar=le;var qe;let L=qe=class extends Q.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,ge.Ji)(n),r[a]=n.toJSON())}set locations(n){if(n?.length){const r=new kt.Z({spatialReference:n[0].spatialReference});r.points=n.map(a=>[a.x,a.y]),this._set("locations",n),this.geometry=r}}clone(){return new qe((0,z.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,s._)([(0,l.Cb)({types:et.qM,json:{read:ge.im}})],L.prototype,"geometry",void 0),(0,s._)([(0,T.c)("geometry")],L.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)()],L.prototype,"locations",null),(0,s._)([(0,l.Cb)({type:String,json:{type:H.c.jsonValues,read:H.c.read,write:H.c.write}})],L.prototype,"interpolation",void 0),(0,s._)([(0,l.Cb)({type:G,json:{write:!0}})],L.prototype,"mosaicRule",void 0),(0,s._)([(0,l.Cb)({type:[String],json:{write:!0}})],L.prototype,"outFields",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],L.prototype,"pixelSize",void 0),(0,s._)([(0,l.Cb)({type:String,json:{write:!0}})],L.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],L.prototype,"returnFirstValueOnly",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],L.prototype,"sampleDistance",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],L.prototype,"sampleCount",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],L.prototype,"sliceId",void 0),(0,s._)([(0,l.Cb)({type:We.Z,json:{read:{source:"time"},write:{target:"time"}}})],L.prototype,"timeExtent",void 0),L=qe=(0,s._)([(0,_.j)("esri.rest.support.ImageSampleParameters")],L);const or=L;var lr=m(37084);const Ye=(0,Te.w)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),ur=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),pr=(0,l.Eg)(A.q9,{min:0,max:255}),mr=n=>{let r=class extends n{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new D({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(i=>"number"==typeof i))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?G.fromJSON(t):null}get fieldsIndex(){return this.fields?new Zt.Z(this.fields):null}set format(e){e&&ur.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=G.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?G.fromJSON(i):this._isMosaicRuleSupported(t)?G.fromJSON(t):null}writeMosaicRule(e,t,i){let o=this.mosaicRule;const u=this.definitionExpression;o?u&&u!==o.where&&(o=o.clone(),o.where=u):u&&(o=new G({where:u})),this._isValidCustomizedMosaicRule(o)&&(t[i]=o.toJSON())}get multidimensionalInfo(){return(0,f.pC)(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=pr(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter(o=>"esriFieldTypeOID"===o.type||"oid"===o.type);e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return(0,Rt.mN)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const o=t?.layerDefinition?.drawingInfo?.renderer,u=(0,Pe.ij)(o,i);return null==u?null:("vector-field"===u.type&&t.symbolTileSize&&!o.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),rt(u)||tt.Z.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new k.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new k.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),o=new k.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?(0,z.d9)(this.fields):[];u.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(d=>"none"===d.name.toLowerCase())&&u.push(o),(0,f.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(d=>"none"!==d.name.toLowerCase()).forEach(d=>{u.push(new k.Z({name:"Raster.ServicePixelValue."+d.name,alias:d.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new k.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new k.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if((0,f.pC)(p)){const d=p.fields.filter(c=>"esriFieldTypeOID"!==c.type&&"value"!==c.name.toLowerCase()).map(c=>{const y=(0,z.d9)(c);return y.name=e+c.name,y});u=u.concat(d)}return u}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=I.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?I.Z.fromJSON({rasterFunctionDefinition:t.renderingRule}):I.Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const o=e.toJSON();t[i]=o.rasterFunctionDefinition?o.rasterFunctionDefinition:o}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?ee.Z.fromJSON(i):null}readPixelType(e){return Ye.fromJSON(e)||e}writePixelType(e,t,i){((0,f.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=Ye.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var i=this;return(0,w.Z)(function*(){let o=e;const{renderer:u,symbolizer:p,pixelFilter:d,bandIds:c}=i;if(!i._isPicture()&&u&&p&&!d){const y=JSON.stringify(i._cachedRendererJson)!==JSON.stringify(u.toJSON()),h=i._rasterJobHandler.instance;if(h){y&&(p.bind(),yield h.updateSymbolizer(p,t),i._cachedRendererJson=u.toJSON());const v=yield h.symbolize({bandIds:c,...e},t);o={extent:e.extent,pixelBlock:v}}else o={extent:e.extent,pixelBlock:p.symbolize({bandIds:c,...e})}}return o})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeAngles(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new U.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,A.TJ)(sr,e).clone(),function Wt(n,r,a){return Ze.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computePixelSpaceLocations(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new U.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,A.TJ)(ar,e).clone(),function Kt(n,r,a){return Ee.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeHistograms(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new U.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,A.TJ)(dt,e).clone();const{raster:o,mosaicRule:u,renderingRule:p}=i;return p&&null==e.renderingRule&&(e.renderingRule=p),u&&null==e.mosaicRule&&(e.mosaicRule=u),o&&null==e.raster&&(e.raster=o),function Xt(n,r,a){return Le.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new U.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,A.TJ)(dt,e).clone();const{raster:o,mosaicRule:u,renderingRule:p}=i;return p&&null==e.renderingRule&&(e.renderingRule=p),u&&null==e.mosaicRule&&(e.mosaicRule=u),o&&null==e.raster&&(e.raster=o),function $t(n,r,a){return Je.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return(0,f.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i,o={}){var u=this;return(0,w.Z)(function*(){if(null==e||null==t||null==i)throw new U.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(u.renderer||u.symbolizer){const c=yield u.generateRasterInfo(u.renderingRule,{signal:o.signal});c&&(u.rasterInfo=c)}const p=u.getExportImageServiceParameters(e,t,i,o.timeExtent);if(null==p){if(o.requestAsImageElement&&u._canRequestImageElement(u.format)){const g=document.createElement("canvas");return g.width=t,g.height=i,{imageOrCanvasElement:g}}const c=(u.bandIds?.length||u.rasterInfo?.bandCount)??0,y=t*i,h=u.rasterInfo?.pixelType??"unknown",v=[];for(let g=0;g<c;g++)v.push(je.Z.createEmptyBand(h,y));return{pixelData:{pixelBlock:new je.Z({width:t,height:i,pixels:v,mask:new Uint8Array(y),pixelType:h}),extent:e}}}return u._requestArrayBuffer({imageServiceParameters:p,imageProps:{extent:e,width:t,height:i,format:u.format},requestAsImageElement:o.requestAsImageElement&&!u.pixelFilter||!1,signal:o.signal})})()}fetchKeyProperties(e){return(0,j.default)(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new U.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,j.default)(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then(t=>ot.default.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return function nr(n,r,a){return Ge.apply(this,arguments)}(a(this.parsedUrl),e,i)}getCatalogItemICSInfo(e,t){var i=this;return(0,w.Z)(function*(){const{data:o}=yield(0,j.default)(a(i.parsedUrl)+"/"+e+"/info/ics",{query:i._getQueryParams(),...t}),u=o&&o.ics;if(!u)return;let p=null;try{p=(yield(0,j.default)(a(i.parsedUrl)+"/"+e+"/info",{query:i._getQueryParams(),...t})).data.extent}catch{}if(!p||!p.spatialReference)return{ics:u,icsToPixelTransform:null,icsExtent:null,northDirection:null};const d=i.version>=10.7?(0,j.default)(a(i.parsedUrl)+"/"+e+"/info/icstopixel",{query:i._getQueryParams(),...t}).then(P=>P.data).catch(()=>({})):{},c=p.spatialReference,y={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[p]}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},h=(0,j.default)(a(i.parsedUrl)+"/project",{query:i._getQueryParams(y),...t}).then(P=>P.data).catch(()=>({})),g=(p.xmin+p.xmax)/2,R=(p.ymax-p.ymin)/6,C=p.ymin+R,x=[];for(let P=0;P<5;P++)x.push({x:g,y:C+R*P});const F={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:x}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},S=(0,j.default)(a(i.parsedUrl)+"/project",{query:i._getQueryParams(F),...t}).then(P=>P.data).catch(()=>({})),b=yield Promise.all([d,h,S]);let V=b[0].ipxf;if(null==V){const P=u.geodataXform?.xf_0;"topup"===P?.name?.toLowerCase()&&6===P?.coefficients?.length&&(V={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:P.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const O=we.Z.fromJSON(b[1]&&b[1].geometries&&b[1].geometries[0]);O&&(O.spatialReference=new ee.Z({wkid:0,imageCoordinateSystem:u}));const M=b[2].geometries?b[2].geometries.filter(P=>null!=P&&null!=P.x&&null!=P.y&&"NaN"!==P.x&&"NaN"!==P.y):[],re=M.length;if(re<3)return{ics:u,icsToPixelTransform:V,icsExtent:O,northDirection:null};let ue=0,Fe=0,fe=0,ie=0;for(let P=0;P<re;P++)ue+=M[P].x,Fe+=M[P].y,fe+=M[P].x*M[P].x,ie+=M[P].x*M[P].y;const W=(re*ie-ue*Fe)/(re*fe-ue*ue);let ve=0;const ht=M[4].x>M[0].x,gt=M[4].y>M[0].y;return W===1/0?ve=gt?90:270:0===W?ve=ht?0:180:W>0?ve=ht?180*Math.atan(W)/Math.PI:180*Math.atan(W)/Math.PI+180:W<0&&(ve=gt?180+180*Math.atan(W)/Math.PI:360+180*Math.atan(W)/Math.PI),{ics:u,icsToPixelTransform:V,icsExtent:O,northDirection:ve}})()}generateRasterInfo(e,t){var i=this;return(0,w.Z)(function*(){if(i.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||i._isVectorFieldResampleFunction(e)))return i.serviceRasterInfo;const o=function cr(n){if(!n)return null;const r=JSON.stringify(n).match(/"rasterFunction":"(.*?")/gi)?.map(a=>a.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}(e);if(!o)return null;if(i._functionRasterInfos[o])return i._functionRasterInfos[o];const u=i._generateRasterInfo(e,t);i._functionRasterInfos[o]=u;try{return yield u}catch{return i._functionRasterInfos[o]=null,null}})()}getExportImageServiceParameters(e,t,i,o){const u=ct((e=e.clone().shiftCentralMeridian()).spatialReference,a(this.parsedUrl));this.pixelType!==this.serviceRasterInfo?.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:d,noData:c}=p;let{renderingRule:y}=p;const h=this.renderingRule?.rasterFunctionDefinition,v=!this.renderer||"raster-stretch"===this.renderer.type;if(d?.length&&this._hasRenderingRule(this.renderingRule)&&!h&&v){const x={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:d}};if("Stretch"===y.rasterFunction)x.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=x;else if("Colormap"===y.rasterFunction){const F=y.rasterFunctionArguments.Raster;"Stretch"===F?.rasterFunction?(x.rasterFunctionArguments.Raster=F.rasterFunctionArguments.Raster,F.rasterFunctionArguments.Raster=x):(x.rasterFunctionArguments.Raster=F,y.rasterFunctionArguments.Raster=x)}else x.rasterFunctionArguments.Raster=y,y=x;p.bandIds=void 0}else p.bandIds=d?.join(",");c instanceof Array&&c.length>0&&(p.noData=c.join(","));const g=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,o):null;p.mosaicRule=(0,f.pC)(g)?JSON.stringify(g):null;const{multidimensionalSubset:R}=this;if(R&&(0,f.pC)(g)&&g.multidimensionalDefinition&&(0,Se.nb)(g.multidimensionalDefinition,R,!0))return null;p.renderingRule=this._getRenderingRuleString(I.Z.fromJSON(y));const C={};if(o){const{start:x,end:F}=o.toJSON();let S;if(x&&F&&x===F?(C.time=""+x,S=[x]):null==x&&null==F||(C.time=`${x??"null"},${F??"null"}`,S=null!=x&&null!=F?[x,F]:[x??F]),S&&R){const b=R.dimensions.find(({name:O})=>"StdTime"===O);if(2===S.length&&b.extent.length){if(S[0]=Math.max(S[0],b.extent[0]),S[1]=Math.min(S[1],b.extent[1]??b.extent[0]),S[1]<S[0])return null;C.time=S.join()}const V=new De.Z({variableName:"",dimensionName:"StdTime",isSlice:1===S.length,values:S});if((0,Se.nb)([V],R,!0))return null}}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+i,...p,...C}}getSamples(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new U.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,A.TJ)(or,e).clone();const{raster:o}=i;return o&&null==e.raster&&(e.raster=o),function qt(n,r,a){return ze.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}identify(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new U.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,A.TJ)(yt,e).clone();const{raster:o,mosaicRule:u,renderingRule:p}=i;if(p&&null==e.renderingRule&&(e.renderingRule=p),u&&null==e.mosaicRule){const d=i._combineMosaicRuleWithTimeExtent(u,e.timeExtent);e.mosaicRule=(0,f.Wg)(d)}return o&&null==e.raster&&(e.raster=o),pt(i.url,e,i._getRequestOptions(t))})()}createQuery(){const e=new Qe.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}queryRasters(e,t){var i=this;return(0,w.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,Yt.e)(i.url,e,t)})()}queryObjectIds(e,t){var i=this;return(0,w.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,rr.G)(i.url,e,t)})()}queryRasterCount(e,t){var i=this;return(0,w.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,tr.P)(i.url,e,t)})()}queryVisibleRasters(e,t){var i=this;return(0,w.Z)(function*(){if(!e)throw new U.Z("imagery-layer: query-visible-rasters","missing query parameter");yield i.load();const{pixelSize:o,returnDomainValues:u,returnTopmostRaster:p,showNoDataRecords:d}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,y=null,h=null;const v="raster.servicepixelvalue",g=i._rasterFunctionNamesIndex;if((0,f.pC)(e.outFields)&&(c=e.outFields.some(b=>!b.toLowerCase().includes(v)),i.version>=10.4)){const b=e.outFields.filter(O=>O.toLowerCase().includes(v)&&O.length>v.length).map(O=>{const M=O.slice(v.length+1);return[i._updateRenderingRulesFunctionName(M,g),M]});y=b.map(O=>new I.Z({functionName:O[0]})),h=b.map(O=>O[1]);const{renderingRule:V}=i;0===y.length?V?.functionName?(y.push(V),h.push(V.functionName)):y=null:V?.functionName&&!y.some(O=>O.functionName===V.functionName)&&(y.push(V),h.push(V.functionName))}const R=(0,f.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(i.spatialReference),C=e.timeExtent||i.timeExtent,x=i._combineMosaicRuleWithTimeExtent(i.exportImageServiceParameters.mosaicRule,C),F=i._getQueryParams({geometry:e.geometry,timeExtent:C,mosaicRule:x,renderingRule:i.version<10.4?i.renderingRule:null,renderingRules:y,pixelSize:o,returnCatalogItems:c,returnGeometry:R,raster:i.raster,maxItemCount:p?1:null});delete F.f;const S=new yt(F);try{yield i.generateRasterInfo(i.renderingRule);const b=yield pt(i.url,S,{signal:t?.signal,query:{...i.customParameters}}),V=e.outFields,O=null!=b.value&&b.value.toLowerCase().includes("nodata");if(!c||R||!b?.catalogItems?.features.length||!d&&O)return i._processVisibleRastersResponse(b,{returnDomainValues:u,templateRRFunctionNames:h,showNoDataRecords:d,templateFields:V});const M=i.objectIdField||"ObjectId",re=b.catalogItems?.features??[],ue=re.map(ie=>ie.attributes?.[M]),Fe=new Qe.Z({objectIds:ue,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[M]}),fe=yield i.queryRasters(Fe);return fe?.features?.length&&fe.features.forEach(ie=>{re.forEach(W=>{W.attributes[M]===ie.attributes[M]&&(W.geometry=new er.Z(ie.geometry),(0,f.pC)(e.outSpatialReference)&&(W.geometry.spatialReference=e.outSpatialReference))})}),i._processVisibleRastersResponse(b,{returnDomainValues:u,templateRRFunctionNames:h,showNoDataRecords:d,templateFields:V})}catch{throw new U.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})()}fetchVariableStatisticsHistograms(e,t){var i=this;return(0,w.Z)(function*(){const o=(0,j.default)(a(i.parsedUrl)+"/statistics",{query:i._getQueryParams({variable:e}),signal:t}).then(d=>d.data?.statistics),u=(0,j.default)(a(i.parsedUrl)+"/histograms",{query:i._getQueryParams({variable:e}),signal:t}).then(d=>d.data?.histograms),p=yield Promise.all([o,u]);return p[0]&&p[0].forEach(d=>{d.avg=d.mean,d.stddev=d.standardDeviation}),{statistics:p[0]||null,histograms:p[1]||null}})()}createFlowMesh(e,t){var i=this;return(0,w.Z)(function*(){const o=i._rasterJobHandler.instance;return o?o.createFlowMesh(e,t):(0,lr.GE)(e.meshType,e.simulationSettings,e.flowData,(0,f.pC)(t.signal)?t.signal:(new AbortController).signal)})()}getMultidimensionalSubsetVariables(e){return(0,Se.jj)(this.multidimensionalSubset,e??this.multidimensionalInfo)}_fetchService(e){var t=this;return(0,w.Z)(function*(){yield t._fetchServiceInfo(e),t.rasterInfo||(t.rasterInfo=t.serviceRasterInfo);const i=t.sourceJSON,o=(0,f.pC)(t.serviceRasterInfo)?Promise.resolve(t.serviceRasterInfo):(0,mt.g)(a(t.parsedUrl),i,{signal:e,query:t._getQueryParams()}).then(d=>(t._set("serviceRasterInfo",d),d)),u=t._hasRenderingRule(t.renderingRule)?t.generateRasterInfo(t.renderingRule,{signal:e}):null,p=t._getRasterFunctionInfos();return Promise.all([o,u,p]).then(d=>{t._set("rasterInfo",d[1]?d[1]:d[0]),d[2]&&t._set("rasterFunctionInfos",d[2]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t._set("renderer",null),tt.Z.getLogger(t.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._set("renderer",t._configRenderer(t.renderer)),t.addHandles([(0,vt.YP)(()=>t.renderingRule,y=>{(t.renderer||t.symbolizer||t.popupEnabled&&t.popupTemplate)&&t.generateRasterInfo(y).then(h=>{h&&(t.rasterInfo=h)})})]);const{serviceRasterInfo:c}=t;c&&(0,f.pC)(c.multidimensionalInfo)&&t._updateMultidimensionalDefinition(c)})})()}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo;if((0,f.Wi)(e)||(0,f.Wi)(this.multidimensionalInfo)||(0,f.Wi)(t)||(0,f.Wi)(i?.startField))return e;const{startField:o}=i,u=this.multidimensionalInfo.variables.some(g=>g.dimensions.some(R=>R.name===o))?o:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(g=>g.dimensionName!==u),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const p=e.multidimensionalDefinition.filter(g=>g.dimensionName===u),d=(0,f.pC)(t.start)?t.start.getTime():null,c=(0,f.pC)(t.end)?t.end.getTime():null,y=null==d||null==c||d===c,h=y?[d||c]:[[d,c]],v=this.version>=10.8;if(p.length)p.forEach(g=>{g.dimensionName===u&&(v?(g.dimensionName=null,g.isSlice=!1,g.values=[]):(g.isSlice=y,g.values=h))});else if(!v){const g=e.multidimensionalDefinition.filter(R=>null!=R.variableName&&null==R.dimensionName);g.length?g.forEach(R=>{R.dimensionName=u,R.isSlice=y,R.values=h}):e.multidimensionalDefinition.push(new De.Z({variableName:"",dimensionName:u,isSlice:y,values:h}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,f.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var i=this;return(0,w.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new U.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,f.pC)(e)?(0,A.TJ)(Qe.Z,e):i.createQuery(),t=i._getRequestOptions(t),i.raster&&(t.query={...t.query,raster:i.raster}),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,w.Z)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new Jt.Z;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>{}),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return"unique-value"===e.type&&this._hasRenderingRule(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,Ce.U0)(t).includes(e.type)}_fetchCapabilities(e){var t=this;return(0,w.Z)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,w.Z)(function*(){let i=t.sourceJSON;if(!i){const{data:o,ssl:u}=yield(0,j.default)(a(t.parsedUrl),{query:t._getQueryParams(),signal:e});i=o,t.sourceJSON=i,u&&(t.url=t.url.replace(/^http:/i,"https:"))}if(i.capabilities?.toLowerCase().split(",").map(o=>o.trim()).indexOf("tilesonly")>-1)throw new U.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(i,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){return!!e&&(this._isMosaicDataset(e)||e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1))}_isVectorFieldResampleFunction(e){if((0,f.Wi)(e))return!1;const{functionName:t,functionArguments:i}=e,o="resample"===t?.toLowerCase(),u=i?.ResampleType||i?.resampleType;return o&&(7===u||10===u)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const i=(0,Ce.YD)(this.rasterInfo);!i||3===this.rasterInfo.bandCount&&0===i[0]&&1===i[1]&&2===i[2]||(this.bandIds=i)}e||(e=(0,Ce.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,Ce.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new zt.Z({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,f.pC)(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&(0,f.pC)(e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,Ve.J)(e,t,i)}_getRasterFunctionInfos(e){var t=this;return(0,w.Z)(function*(){const i=t.sourceJSON.rasterFunctionInfos;return t.loaded?i:i&&t.version>=10.3?1===i.length&&"none"===i[0].name.toLowerCase()?i:(yield(0,j.default)(a(t.parsedUrl)+"/rasterFunctionInfos",{query:t._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null})()}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}_requestArrayBuffer(e){var t=this;return(0,w.Z)(function*(){const{imageProps:i,requestAsImageElement:o,signal:u}=e;if(o&&t._canRequestImageElement(i.format))return{imageOrCanvasElement:(yield(0,j.default)(a(t.parsedUrl)+"/exportImage",{responseType:"image",query:t._getQueryParams({f:"image",...t.refreshParameters,...e.imageServiceParameters}),signal:u})).data,params:i};const p=t._initJobHandler(),d=(0,j.default)(a(t.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:t._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(yield Promise.all([d,p]))[0].data,y=i.format||"jpgpng";let h=y;if("bsq"!==h&&"bip"!==h&&(h=(0,Ve.y)(c)),!h)throw new U.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const v={signal:u};return{pixelData:{pixelBlock:yield"gif"===y||"bmp"===y||y.includes("png")&&("png"===h||"jpg"===h)?(0,Ve.J)(c,{useCanvas:!0,...i},v):t._decodePixelBlock(c,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:y},v),extent:i.extent},params:i}})()}_generateRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return(0,mt.N)(a(this.parsedUrl),e,i)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,Se.Tj)(e,{multidimensionalSubset:this.multidimensionalSubset});if((0,f.pC)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new G;const i=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&"none"!==this.renderingRule.functionName?.toLowerCase()&&t.forEach(o=>o.variableName=""),(!i||i&&i.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:o,showNoDataRecords:u,returnDomainValues:p,templateFields:d}=t,c=e.processedValues;let y=e.catalogItems&&e.catalogItems.features,h=e.properties&&e.properties.Values&&e.properties.Values.map(S=>S.replace(/ /gi,", "))||[];const v=this.objectIdField||"ObjectId",g="string"==typeof i&&i.toLowerCase().includes("nodata"),R=[];if(i&&!y&&!g){const S={};S[v]=0,h=[i],y=[new ft.Z(this.fullExtent,null,S)]}if(!y)return[];let C,x,F;this._updateResponseFieldNames(y,d),g&&!u&&(y=[]);for(let S=0;S<y.length;S++){if(C=y[S],null!=i){if(x=h[S],F=this.renderingRule&&c&&c.length>0&&o&&o.length>0&&o.includes(this.renderingRule.functionName)?c[o.indexOf(this.renderingRule.functionName)]:i,"nodata"===x.toLowerCase()&&!u)continue;const V="Raster.ServicePixelValue";C.attributes["Raster.ItemPixelValue"]=x,C.attributes[V]=F,this._updateFeatureWithMagDirValues(C,x);const O=this.fields&&this.fields.length>0;let M=this.renderingRule&&(0,f.pC)(this.serviceRasterInfo?.attributeTable)?O?x:i:F;this.renderingRule||(M=O?x:i),this._updateFeatureWithRasterAttributeTableValues(C,M)}if(C.sourceLayer=C.layer=this,p&&this._updateFeatureWithDomainValues(C),o&&c&&o.length===c.length)for(let b=0;b<o.length;b++)C.attributes["Raster.ServicePixelValue."+o[b]]=c[b];R.push(y[S])}return R}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo&&this.rasterInfo.attributeTable||this.serviceRasterInfo?.attributeTable;if((0,f.Wi)(i))return;const{features:o,fields:u}=i,p=u.map(y=>y.name).filter(y=>"value"===y.toLowerCase()),d=p&&p[0];if(!d)return;const c=o.filter(y=>y.attributes[d]===(null!=t?parseInt(t,10):null));c&&c[0]&&u.forEach(y=>{e.attributes[this._rasterAttributeTableFieldPrefix+y.name]=c[0].attributes[y.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map(c=>parseFloat(c)),o=i.map(c=>[c]),u=i.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new je.Z({height:1,width:1,pixelType:"f32",pixels:o,statistics:u});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:p,extent:new we.Z(0,0,0,0,this.spatialReference)});const d="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[p.pixels[0][0],p.pixels[1][0]]:(0,Lt.Tg)([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=d[0],e.attributes["Raster.Direction"]=d[1]}_updateFeatureWithDomainValues(e){(this.fields&&this.fields.filter(i=>i.domain&&"coded-value"===i.domain.type))?.forEach(i=>{const o=e.attributes[i.name];if(null!=o){const u=i.domain.codedValues.find(p=>p.code===o);u&&(e.attributes[i.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;(0,f.Wi)(i)||e.forEach(o=>{if(o&&o.attributes)for(const u of t){const p=i.get(u)?.name;p&&p!==u&&(o.attributes[u]=o.attributes[p],delete o.attributes[p])}})}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(h=>h.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:o,maxRecordCount:u}=e,p=t.includes("image"),d="esriImageServiceDataTypeElevation"===e.serviceDataType,c=!!(e.spatialReference||e.extent&&e.extent.spatialReference),y=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsMeasure:t.includes("mensuration")&&c,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&p,supportsProject:i>=10.3&&p,supportsComputeStatisticsHistograms:i>=10.4&&p,supportsQueryBoundary:i>=10.6&&p,supportsCalculateVolume:i>=10.7&&d,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:y,supportsDelete:y,supportsEditing:y,supportsUpdate:y,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!o?.supportsStatistics,supportsOrderBy:!!o?.supportsOrderBy,supportsDistinct:!!o?.supportsDistinct,supportsPagination:!!o?.supportsPagination,supportsStandardizedQueriesOnly:!!o?.useStandardizedQueries,supportsPercentileStatistics:!!o?.supportsPercentileStatistics,supportsCentroid:!!o?.supportsReturningGeometryCentroid,supportsDistance:!!o?.supportsQueryWithDistance,supportsExtent:!!o?.supportsReturningQueryExtent,supportsGeometryProperties:!!o?.supportsReturningGeometryProperties,supportsHavingClause:!!o?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!o?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};function a(e){return e?.path??""}return(0,s._)([(0,l.Cb)()],r.prototype,"_functionRasterInfos",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),(0,s._)([(0,E.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),(0,s._)([(0,l.Cb)()],r.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),(0,s._)([(0,l.Cb)()],r.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,l.Cb)({type:[A.z8],json:{write:!0}})],r.prototype,"bandIds",void 0),(0,s._)([(0,E.r)("bandIds")],r.prototype,"readBandIds",null),(0,s._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),(0,s._)([(0,E.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),(0,s._)([(0,l.Cb)({type:Number})],r.prototype,"compressionQuality",void 0),(0,s._)([(0,T.c)("compressionQuality")],r.prototype,"writeCompressionQuality",null),(0,s._)([(0,l.Cb)({type:Number})],r.prototype,"compressionTolerance",void 0),(0,s._)([(0,T.c)("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),(0,s._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),(0,s._)([(0,E.r)("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),(0,s._)([(0,l.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"rasterInfo",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,type:[k.Z]})],r.prototype,"fields",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"fieldsIndex",null),(0,s._)([(0,l.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],r.prototype,"format",null),(0,s._)([(0,E.r)("service","format",["serviceDataType"])],r.prototype,"readFormat",null),(0,s._)([(0,l.Cb)({type:we.Z})],r.prototype,"fullExtent",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),(0,s._)([(0,l.Cb)({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),(0,s._)([(0,l.Cb)({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),(0,s._)([(0,l.Cb)({type:String,json:{type:H.c.jsonValues,read:H.c.read,write:H.c.write}})],r.prototype,"interpolation",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"minScale",void 0),(0,s._)([(0,E.r)("service","minScale")],r.prototype,"readMinScale",null),(0,s._)([(0,l.Cb)()],r.prototype,"maxScale",void 0),(0,s._)([(0,E.r)("service","maxScale")],r.prototype,"readMaxScale",null),(0,s._)([(0,l.Cb)({type:G})],r.prototype,"mosaicRule",null),(0,s._)([(0,E.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),(0,s._)([(0,T.c)("mosaicRule")],r.prototype,"writeMosaicRule",null),(0,s._)([(0,l.Cb)()],r.prototype,"multidimensionalInfo",null),(0,s._)([(0,l.Cb)({type:Et.Z,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),(0,s._)([(0,l.Cb)({json:{type:A.z8}})],r.prototype,"noData",void 0),(0,s._)([(0,T.c)("noData")],r.prototype,"writeNoData",null),(0,s._)([(0,l.Cb)({type:String,json:{type:H.k.jsonValues,read:H.k.read,write:H.k.write}})],r.prototype,"noDataInterpretation",void 0),(0,s._)([(0,l.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),(0,s._)([(0,E.r)("objectIdField")],r.prototype,"readObjectIdField",null),(0,s._)([(0,l.Cb)({})],r.prototype,"geometryType",void 0),(0,s._)([(0,l.Cb)({})],r.prototype,"typeIdField",void 0),(0,s._)([(0,l.Cb)({})],r.prototype,"types",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"parsedUrl",null),(0,s._)([(0,l.Cb)({type:Function})],r.prototype,"pixelFilter",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"sourceType",void 0),(0,s._)([(0,E.r)("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),(0,s._)([(0,l.Cb)()],r.prototype,"viewId",void 0),(0,s._)([(0,l.Cb)({types:Pe.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Pe.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],r.prototype,"renderer",null),(0,s._)([(0,E.r)("renderer")],r.prototype,"readRenderer",null),(0,s._)([(0,T.c)("renderer")],r.prototype,"writeRenderer",null),(0,s._)([(0,l.Cb)()],r.prototype,"symbolizer",void 0),(0,s._)([(0,l.Cb)(Re.Oh)],r.prototype,"opacity",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"rasterFields",null),(0,s._)([(0,l.Cb)({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),(0,s._)([(0,l.Cb)({type:I.Z})],r.prototype,"renderingRule",null),(0,s._)([(0,E.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRenderingRule",null),(0,s._)([(0,T.c)("renderingRule")],r.prototype,"writeRenderingRule",null),(0,s._)([(0,l.Cb)()],r.prototype,"serviceDataType",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,type:ee.Z})],r.prototype,"spatialReference",void 0),(0,s._)([(0,E.r)("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),(0,s._)([(0,l.Cb)({json:{type:Ye.jsonValues}})],r.prototype,"pixelType",void 0),(0,s._)([(0,E.r)("pixelType")],r.prototype,"readPixelType",null),(0,s._)([(0,T.c)("pixelType")],r.prototype,"writePixelType",null),(0,s._)([(0,l.Cb)({constructOnly:!0,type:at.Z})],r.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"sourceJSON",void 0),(0,s._)([(0,l.Cb)(Re.HQ)],r.prototype,"url",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"version",void 0),(0,s._)([(0,E.r)("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=(0,s._)([(0,_.j)("esri.layers.mixins.ArcGISImageService")],r),r};var dr=m(65088),yr=m(552),hr=m(50107),gr=m(49286),fr=m(6647),vr=m(30346),Rr=m(99555),br=m(97941),Sr=m(5676),Cr=m(49430);let B=class extends((0,yr.h)((0,br.n)((0,Rr.M)((0,gr.q)((0,fr.I)(mr((0,vr.Q)((0,hr.N)((0,dr.Y)((0,ce.R)(de.Z))))))))))){constructor(...n){super(...n),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(n,r){return"string"==typeof n?{url:n,...r}:n}load(n){const r=(0,f.pC)(n)?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(me.r9).then(()=>this._fetchService(r))),Promise.resolve(this)}writeOperationalLayerType(n,r,a){r[a]="vector-field"===this.renderer?.type?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(n){const r=this.rasterFields,a=this.title,e=new Set;let t=!1,i=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,i="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const o=new Set;t&&o.add("raster.itempixelvalue");for(const u of r){const p=u.name.toLowerCase();o.has(p)||p.includes("raster.servicepixelvalue.")||e.add(u.name)}return i&&e.add("raster.magnitude").add("raster.direction"),(0,Cr.eZ)({fields:r,title:a},{...n,visibleFieldNames:e})}queryFeatures(n,r){return this.queryRasters(n,r).then(a=>{if(a?.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(n,r){return this.queryRasterCount(n,r)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(n){return(0,Sr.D)(this,n)}};(0,s._)([(0,l.Cb)(Re.rn)],B.prototype,"legendEnabled",void 0),(0,s._)([(0,l.Cb)({type:["show","hide"]})],B.prototype,"listMode",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),(0,s._)([(0,l.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],B.prototype,"operationalLayerType",void 0),(0,s._)([(0,T.c)("web-map","operationalLayerType")],B.prototype,"writeOperationalLayerType",null),(0,s._)([(0,l.Cb)(Re.C_)],B.prototype,"popupEnabled",void 0),(0,s._)([(0,l.Cb)({type:pe.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],B.prototype,"popupTemplate",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),(0,s._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),B=(0,s._)([(0,_.j)("esri.layers.ImageryLayer")],B);const xr=B},90463:(ke,ne,m)=>{m.d(ne,{P:()=>me});var s=m(15861),pe=m(2618),f=m(20477),ce=m(96854);function me(se,A,_){return l.apply(this,arguments)}function l(){return(l=(0,s.Z)(function*(se,A,_){const T=(0,pe.en)(se);return(0,f.executeQueryForCount)(T,ce.Z.from(A),{..._}).then(de=>de.data.count)})).apply(this,arguments)}},24865:(ke,ne,m)=>{m.d(ne,{G:()=>me});var s=m(15861),pe=m(2618),f=m(20477),ce=m(96854);function me(se,A,_){return l.apply(this,arguments)}function l(){return(l=(0,s.Z)(function*(se,A,_){const T=(0,pe.en)(se);return(0,f.executeQueryForIds)(T,ce.Z.from(A),{..._}).then(de=>de.data.objectIds)})).apply(this,arguments)}}}]);